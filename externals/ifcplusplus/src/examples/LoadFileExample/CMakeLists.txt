CMAKE_MINIMUM_REQUIRED (VERSION 3.7.2)

IF(NOT CMAKE_BUILD_TYPE)
	SET(CMAKE_BUILD_TYPE "Release")
ENDIF()

IF(NOT WIN32)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
ENDIF(NOT WIN32)


ADD_DEFINITIONS(-DIFCQUERY_STATIC_LIB)
ADD_DEFINITIONS(-DGLM_FORCE_CTOR_INIT)
ADD_DEFINITIONS(-DGLM_FORCE_XYZW_ONLY)
ADD_DEFINITIONS(-D_HAS_AUTO_PTR_ETC=1)
ADD_DEFINITIONS(-DUNICODE)
ADD_DEFINITIONS(-D_UNICODE)
ADD_DEFINITIONS(-DTHRUST_DEVICE_SYSTEM=THRUST_DEVICE_SYSTEM_CPP)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD C++17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if(NOT DEFINED USE_OPENMP)
  set(USE_OPENMP True)
endif()

if(USE_OPENMP)
  find_package(OpenMP)
endif()

LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/IfcPlusPlus/Debug)
LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/IfcPlusPlus/${CMAKE_BUILD_TYPE})

ADD_EXECUTABLE(LoadFileExample
    ${IFCPP_SOURCE_DIR}/examples/LoadFileExample/src/main.cpp
)

set_target_properties(LoadFileExample PROPERTIES DEBUG_POSTFIX "d")
set_target_properties(LoadFileExample PROPERTIES CXX_STANDARD 17)
set_target_properties(LoadFileExample PROPERTIES VS_DEBUGGER_ENVIRONMENT "PATH=../../IfcPlusPlus/Debug;../../IfcPlusPlus/Release;$(PATH)") # is there a way to set Debug/Release by one variable?

if(OpenMP_CXX_FOUND)
	TARGET_LINK_LIBRARIES(LoadFileExample optimized IfcPlusPlus OpenMP::OpenMP_CXX debug IfcPlusPlusd )
else(OpenMP_CXX_FOUND)
	TARGET_LINK_LIBRARIES(LoadFileExample optimized IfcPlusPlus debug IfcPlusPlusd)
endif()

IF(BUILD_STATIC_LIBRARY)
	ADD_DEFINITIONS(-DIFCQUERY_STATIC_LIB)
ENDIF()

TARGET_INCLUDE_DIRECTORIES(LoadFileExample
    PRIVATE
	${CMAKE_CURRENT_SOURCE_DIR}/src
    ${CMAKE_CURRENT_SOURCE_DIR}/src
    ${CMAKE_CURRENT_SOURCE_DIR}/src/external
	${CMAKE_CURRENT_SOURCE_DIR}/src/external/RapidJSON
	${CMAKE_CURRENT_SOURCE_DIR}/src
	${IFCPP_SOURCE_DIR}/IfcPlusPlus/src
	${IFCPP_SOURCE_DIR}/IfcPlusPlus/src/ifcpp/IFC4X3/include
)

INSTALL(
    TARGETS LoadFileExample
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION bin
    ARCHIVE DESTINATION lib
)
