/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#include <map>
#include <functional>
#include "ifcpp/model/BasicTypes.h"
#include "lib/IfcActionRequest.cpp"
#include "lib/IfcActor.cpp"
#include "lib/IfcActorRole.cpp"
#include "lib/IfcActuator.cpp"
#include "lib/IfcActuatorType.cpp"
#include "lib/IfcAddress.cpp"
#include "lib/IfcAdvancedBrep.cpp"
#include "lib/IfcAdvancedBrepWithVoids.cpp"
#include "lib/IfcAdvancedFace.cpp"
#include "lib/IfcAirTerminal.cpp"
#include "lib/IfcAirTerminalBox.cpp"
#include "lib/IfcAirTerminalBoxType.cpp"
#include "lib/IfcAirTerminalType.cpp"
#include "lib/IfcAirToAirHeatRecovery.cpp"
#include "lib/IfcAirToAirHeatRecoveryType.cpp"
#include "lib/IfcAlarm.cpp"
#include "lib/IfcAlarmType.cpp"
#include "lib/IfcAlignment.cpp"
#include "lib/IfcAlignmentCant.cpp"
#include "lib/IfcAlignmentCantSegment.cpp"
#include "lib/IfcAlignmentHorizontal.cpp"
#include "lib/IfcAlignmentHorizontalSegment.cpp"
#include "lib/IfcAlignmentParameterSegment.cpp"
#include "lib/IfcAlignmentSegment.cpp"
#include "lib/IfcAlignmentVertical.cpp"
#include "lib/IfcAlignmentVerticalSegment.cpp"
#include "lib/IfcAnnotation.cpp"
#include "lib/IfcAnnotationFillArea.cpp"
#include "lib/IfcApplication.cpp"
#include "lib/IfcAppliedValue.cpp"
#include "lib/IfcApproval.cpp"
#include "lib/IfcApprovalRelationship.cpp"
#include "lib/IfcArbitraryClosedProfileDef.cpp"
#include "lib/IfcArbitraryOpenProfileDef.cpp"
#include "lib/IfcArbitraryProfileDefWithVoids.cpp"
#include "lib/IfcAsset.cpp"
#include "lib/IfcAsymmetricIShapeProfileDef.cpp"
#include "lib/IfcAudioVisualAppliance.cpp"
#include "lib/IfcAudioVisualApplianceType.cpp"
#include "lib/IfcAxis1Placement.cpp"
#include "lib/IfcAxis2Placement2D.cpp"
#include "lib/IfcAxis2Placement3D.cpp"
#include "lib/IfcAxis2PlacementLinear.cpp"
#include "lib/IfcBSplineCurve.cpp"
#include "lib/IfcBSplineCurveWithKnots.cpp"
#include "lib/IfcBSplineSurface.cpp"
#include "lib/IfcBSplineSurfaceWithKnots.cpp"
#include "lib/IfcBeam.cpp"
#include "lib/IfcBeamType.cpp"
#include "lib/IfcBearing.cpp"
#include "lib/IfcBearingType.cpp"
#include "lib/IfcBlobTexture.cpp"
#include "lib/IfcBlock.cpp"
#include "lib/IfcBoiler.cpp"
#include "lib/IfcBoilerType.cpp"
#include "lib/IfcBooleanClippingResult.cpp"
#include "lib/IfcBooleanResult.cpp"
#include "lib/IfcBorehole.cpp"
#include "lib/IfcBoundaryCondition.cpp"
#include "lib/IfcBoundaryCurve.cpp"
#include "lib/IfcBoundaryEdgeCondition.cpp"
#include "lib/IfcBoundaryFaceCondition.cpp"
#include "lib/IfcBoundaryNodeCondition.cpp"
#include "lib/IfcBoundaryNodeConditionWarping.cpp"
#include "lib/IfcBoundedCurve.cpp"
#include "lib/IfcBoundedSurface.cpp"
#include "lib/IfcBoundingBox.cpp"
#include "lib/IfcBoxedHalfSpace.cpp"
#include "lib/IfcBridge.cpp"
#include "lib/IfcBridgePart.cpp"
#include "lib/IfcBuilding.cpp"
#include "lib/IfcBuildingElementPart.cpp"
#include "lib/IfcBuildingElementPartType.cpp"
#include "lib/IfcBuildingElementProxy.cpp"
#include "lib/IfcBuildingElementProxyType.cpp"
#include "lib/IfcBuildingStorey.cpp"
#include "lib/IfcBuildingSystem.cpp"
#include "lib/IfcBuiltElement.cpp"
#include "lib/IfcBuiltElementType.cpp"
#include "lib/IfcBuiltSystem.cpp"
#include "lib/IfcBurner.cpp"
#include "lib/IfcBurnerType.cpp"
#include "lib/IfcCShapeProfileDef.cpp"
#include "lib/IfcCableCarrierFitting.cpp"
#include "lib/IfcCableCarrierFittingType.cpp"
#include "lib/IfcCableCarrierSegment.cpp"
#include "lib/IfcCableCarrierSegmentType.cpp"
#include "lib/IfcCableFitting.cpp"
#include "lib/IfcCableFittingType.cpp"
#include "lib/IfcCableSegment.cpp"
#include "lib/IfcCableSegmentType.cpp"
#include "lib/IfcCaissonFoundation.cpp"
#include "lib/IfcCaissonFoundationType.cpp"
#include "lib/IfcCartesianPoint.cpp"
#include "lib/IfcCartesianPointList.cpp"
#include "lib/IfcCartesianPointList2D.cpp"
#include "lib/IfcCartesianPointList3D.cpp"
#include "lib/IfcCartesianTransformationOperator.cpp"
#include "lib/IfcCartesianTransformationOperator2D.cpp"
#include "lib/IfcCartesianTransformationOperator2DnonUniform.cpp"
#include "lib/IfcCartesianTransformationOperator3D.cpp"
#include "lib/IfcCartesianTransformationOperator3DnonUniform.cpp"
#include "lib/IfcCenterLineProfileDef.cpp"
#include "lib/IfcChiller.cpp"
#include "lib/IfcChillerType.cpp"
#include "lib/IfcChimney.cpp"
#include "lib/IfcChimneyType.cpp"
#include "lib/IfcCircle.cpp"
#include "lib/IfcCircleHollowProfileDef.cpp"
#include "lib/IfcCircleProfileDef.cpp"
#include "lib/IfcCivilElement.cpp"
#include "lib/IfcCivilElementType.cpp"
#include "lib/IfcClassification.cpp"
#include "lib/IfcClassificationReference.cpp"
#include "lib/IfcClosedShell.cpp"
#include "lib/IfcClothoid.cpp"
#include "lib/IfcCoil.cpp"
#include "lib/IfcCoilType.cpp"
#include "lib/IfcColourRgb.cpp"
#include "lib/IfcColourRgbList.cpp"
#include "lib/IfcColourSpecification.cpp"
#include "lib/IfcColumn.cpp"
#include "lib/IfcColumnType.cpp"
#include "lib/IfcCommunicationsAppliance.cpp"
#include "lib/IfcCommunicationsApplianceType.cpp"
#include "lib/IfcComplexProperty.cpp"
#include "lib/IfcComplexPropertyTemplate.cpp"
#include "lib/IfcCompositeCurve.cpp"
#include "lib/IfcCompositeCurveOnSurface.cpp"
#include "lib/IfcCompositeCurveSegment.cpp"
#include "lib/IfcCompositeProfileDef.cpp"
#include "lib/IfcCompressor.cpp"
#include "lib/IfcCompressorType.cpp"
#include "lib/IfcCondenser.cpp"
#include "lib/IfcCondenserType.cpp"
#include "lib/IfcConic.cpp"
#include "lib/IfcConnectedFaceSet.cpp"
#include "lib/IfcConnectionCurveGeometry.cpp"
#include "lib/IfcConnectionGeometry.cpp"
#include "lib/IfcConnectionPointEccentricity.cpp"
#include "lib/IfcConnectionPointGeometry.cpp"
#include "lib/IfcConnectionSurfaceGeometry.cpp"
#include "lib/IfcConnectionVolumeGeometry.cpp"
#include "lib/IfcConstraint.cpp"
#include "lib/IfcConstructionEquipmentResource.cpp"
#include "lib/IfcConstructionEquipmentResourceType.cpp"
#include "lib/IfcConstructionMaterialResource.cpp"
#include "lib/IfcConstructionMaterialResourceType.cpp"
#include "lib/IfcConstructionProductResource.cpp"
#include "lib/IfcConstructionProductResourceType.cpp"
#include "lib/IfcConstructionResource.cpp"
#include "lib/IfcConstructionResourceType.cpp"
#include "lib/IfcContext.cpp"
#include "lib/IfcContextDependentUnit.cpp"
#include "lib/IfcControl.cpp"
#include "lib/IfcController.cpp"
#include "lib/IfcControllerType.cpp"
#include "lib/IfcConversionBasedUnit.cpp"
#include "lib/IfcConversionBasedUnitWithOffset.cpp"
#include "lib/IfcConveyorSegment.cpp"
#include "lib/IfcConveyorSegmentType.cpp"
#include "lib/IfcCooledBeam.cpp"
#include "lib/IfcCooledBeamType.cpp"
#include "lib/IfcCoolingTower.cpp"
#include "lib/IfcCoolingTowerType.cpp"
#include "lib/IfcCoordinateOperation.cpp"
#include "lib/IfcCoordinateReferenceSystem.cpp"
#include "lib/IfcCosineSpiral.cpp"
#include "lib/IfcCostItem.cpp"
#include "lib/IfcCostSchedule.cpp"
#include "lib/IfcCostValue.cpp"
#include "lib/IfcCourse.cpp"
#include "lib/IfcCourseType.cpp"
#include "lib/IfcCovering.cpp"
#include "lib/IfcCoveringType.cpp"
#include "lib/IfcCrewResource.cpp"
#include "lib/IfcCrewResourceType.cpp"
#include "lib/IfcCsgPrimitive3D.cpp"
#include "lib/IfcCsgSolid.cpp"
#include "lib/IfcCurrencyRelationship.cpp"
#include "lib/IfcCurtainWall.cpp"
#include "lib/IfcCurtainWallType.cpp"
#include "lib/IfcCurve.cpp"
#include "lib/IfcCurveBoundedPlane.cpp"
#include "lib/IfcCurveBoundedSurface.cpp"
#include "lib/IfcCurveSegment.cpp"
#include "lib/IfcCurveStyle.cpp"
#include "lib/IfcCurveStyleFont.cpp"
#include "lib/IfcCurveStyleFontAndScaling.cpp"
#include "lib/IfcCurveStyleFontPattern.cpp"
#include "lib/IfcCylindricalSurface.cpp"
#include "lib/IfcDamper.cpp"
#include "lib/IfcDamperType.cpp"
#include "lib/IfcDeepFoundation.cpp"
#include "lib/IfcDeepFoundationType.cpp"
#include "lib/IfcDerivedProfileDef.cpp"
#include "lib/IfcDerivedUnit.cpp"
#include "lib/IfcDerivedUnitElement.cpp"
#include "lib/IfcDimensionalExponents.cpp"
#include "lib/IfcDirection.cpp"
#include "lib/IfcDirectrixCurveSweptAreaSolid.cpp"
#include "lib/IfcDirectrixDerivedReferenceSweptAreaSolid.cpp"
#include "lib/IfcDiscreteAccessory.cpp"
#include "lib/IfcDiscreteAccessoryType.cpp"
#include "lib/IfcDistributionBoard.cpp"
#include "lib/IfcDistributionBoardType.cpp"
#include "lib/IfcDistributionChamberElement.cpp"
#include "lib/IfcDistributionChamberElementType.cpp"
#include "lib/IfcDistributionCircuit.cpp"
#include "lib/IfcDistributionControlElement.cpp"
#include "lib/IfcDistributionControlElementType.cpp"
#include "lib/IfcDistributionElement.cpp"
#include "lib/IfcDistributionElementType.cpp"
#include "lib/IfcDistributionFlowElement.cpp"
#include "lib/IfcDistributionFlowElementType.cpp"
#include "lib/IfcDistributionPort.cpp"
#include "lib/IfcDistributionSystem.cpp"
#include "lib/IfcDocumentInformation.cpp"
#include "lib/IfcDocumentInformationRelationship.cpp"
#include "lib/IfcDocumentReference.cpp"
#include "lib/IfcDoor.cpp"
#include "lib/IfcDoorLiningProperties.cpp"
#include "lib/IfcDoorPanelProperties.cpp"
#include "lib/IfcDoorStyle.cpp"
#include "lib/IfcDoorType.cpp"
#include "lib/IfcDraughtingPreDefinedColour.cpp"
#include "lib/IfcDraughtingPreDefinedCurveFont.cpp"
#include "lib/IfcDuctFitting.cpp"
#include "lib/IfcDuctFittingType.cpp"
#include "lib/IfcDuctSegment.cpp"
#include "lib/IfcDuctSegmentType.cpp"
#include "lib/IfcDuctSilencer.cpp"
#include "lib/IfcDuctSilencerType.cpp"
#include "lib/IfcEarthworksCut.cpp"
#include "lib/IfcEarthworksElement.cpp"
#include "lib/IfcEarthworksFill.cpp"
#include "lib/IfcEdge.cpp"
#include "lib/IfcEdgeCurve.cpp"
#include "lib/IfcEdgeLoop.cpp"
#include "lib/IfcElectricAppliance.cpp"
#include "lib/IfcElectricApplianceType.cpp"
#include "lib/IfcElectricDistributionBoard.cpp"
#include "lib/IfcElectricDistributionBoardType.cpp"
#include "lib/IfcElectricFlowStorageDevice.cpp"
#include "lib/IfcElectricFlowStorageDeviceType.cpp"
#include "lib/IfcElectricFlowTreatmentDevice.cpp"
#include "lib/IfcElectricFlowTreatmentDeviceType.cpp"
#include "lib/IfcElectricGenerator.cpp"
#include "lib/IfcElectricGeneratorType.cpp"
#include "lib/IfcElectricMotor.cpp"
#include "lib/IfcElectricMotorType.cpp"
#include "lib/IfcElectricTimeControl.cpp"
#include "lib/IfcElectricTimeControlType.cpp"
#include "lib/IfcElement.cpp"
#include "lib/IfcElementAssembly.cpp"
#include "lib/IfcElementAssemblyType.cpp"
#include "lib/IfcElementComponent.cpp"
#include "lib/IfcElementComponentType.cpp"
#include "lib/IfcElementQuantity.cpp"
#include "lib/IfcElementType.cpp"
#include "lib/IfcElementarySurface.cpp"
#include "lib/IfcEllipse.cpp"
#include "lib/IfcEllipseProfileDef.cpp"
#include "lib/IfcEnergyConversionDevice.cpp"
#include "lib/IfcEnergyConversionDeviceType.cpp"
#include "lib/IfcEngine.cpp"
#include "lib/IfcEngineType.cpp"
#include "lib/IfcEvaporativeCooler.cpp"
#include "lib/IfcEvaporativeCoolerType.cpp"
#include "lib/IfcEvaporator.cpp"
#include "lib/IfcEvaporatorType.cpp"
#include "lib/IfcEvent.cpp"
#include "lib/IfcEventTime.cpp"
#include "lib/IfcEventType.cpp"
#include "lib/IfcExtendedProperties.cpp"
#include "lib/IfcExternalInformation.cpp"
#include "lib/IfcExternalReference.cpp"
#include "lib/IfcExternalReferenceRelationship.cpp"
#include "lib/IfcExternalSpatialElement.cpp"
#include "lib/IfcExternalSpatialStructureElement.cpp"
#include "lib/IfcExternallyDefinedHatchStyle.cpp"
#include "lib/IfcExternallyDefinedSurfaceStyle.cpp"
#include "lib/IfcExternallyDefinedTextFont.cpp"
#include "lib/IfcExtrudedAreaSolid.cpp"
#include "lib/IfcExtrudedAreaSolidTapered.cpp"
#include "lib/IfcFace.cpp"
#include "lib/IfcFaceBasedSurfaceModel.cpp"
#include "lib/IfcFaceBound.cpp"
#include "lib/IfcFaceOuterBound.cpp"
#include "lib/IfcFaceSurface.cpp"
#include "lib/IfcFacetedBrep.cpp"
#include "lib/IfcFacetedBrepWithVoids.cpp"
#include "lib/IfcFacility.cpp"
#include "lib/IfcFacilityPart.cpp"
#include "lib/IfcFacilityPartCommon.cpp"
#include "lib/IfcFailureConnectionCondition.cpp"
#include "lib/IfcFan.cpp"
#include "lib/IfcFanType.cpp"
#include "lib/IfcFastener.cpp"
#include "lib/IfcFastenerType.cpp"
#include "lib/IfcFeatureElement.cpp"
#include "lib/IfcFeatureElementAddition.cpp"
#include "lib/IfcFeatureElementSubtraction.cpp"
#include "lib/IfcFillAreaStyle.cpp"
#include "lib/IfcFillAreaStyleHatching.cpp"
#include "lib/IfcFillAreaStyleTiles.cpp"
#include "lib/IfcFilter.cpp"
#include "lib/IfcFilterType.cpp"
#include "lib/IfcFireSuppressionTerminal.cpp"
#include "lib/IfcFireSuppressionTerminalType.cpp"
#include "lib/IfcFixedReferenceSweptAreaSolid.cpp"
#include "lib/IfcFlowController.cpp"
#include "lib/IfcFlowControllerType.cpp"
#include "lib/IfcFlowFitting.cpp"
#include "lib/IfcFlowFittingType.cpp"
#include "lib/IfcFlowInstrument.cpp"
#include "lib/IfcFlowInstrumentType.cpp"
#include "lib/IfcFlowMeter.cpp"
#include "lib/IfcFlowMeterType.cpp"
#include "lib/IfcFlowMovingDevice.cpp"
#include "lib/IfcFlowMovingDeviceType.cpp"
#include "lib/IfcFlowSegment.cpp"
#include "lib/IfcFlowSegmentType.cpp"
#include "lib/IfcFlowStorageDevice.cpp"
#include "lib/IfcFlowStorageDeviceType.cpp"
#include "lib/IfcFlowTerminal.cpp"
#include "lib/IfcFlowTerminalType.cpp"
#include "lib/IfcFlowTreatmentDevice.cpp"
#include "lib/IfcFlowTreatmentDeviceType.cpp"
#include "lib/IfcFooting.cpp"
#include "lib/IfcFootingType.cpp"
#include "lib/IfcFurnishingElement.cpp"
#include "lib/IfcFurnishingElementType.cpp"
#include "lib/IfcFurniture.cpp"
#include "lib/IfcFurnitureType.cpp"
#include "lib/IfcGeographicElement.cpp"
#include "lib/IfcGeographicElementType.cpp"
#include "lib/IfcGeometricCurveSet.cpp"
#include "lib/IfcGeometricRepresentationContext.cpp"
#include "lib/IfcGeometricRepresentationItem.cpp"
#include "lib/IfcGeometricRepresentationSubContext.cpp"
#include "lib/IfcGeometricSet.cpp"
#include "lib/IfcGeomodel.cpp"
#include "lib/IfcGeoslice.cpp"
#include "lib/IfcGeotechnicalAssembly.cpp"
#include "lib/IfcGeotechnicalElement.cpp"
#include "lib/IfcGeotechnicalStratum.cpp"
#include "lib/IfcGradientCurve.cpp"
#include "lib/IfcGrid.cpp"
#include "lib/IfcGridAxis.cpp"
#include "lib/IfcGridPlacement.cpp"
#include "lib/IfcGroup.cpp"
#include "lib/IfcHalfSpaceSolid.cpp"
#include "lib/IfcHeatExchanger.cpp"
#include "lib/IfcHeatExchangerType.cpp"
#include "lib/IfcHumidifier.cpp"
#include "lib/IfcHumidifierType.cpp"
#include "lib/IfcIShapeProfileDef.cpp"
#include "lib/IfcImageTexture.cpp"
#include "lib/IfcImpactProtectionDevice.cpp"
#include "lib/IfcImpactProtectionDeviceType.cpp"
#include "lib/IfcIndexedColourMap.cpp"
#include "lib/IfcIndexedPolyCurve.cpp"
#include "lib/IfcIndexedPolygonalFace.cpp"
#include "lib/IfcIndexedPolygonalFaceWithVoids.cpp"
#include "lib/IfcIndexedPolygonalTextureMap.cpp"
#include "lib/IfcIndexedTextureMap.cpp"
#include "lib/IfcIndexedTriangleTextureMap.cpp"
#include "lib/IfcInterceptor.cpp"
#include "lib/IfcInterceptorType.cpp"
#include "lib/IfcIntersectionCurve.cpp"
#include "lib/IfcInventory.cpp"
#include "lib/IfcIrregularTimeSeries.cpp"
#include "lib/IfcIrregularTimeSeriesValue.cpp"
#include "lib/IfcJunctionBox.cpp"
#include "lib/IfcJunctionBoxType.cpp"
#include "lib/IfcKerb.cpp"
#include "lib/IfcKerbType.cpp"
#include "lib/IfcLShapeProfileDef.cpp"
#include "lib/IfcLaborResource.cpp"
#include "lib/IfcLaborResourceType.cpp"
#include "lib/IfcLagTime.cpp"
#include "lib/IfcLamp.cpp"
#include "lib/IfcLampType.cpp"
#include "lib/IfcLibraryInformation.cpp"
#include "lib/IfcLibraryReference.cpp"
#include "lib/IfcLightDistributionData.cpp"
#include "lib/IfcLightFixture.cpp"
#include "lib/IfcLightFixtureType.cpp"
#include "lib/IfcLightIntensityDistribution.cpp"
#include "lib/IfcLightSource.cpp"
#include "lib/IfcLightSourceAmbient.cpp"
#include "lib/IfcLightSourceDirectional.cpp"
#include "lib/IfcLightSourceGoniometric.cpp"
#include "lib/IfcLightSourcePositional.cpp"
#include "lib/IfcLightSourceSpot.cpp"
#include "lib/IfcLine.cpp"
#include "lib/IfcLinearElement.cpp"
#include "lib/IfcLinearPlacement.cpp"
#include "lib/IfcLinearPositioningElement.cpp"
#include "lib/IfcLiquidTerminal.cpp"
#include "lib/IfcLiquidTerminalType.cpp"
#include "lib/IfcLocalPlacement.cpp"
#include "lib/IfcLoop.cpp"
#include "lib/IfcManifoldSolidBrep.cpp"
#include "lib/IfcMapConversion.cpp"
#include "lib/IfcMappedItem.cpp"
#include "lib/IfcMarineFacility.cpp"
#include "lib/IfcMarinePart.cpp"
#include "lib/IfcMaterial.cpp"
#include "lib/IfcMaterialClassificationRelationship.cpp"
#include "lib/IfcMaterialConstituent.cpp"
#include "lib/IfcMaterialConstituentSet.cpp"
#include "lib/IfcMaterialDefinition.cpp"
#include "lib/IfcMaterialDefinitionRepresentation.cpp"
#include "lib/IfcMaterialLayer.cpp"
#include "lib/IfcMaterialLayerSet.cpp"
#include "lib/IfcMaterialLayerSetUsage.cpp"
#include "lib/IfcMaterialLayerWithOffsets.cpp"
#include "lib/IfcMaterialList.cpp"
#include "lib/IfcMaterialProfile.cpp"
#include "lib/IfcMaterialProfileSet.cpp"
#include "lib/IfcMaterialProfileSetUsage.cpp"
#include "lib/IfcMaterialProfileSetUsageTapering.cpp"
#include "lib/IfcMaterialProfileWithOffsets.cpp"
#include "lib/IfcMaterialProperties.cpp"
#include "lib/IfcMaterialRelationship.cpp"
#include "lib/IfcMaterialUsageDefinition.cpp"
#include "lib/IfcMeasureWithUnit.cpp"
#include "lib/IfcMechanicalFastener.cpp"
#include "lib/IfcMechanicalFastenerType.cpp"
#include "lib/IfcMedicalDevice.cpp"
#include "lib/IfcMedicalDeviceType.cpp"
#include "lib/IfcMember.cpp"
#include "lib/IfcMemberType.cpp"
#include "lib/IfcMetric.cpp"
#include "lib/IfcMirroredProfileDef.cpp"
#include "lib/IfcMobileTelecommunicationsAppliance.cpp"
#include "lib/IfcMobileTelecommunicationsApplianceType.cpp"
#include "lib/IfcMonetaryUnit.cpp"
#include "lib/IfcMooringDevice.cpp"
#include "lib/IfcMooringDeviceType.cpp"
#include "lib/IfcMotorConnection.cpp"
#include "lib/IfcMotorConnectionType.cpp"
#include "lib/IfcNamedUnit.cpp"
#include "lib/IfcNavigationElement.cpp"
#include "lib/IfcNavigationElementType.cpp"
#include "lib/IfcObject.cpp"
#include "lib/IfcObjectDefinition.cpp"
#include "lib/IfcObjectPlacement.cpp"
#include "lib/IfcObjective.cpp"
#include "lib/IfcOccupant.cpp"
#include "lib/IfcOffsetCurve.cpp"
#include "lib/IfcOffsetCurve2D.cpp"
#include "lib/IfcOffsetCurve3D.cpp"
#include "lib/IfcOffsetCurveByDistances.cpp"
#include "lib/IfcOpenCrossProfileDef.cpp"
#include "lib/IfcOpenShell.cpp"
#include "lib/IfcOpeningElement.cpp"
#include "lib/IfcOrganization.cpp"
#include "lib/IfcOrganizationRelationship.cpp"
#include "lib/IfcOrientedEdge.cpp"
#include "lib/IfcOuterBoundaryCurve.cpp"
#include "lib/IfcOutlet.cpp"
#include "lib/IfcOutletType.cpp"
#include "lib/IfcOwnerHistory.cpp"
#include "lib/IfcParameterizedProfileDef.cpp"
#include "lib/IfcPath.cpp"
#include "lib/IfcPavement.cpp"
#include "lib/IfcPavementType.cpp"
#include "lib/IfcPcurve.cpp"
#include "lib/IfcPerformanceHistory.cpp"
#include "lib/IfcPermeableCoveringProperties.cpp"
#include "lib/IfcPermit.cpp"
#include "lib/IfcPerson.cpp"
#include "lib/IfcPersonAndOrganization.cpp"
#include "lib/IfcPhysicalComplexQuantity.cpp"
#include "lib/IfcPhysicalQuantity.cpp"
#include "lib/IfcPhysicalSimpleQuantity.cpp"
#include "lib/IfcPile.cpp"
#include "lib/IfcPileType.cpp"
#include "lib/IfcPipeFitting.cpp"
#include "lib/IfcPipeFittingType.cpp"
#include "lib/IfcPipeSegment.cpp"
#include "lib/IfcPipeSegmentType.cpp"
#include "lib/IfcPixelTexture.cpp"
#include "lib/IfcPlacement.cpp"
#include "lib/IfcPlanarBox.cpp"
#include "lib/IfcPlanarExtent.cpp"
#include "lib/IfcPlane.cpp"
#include "lib/IfcPlate.cpp"
#include "lib/IfcPlateType.cpp"
#include "lib/IfcPoint.cpp"
#include "lib/IfcPointByDistanceExpression.cpp"
#include "lib/IfcPointOnCurve.cpp"
#include "lib/IfcPointOnSurface.cpp"
#include "lib/IfcPolyLoop.cpp"
#include "lib/IfcPolygonalBoundedHalfSpace.cpp"
#include "lib/IfcPolygonalFaceSet.cpp"
#include "lib/IfcPolyline.cpp"
#include "lib/IfcPolynomialCurve.cpp"
#include "lib/IfcPort.cpp"
#include "lib/IfcPositioningElement.cpp"
#include "lib/IfcPostalAddress.cpp"
#include "lib/IfcPreDefinedColour.cpp"
#include "lib/IfcPreDefinedCurveFont.cpp"
#include "lib/IfcPreDefinedItem.cpp"
#include "lib/IfcPreDefinedProperties.cpp"
#include "lib/IfcPreDefinedPropertySet.cpp"
#include "lib/IfcPreDefinedTextFont.cpp"
#include "lib/IfcPresentationItem.cpp"
#include "lib/IfcPresentationLayerAssignment.cpp"
#include "lib/IfcPresentationLayerWithStyle.cpp"
#include "lib/IfcPresentationStyle.cpp"
#include "lib/IfcPresentationStyleAssignment.cpp"
#include "lib/IfcProcedure.cpp"
#include "lib/IfcProcedureType.cpp"
#include "lib/IfcProcess.cpp"
#include "lib/IfcProduct.cpp"
#include "lib/IfcProductDefinitionShape.cpp"
#include "lib/IfcProductRepresentation.cpp"
#include "lib/IfcProfileDef.cpp"
#include "lib/IfcProfileProperties.cpp"
#include "lib/IfcProject.cpp"
#include "lib/IfcProjectLibrary.cpp"
#include "lib/IfcProjectOrder.cpp"
#include "lib/IfcProjectedCRS.cpp"
#include "lib/IfcProjectionElement.cpp"
#include "lib/IfcProperty.cpp"
#include "lib/IfcPropertyAbstraction.cpp"
#include "lib/IfcPropertyBoundedValue.cpp"
#include "lib/IfcPropertyDefinition.cpp"
#include "lib/IfcPropertyDependencyRelationship.cpp"
#include "lib/IfcPropertyEnumeratedValue.cpp"
#include "lib/IfcPropertyEnumeration.cpp"
#include "lib/IfcPropertyListValue.cpp"
#include "lib/IfcPropertyReferenceValue.cpp"
#include "lib/IfcPropertySet.cpp"
#include "lib/IfcPropertySetDefinition.cpp"
#include "lib/IfcPropertySetTemplate.cpp"
#include "lib/IfcPropertySingleValue.cpp"
#include "lib/IfcPropertyTableValue.cpp"
#include "lib/IfcPropertyTemplate.cpp"
#include "lib/IfcPropertyTemplateDefinition.cpp"
#include "lib/IfcProtectiveDevice.cpp"
#include "lib/IfcProtectiveDeviceTrippingUnit.cpp"
#include "lib/IfcProtectiveDeviceTrippingUnitType.cpp"
#include "lib/IfcProtectiveDeviceType.cpp"
#include "lib/IfcPump.cpp"
#include "lib/IfcPumpType.cpp"
#include "lib/IfcQuantityArea.cpp"
#include "lib/IfcQuantityCount.cpp"
#include "lib/IfcQuantityLength.cpp"
#include "lib/IfcQuantityNumber.cpp"
#include "lib/IfcQuantitySet.cpp"
#include "lib/IfcQuantityTime.cpp"
#include "lib/IfcQuantityVolume.cpp"
#include "lib/IfcQuantityWeight.cpp"
#include "lib/IfcRail.cpp"
#include "lib/IfcRailType.cpp"
#include "lib/IfcRailing.cpp"
#include "lib/IfcRailingType.cpp"
#include "lib/IfcRailway.cpp"
#include "lib/IfcRailwayPart.cpp"
#include "lib/IfcRamp.cpp"
#include "lib/IfcRampFlight.cpp"
#include "lib/IfcRampFlightType.cpp"
#include "lib/IfcRampType.cpp"
#include "lib/IfcRationalBSplineCurveWithKnots.cpp"
#include "lib/IfcRationalBSplineSurfaceWithKnots.cpp"
#include "lib/IfcRectangleHollowProfileDef.cpp"
#include "lib/IfcRectangleProfileDef.cpp"
#include "lib/IfcRectangularPyramid.cpp"
#include "lib/IfcRectangularTrimmedSurface.cpp"
#include "lib/IfcRecurrencePattern.cpp"
#include "lib/IfcReference.cpp"
#include "lib/IfcReferent.cpp"
#include "lib/IfcRegularTimeSeries.cpp"
#include "lib/IfcReinforcedSoil.cpp"
#include "lib/IfcReinforcementBarProperties.cpp"
#include "lib/IfcReinforcementDefinitionProperties.cpp"
#include "lib/IfcReinforcingBar.cpp"
#include "lib/IfcReinforcingBarType.cpp"
#include "lib/IfcReinforcingElement.cpp"
#include "lib/IfcReinforcingElementType.cpp"
#include "lib/IfcReinforcingMesh.cpp"
#include "lib/IfcReinforcingMeshType.cpp"
#include "lib/IfcRelAdheresToElement.cpp"
#include "lib/IfcRelAggregates.cpp"
#include "lib/IfcRelAssigns.cpp"
#include "lib/IfcRelAssignsToActor.cpp"
#include "lib/IfcRelAssignsToControl.cpp"
#include "lib/IfcRelAssignsToGroup.cpp"
#include "lib/IfcRelAssignsToGroupByFactor.cpp"
#include "lib/IfcRelAssignsToProcess.cpp"
#include "lib/IfcRelAssignsToProduct.cpp"
#include "lib/IfcRelAssignsToResource.cpp"
#include "lib/IfcRelAssociates.cpp"
#include "lib/IfcRelAssociatesApproval.cpp"
#include "lib/IfcRelAssociatesClassification.cpp"
#include "lib/IfcRelAssociatesConstraint.cpp"
#include "lib/IfcRelAssociatesDocument.cpp"
#include "lib/IfcRelAssociatesLibrary.cpp"
#include "lib/IfcRelAssociatesMaterial.cpp"
#include "lib/IfcRelAssociatesProfileDef.cpp"
#include "lib/IfcRelConnects.cpp"
#include "lib/IfcRelConnectsElements.cpp"
#include "lib/IfcRelConnectsPathElements.cpp"
#include "lib/IfcRelConnectsPortToElement.cpp"
#include "lib/IfcRelConnectsPorts.cpp"
#include "lib/IfcRelConnectsStructuralActivity.cpp"
#include "lib/IfcRelConnectsStructuralMember.cpp"
#include "lib/IfcRelConnectsWithEccentricity.cpp"
#include "lib/IfcRelConnectsWithRealizingElements.cpp"
#include "lib/IfcRelContainedInSpatialStructure.cpp"
#include "lib/IfcRelCoversBldgElements.cpp"
#include "lib/IfcRelCoversSpaces.cpp"
#include "lib/IfcRelDeclares.cpp"
#include "lib/IfcRelDecomposes.cpp"
#include "lib/IfcRelDefines.cpp"
#include "lib/IfcRelDefinesByObject.cpp"
#include "lib/IfcRelDefinesByProperties.cpp"
#include "lib/IfcRelDefinesByTemplate.cpp"
#include "lib/IfcRelDefinesByType.cpp"
#include "lib/IfcRelFillsElement.cpp"
#include "lib/IfcRelFlowControlElements.cpp"
#include "lib/IfcRelInterferesElements.cpp"
#include "lib/IfcRelNests.cpp"
#include "lib/IfcRelPositions.cpp"
#include "lib/IfcRelProjectsElement.cpp"
#include "lib/IfcRelReferencedInSpatialStructure.cpp"
#include "lib/IfcRelSequence.cpp"
#include "lib/IfcRelServicesBuildings.cpp"
#include "lib/IfcRelSpaceBoundary.cpp"
#include "lib/IfcRelSpaceBoundary1stLevel.cpp"
#include "lib/IfcRelSpaceBoundary2ndLevel.cpp"
#include "lib/IfcRelVoidsElement.cpp"
#include "lib/IfcRelationship.cpp"
#include "lib/IfcReparametrisedCompositeCurveSegment.cpp"
#include "lib/IfcRepresentation.cpp"
#include "lib/IfcRepresentationContext.cpp"
#include "lib/IfcRepresentationItem.cpp"
#include "lib/IfcRepresentationMap.cpp"
#include "lib/IfcResource.cpp"
#include "lib/IfcResourceApprovalRelationship.cpp"
#include "lib/IfcResourceConstraintRelationship.cpp"
#include "lib/IfcResourceLevelRelationship.cpp"
#include "lib/IfcResourceTime.cpp"
#include "lib/IfcRevolvedAreaSolid.cpp"
#include "lib/IfcRevolvedAreaSolidTapered.cpp"
#include "lib/IfcRightCircularCone.cpp"
#include "lib/IfcRightCircularCylinder.cpp"
#include "lib/IfcRoad.cpp"
#include "lib/IfcRoadPart.cpp"
#include "lib/IfcRoof.cpp"
#include "lib/IfcRoofType.cpp"
#include "lib/IfcRoot.cpp"
#include "lib/IfcRoundedRectangleProfileDef.cpp"
#include "lib/IfcSIUnit.cpp"
#include "lib/IfcSanitaryTerminal.cpp"
#include "lib/IfcSanitaryTerminalType.cpp"
#include "lib/IfcSchedulingTime.cpp"
#include "lib/IfcSeamCurve.cpp"
#include "lib/IfcSecondOrderPolynomialSpiral.cpp"
#include "lib/IfcSectionProperties.cpp"
#include "lib/IfcSectionReinforcementProperties.cpp"
#include "lib/IfcSectionedSolid.cpp"
#include "lib/IfcSectionedSolidHorizontal.cpp"
#include "lib/IfcSectionedSpine.cpp"
#include "lib/IfcSectionedSurface.cpp"
#include "lib/IfcSegment.cpp"
#include "lib/IfcSegmentedReferenceCurve.cpp"
#include "lib/IfcSensor.cpp"
#include "lib/IfcSensorType.cpp"
#include "lib/IfcSeventhOrderPolynomialSpiral.cpp"
#include "lib/IfcShadingDevice.cpp"
#include "lib/IfcShadingDeviceType.cpp"
#include "lib/IfcShapeAspect.cpp"
#include "lib/IfcShapeModel.cpp"
#include "lib/IfcShapeRepresentation.cpp"
#include "lib/IfcShellBasedSurfaceModel.cpp"
#include "lib/IfcSign.cpp"
#include "lib/IfcSignType.cpp"
#include "lib/IfcSignal.cpp"
#include "lib/IfcSignalType.cpp"
#include "lib/IfcSimpleProperty.cpp"
#include "lib/IfcSimplePropertyTemplate.cpp"
#include "lib/IfcSineSpiral.cpp"
#include "lib/IfcSite.cpp"
#include "lib/IfcSlab.cpp"
#include "lib/IfcSlabType.cpp"
#include "lib/IfcSlippageConnectionCondition.cpp"
#include "lib/IfcSolarDevice.cpp"
#include "lib/IfcSolarDeviceType.cpp"
#include "lib/IfcSolidModel.cpp"
#include "lib/IfcSpace.cpp"
#include "lib/IfcSpaceHeater.cpp"
#include "lib/IfcSpaceHeaterType.cpp"
#include "lib/IfcSpaceType.cpp"
#include "lib/IfcSpatialElement.cpp"
#include "lib/IfcSpatialElementType.cpp"
#include "lib/IfcSpatialStructureElement.cpp"
#include "lib/IfcSpatialStructureElementType.cpp"
#include "lib/IfcSpatialZone.cpp"
#include "lib/IfcSpatialZoneType.cpp"
#include "lib/IfcSphere.cpp"
#include "lib/IfcSphericalSurface.cpp"
#include "lib/IfcSpiral.cpp"
#include "lib/IfcStackTerminal.cpp"
#include "lib/IfcStackTerminalType.cpp"
#include "lib/IfcStair.cpp"
#include "lib/IfcStairFlight.cpp"
#include "lib/IfcStairFlightType.cpp"
#include "lib/IfcStairType.cpp"
#include "lib/IfcStructuralAction.cpp"
#include "lib/IfcStructuralActivity.cpp"
#include "lib/IfcStructuralAnalysisModel.cpp"
#include "lib/IfcStructuralConnection.cpp"
#include "lib/IfcStructuralConnectionCondition.cpp"
#include "lib/IfcStructuralCurveAction.cpp"
#include "lib/IfcStructuralCurveConnection.cpp"
#include "lib/IfcStructuralCurveMember.cpp"
#include "lib/IfcStructuralCurveMemberVarying.cpp"
#include "lib/IfcStructuralCurveReaction.cpp"
#include "lib/IfcStructuralItem.cpp"
#include "lib/IfcStructuralLinearAction.cpp"
#include "lib/IfcStructuralLoad.cpp"
#include "lib/IfcStructuralLoadCase.cpp"
#include "lib/IfcStructuralLoadConfiguration.cpp"
#include "lib/IfcStructuralLoadGroup.cpp"
#include "lib/IfcStructuralLoadLinearForce.cpp"
#include "lib/IfcStructuralLoadOrResult.cpp"
#include "lib/IfcStructuralLoadPlanarForce.cpp"
#include "lib/IfcStructuralLoadSingleDisplacement.cpp"
#include "lib/IfcStructuralLoadSingleDisplacementDistortion.cpp"
#include "lib/IfcStructuralLoadSingleForce.cpp"
#include "lib/IfcStructuralLoadSingleForceWarping.cpp"
#include "lib/IfcStructuralLoadStatic.cpp"
#include "lib/IfcStructuralLoadTemperature.cpp"
#include "lib/IfcStructuralMember.cpp"
#include "lib/IfcStructuralPlanarAction.cpp"
#include "lib/IfcStructuralPointAction.cpp"
#include "lib/IfcStructuralPointConnection.cpp"
#include "lib/IfcStructuralPointReaction.cpp"
#include "lib/IfcStructuralReaction.cpp"
#include "lib/IfcStructuralResultGroup.cpp"
#include "lib/IfcStructuralSurfaceAction.cpp"
#include "lib/IfcStructuralSurfaceConnection.cpp"
#include "lib/IfcStructuralSurfaceMember.cpp"
#include "lib/IfcStructuralSurfaceMemberVarying.cpp"
#include "lib/IfcStructuralSurfaceReaction.cpp"
#include "lib/IfcStyleModel.cpp"
#include "lib/IfcStyledItem.cpp"
#include "lib/IfcStyledRepresentation.cpp"
#include "lib/IfcSubContractResource.cpp"
#include "lib/IfcSubContractResourceType.cpp"
#include "lib/IfcSubedge.cpp"
#include "lib/IfcSurface.cpp"
#include "lib/IfcSurfaceCurve.cpp"
#include "lib/IfcSurfaceCurveSweptAreaSolid.cpp"
#include "lib/IfcSurfaceFeature.cpp"
#include "lib/IfcSurfaceOfLinearExtrusion.cpp"
#include "lib/IfcSurfaceOfRevolution.cpp"
#include "lib/IfcSurfaceReinforcementArea.cpp"
#include "lib/IfcSurfaceStyle.cpp"
#include "lib/IfcSurfaceStyleLighting.cpp"
#include "lib/IfcSurfaceStyleRefraction.cpp"
#include "lib/IfcSurfaceStyleRendering.cpp"
#include "lib/IfcSurfaceStyleShading.cpp"
#include "lib/IfcSurfaceStyleWithTextures.cpp"
#include "lib/IfcSurfaceTexture.cpp"
#include "lib/IfcSweptAreaSolid.cpp"
#include "lib/IfcSweptDiskSolid.cpp"
#include "lib/IfcSweptDiskSolidPolygonal.cpp"
#include "lib/IfcSweptSurface.cpp"
#include "lib/IfcSwitchingDevice.cpp"
#include "lib/IfcSwitchingDeviceType.cpp"
#include "lib/IfcSystem.cpp"
#include "lib/IfcSystemFurnitureElement.cpp"
#include "lib/IfcSystemFurnitureElementType.cpp"
#include "lib/IfcTShapeProfileDef.cpp"
#include "lib/IfcTable.cpp"
#include "lib/IfcTableColumn.cpp"
#include "lib/IfcTableRow.cpp"
#include "lib/IfcTank.cpp"
#include "lib/IfcTankType.cpp"
#include "lib/IfcTask.cpp"
#include "lib/IfcTaskTime.cpp"
#include "lib/IfcTaskTimeRecurring.cpp"
#include "lib/IfcTaskType.cpp"
#include "lib/IfcTelecomAddress.cpp"
#include "lib/IfcTendon.cpp"
#include "lib/IfcTendonAnchor.cpp"
#include "lib/IfcTendonAnchorType.cpp"
#include "lib/IfcTendonConduit.cpp"
#include "lib/IfcTendonConduitType.cpp"
#include "lib/IfcTendonType.cpp"
#include "lib/IfcTessellatedFaceSet.cpp"
#include "lib/IfcTessellatedItem.cpp"
#include "lib/IfcTextLiteral.cpp"
#include "lib/IfcTextLiteralWithExtent.cpp"
#include "lib/IfcTextStyle.cpp"
#include "lib/IfcTextStyleFontModel.cpp"
#include "lib/IfcTextStyleForDefinedFont.cpp"
#include "lib/IfcTextStyleTextModel.cpp"
#include "lib/IfcTextureCoordinate.cpp"
#include "lib/IfcTextureCoordinateGenerator.cpp"
#include "lib/IfcTextureCoordinateIndices.cpp"
#include "lib/IfcTextureCoordinateIndicesWithVoids.cpp"
#include "lib/IfcTextureMap.cpp"
#include "lib/IfcTextureVertex.cpp"
#include "lib/IfcTextureVertexList.cpp"
#include "lib/IfcThirdOrderPolynomialSpiral.cpp"
#include "lib/IfcTimePeriod.cpp"
#include "lib/IfcTimeSeries.cpp"
#include "lib/IfcTimeSeriesValue.cpp"
#include "lib/IfcTopologicalRepresentationItem.cpp"
#include "lib/IfcTopologyRepresentation.cpp"
#include "lib/IfcToroidalSurface.cpp"
#include "lib/IfcTrackElement.cpp"
#include "lib/IfcTrackElementType.cpp"
#include "lib/IfcTransformer.cpp"
#include "lib/IfcTransformerType.cpp"
#include "lib/IfcTransportElement.cpp"
#include "lib/IfcTransportElementType.cpp"
#include "lib/IfcTransportationDevice.cpp"
#include "lib/IfcTransportationDeviceType.cpp"
#include "lib/IfcTrapeziumProfileDef.cpp"
#include "lib/IfcTriangulatedFaceSet.cpp"
#include "lib/IfcTriangulatedIrregularNetwork.cpp"
#include "lib/IfcTrimmedCurve.cpp"
#include "lib/IfcTubeBundle.cpp"
#include "lib/IfcTubeBundleType.cpp"
#include "lib/IfcTypeObject.cpp"
#include "lib/IfcTypeProcess.cpp"
#include "lib/IfcTypeProduct.cpp"
#include "lib/IfcTypeResource.cpp"
#include "lib/IfcUShapeProfileDef.cpp"
#include "lib/IfcUnitAssignment.cpp"
#include "lib/IfcUnitaryControlElement.cpp"
#include "lib/IfcUnitaryControlElementType.cpp"
#include "lib/IfcUnitaryEquipment.cpp"
#include "lib/IfcUnitaryEquipmentType.cpp"
#include "lib/IfcValve.cpp"
#include "lib/IfcValveType.cpp"
#include "lib/IfcVector.cpp"
#include "lib/IfcVehicle.cpp"
#include "lib/IfcVehicleType.cpp"
#include "lib/IfcVertex.cpp"
#include "lib/IfcVertexLoop.cpp"
#include "lib/IfcVertexPoint.cpp"
#include "lib/IfcVibrationDamper.cpp"
#include "lib/IfcVibrationDamperType.cpp"
#include "lib/IfcVibrationIsolator.cpp"
#include "lib/IfcVibrationIsolatorType.cpp"
#include "lib/IfcVirtualElement.cpp"
#include "lib/IfcVirtualGridIntersection.cpp"
#include "lib/IfcVoidingFeature.cpp"
#include "lib/IfcWall.cpp"
#include "lib/IfcWallStandardCase.cpp"
#include "lib/IfcWallType.cpp"
#include "lib/IfcWasteTerminal.cpp"
#include "lib/IfcWasteTerminalType.cpp"
#include "lib/IfcWindow.cpp"
#include "lib/IfcWindowLiningProperties.cpp"
#include "lib/IfcWindowPanelProperties.cpp"
#include "lib/IfcWindowStyle.cpp"
#include "lib/IfcWindowType.cpp"
#include "lib/IfcWorkCalendar.cpp"
#include "lib/IfcWorkControl.cpp"
#include "lib/IfcWorkPlan.cpp"
#include "lib/IfcWorkSchedule.cpp"
#include "lib/IfcWorkTime.cpp"
#include "lib/IfcZShapeProfileDef.cpp"
#include "lib/IfcZone.cpp"
#include "EntityFactory.h"

static std::map<std::string, std::function<BuildingEntity*( void )> > entity_factory_map = {
{ "IFCACTIONREQUEST", []()->BuildingEntity* { return new IFC4X3::IfcActionRequest(); } },
{ "IFCACTOR", []()->BuildingEntity* { return new IFC4X3::IfcActor(); } },
{ "IFCACTORROLE", []()->BuildingEntity* { return new IFC4X3::IfcActorRole(); } },
{ "IFCACTUATOR", []()->BuildingEntity* { return new IFC4X3::IfcActuator(); } },
{ "IFCACTUATORTYPE", []()->BuildingEntity* { return new IFC4X3::IfcActuatorType(); } },
{ "IFCADDRESS", []()->BuildingEntity* { return new IFC4X3::IfcAddress(); } },
{ "IFCADVANCEDBREP", []()->BuildingEntity* { return new IFC4X3::IfcAdvancedBrep(); } },
{ "IFCADVANCEDBREPWITHVOIDS", []()->BuildingEntity* { return new IFC4X3::IfcAdvancedBrepWithVoids(); } },
{ "IFCADVANCEDFACE", []()->BuildingEntity* { return new IFC4X3::IfcAdvancedFace(); } },
{ "IFCAIRTERMINAL", []()->BuildingEntity* { return new IFC4X3::IfcAirTerminal(); } },
{ "IFCAIRTERMINALBOX", []()->BuildingEntity* { return new IFC4X3::IfcAirTerminalBox(); } },
{ "IFCAIRTERMINALBOXTYPE", []()->BuildingEntity* { return new IFC4X3::IfcAirTerminalBoxType(); } },
{ "IFCAIRTERMINALTYPE", []()->BuildingEntity* { return new IFC4X3::IfcAirTerminalType(); } },
{ "IFCAIRTOAIRHEATRECOVERY", []()->BuildingEntity* { return new IFC4X3::IfcAirToAirHeatRecovery(); } },
{ "IFCAIRTOAIRHEATRECOVERYTYPE", []()->BuildingEntity* { return new IFC4X3::IfcAirToAirHeatRecoveryType(); } },
{ "IFCALARM", []()->BuildingEntity* { return new IFC4X3::IfcAlarm(); } },
{ "IFCALARMTYPE", []()->BuildingEntity* { return new IFC4X3::IfcAlarmType(); } },
{ "IFCALIGNMENT", []()->BuildingEntity* { return new IFC4X3::IfcAlignment(); } },
{ "IFCALIGNMENTCANT", []()->BuildingEntity* { return new IFC4X3::IfcAlignmentCant(); } },
{ "IFCALIGNMENTCANTSEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcAlignmentCantSegment(); } },
{ "IFCALIGNMENTHORIZONTAL", []()->BuildingEntity* { return new IFC4X3::IfcAlignmentHorizontal(); } },
{ "IFCALIGNMENTHORIZONTALSEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcAlignmentHorizontalSegment(); } },
{ "IFCALIGNMENTPARAMETERSEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcAlignmentParameterSegment(); } },
{ "IFCALIGNMENTSEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcAlignmentSegment(); } },
{ "IFCALIGNMENTVERTICAL", []()->BuildingEntity* { return new IFC4X3::IfcAlignmentVertical(); } },
{ "IFCALIGNMENTVERTICALSEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcAlignmentVerticalSegment(); } },
{ "IFCANNOTATION", []()->BuildingEntity* { return new IFC4X3::IfcAnnotation(); } },
{ "IFCANNOTATIONFILLAREA", []()->BuildingEntity* { return new IFC4X3::IfcAnnotationFillArea(); } },
{ "IFCAPPLICATION", []()->BuildingEntity* { return new IFC4X3::IfcApplication(); } },
{ "IFCAPPLIEDVALUE", []()->BuildingEntity* { return new IFC4X3::IfcAppliedValue(); } },
{ "IFCAPPROVAL", []()->BuildingEntity* { return new IFC4X3::IfcApproval(); } },
{ "IFCAPPROVALRELATIONSHIP", []()->BuildingEntity* { return new IFC4X3::IfcApprovalRelationship(); } },
{ "IFCARBITRARYCLOSEDPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcArbitraryClosedProfileDef(); } },
{ "IFCARBITRARYOPENPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcArbitraryOpenProfileDef(); } },
{ "IFCARBITRARYPROFILEDEFWITHVOIDS", []()->BuildingEntity* { return new IFC4X3::IfcArbitraryProfileDefWithVoids(); } },
{ "IFCASSET", []()->BuildingEntity* { return new IFC4X3::IfcAsset(); } },
{ "IFCASYMMETRICISHAPEPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcAsymmetricIShapeProfileDef(); } },
{ "IFCAUDIOVISUALAPPLIANCE", []()->BuildingEntity* { return new IFC4X3::IfcAudioVisualAppliance(); } },
{ "IFCAUDIOVISUALAPPLIANCETYPE", []()->BuildingEntity* { return new IFC4X3::IfcAudioVisualApplianceType(); } },
{ "IFCAXIS1PLACEMENT", []()->BuildingEntity* { return new IFC4X3::IfcAxis1Placement(); } },
{ "IFCAXIS2PLACEMENT2D", []()->BuildingEntity* { return new IFC4X3::IfcAxis2Placement2D(); } },
{ "IFCAXIS2PLACEMENT3D", []()->BuildingEntity* { return new IFC4X3::IfcAxis2Placement3D(); } },
{ "IFCAXIS2PLACEMENTLINEAR", []()->BuildingEntity* { return new IFC4X3::IfcAxis2PlacementLinear(); } },
{ "IFCBSPLINECURVE", []()->BuildingEntity* { return new IFC4X3::IfcBSplineCurve(); } },
{ "IFCBSPLINECURVEWITHKNOTS", []()->BuildingEntity* { return new IFC4X3::IfcBSplineCurveWithKnots(); } },
{ "IFCBSPLINESURFACE", []()->BuildingEntity* { return new IFC4X3::IfcBSplineSurface(); } },
{ "IFCBSPLINESURFACEWITHKNOTS", []()->BuildingEntity* { return new IFC4X3::IfcBSplineSurfaceWithKnots(); } },
{ "IFCBEAM", []()->BuildingEntity* { return new IFC4X3::IfcBeam(); } },
{ "IFCBEAMTYPE", []()->BuildingEntity* { return new IFC4X3::IfcBeamType(); } },
{ "IFCBEARING", []()->BuildingEntity* { return new IFC4X3::IfcBearing(); } },
{ "IFCBEARINGTYPE", []()->BuildingEntity* { return new IFC4X3::IfcBearingType(); } },
{ "IFCBLOBTEXTURE", []()->BuildingEntity* { return new IFC4X3::IfcBlobTexture(); } },
{ "IFCBLOCK", []()->BuildingEntity* { return new IFC4X3::IfcBlock(); } },
{ "IFCBOILER", []()->BuildingEntity* { return new IFC4X3::IfcBoiler(); } },
{ "IFCBOILERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcBoilerType(); } },
{ "IFCBOOLEANCLIPPINGRESULT", []()->BuildingEntity* { return new IFC4X3::IfcBooleanClippingResult(); } },
{ "IFCBOOLEANRESULT", []()->BuildingEntity* { return new IFC4X3::IfcBooleanResult(); } },
{ "IFCBOREHOLE", []()->BuildingEntity* { return new IFC4X3::IfcBorehole(); } },
{ "IFCBOUNDARYCONDITION", []()->BuildingEntity* { return new IFC4X3::IfcBoundaryCondition(); } },
{ "IFCBOUNDARYCURVE", []()->BuildingEntity* { return new IFC4X3::IfcBoundaryCurve(); } },
{ "IFCBOUNDARYEDGECONDITION", []()->BuildingEntity* { return new IFC4X3::IfcBoundaryEdgeCondition(); } },
{ "IFCBOUNDARYFACECONDITION", []()->BuildingEntity* { return new IFC4X3::IfcBoundaryFaceCondition(); } },
{ "IFCBOUNDARYNODECONDITION", []()->BuildingEntity* { return new IFC4X3::IfcBoundaryNodeCondition(); } },
{ "IFCBOUNDARYNODECONDITIONWARPING", []()->BuildingEntity* { return new IFC4X3::IfcBoundaryNodeConditionWarping(); } },
{ "IFCBOUNDEDCURVE", []()->BuildingEntity* { return new IFC4X3::IfcBoundedCurve(); } },
{ "IFCBOUNDEDSURFACE", []()->BuildingEntity* { return new IFC4X3::IfcBoundedSurface(); } },
{ "IFCBOUNDINGBOX", []()->BuildingEntity* { return new IFC4X3::IfcBoundingBox(); } },
{ "IFCBOXEDHALFSPACE", []()->BuildingEntity* { return new IFC4X3::IfcBoxedHalfSpace(); } },
{ "IFCBRIDGE", []()->BuildingEntity* { return new IFC4X3::IfcBridge(); } },
{ "IFCBRIDGEPART", []()->BuildingEntity* { return new IFC4X3::IfcBridgePart(); } },
{ "IFCBUILDING", []()->BuildingEntity* { return new IFC4X3::IfcBuilding(); } },
{ "IFCBUILDINGELEMENTPART", []()->BuildingEntity* { return new IFC4X3::IfcBuildingElementPart(); } },
{ "IFCBUILDINGELEMENTPARTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcBuildingElementPartType(); } },
{ "IFCBUILDINGELEMENTPROXY", []()->BuildingEntity* { return new IFC4X3::IfcBuildingElementProxy(); } },
{ "IFCBUILDINGELEMENTPROXYTYPE", []()->BuildingEntity* { return new IFC4X3::IfcBuildingElementProxyType(); } },
{ "IFCBUILDINGSTOREY", []()->BuildingEntity* { return new IFC4X3::IfcBuildingStorey(); } },
{ "IFCBUILDINGSYSTEM", []()->BuildingEntity* { return new IFC4X3::IfcBuildingSystem(); } },
{ "IFCBUILTELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcBuiltElement(); } },
{ "IFCBUILTELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcBuiltElementType(); } },
{ "IFCBUILTSYSTEM", []()->BuildingEntity* { return new IFC4X3::IfcBuiltSystem(); } },
{ "IFCBURNER", []()->BuildingEntity* { return new IFC4X3::IfcBurner(); } },
{ "IFCBURNERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcBurnerType(); } },
{ "IFCCSHAPEPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcCShapeProfileDef(); } },
{ "IFCCABLECARRIERFITTING", []()->BuildingEntity* { return new IFC4X3::IfcCableCarrierFitting(); } },
{ "IFCCABLECARRIERFITTINGTYPE", []()->BuildingEntity* { return new IFC4X3::IfcCableCarrierFittingType(); } },
{ "IFCCABLECARRIERSEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcCableCarrierSegment(); } },
{ "IFCCABLECARRIERSEGMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcCableCarrierSegmentType(); } },
{ "IFCCABLEFITTING", []()->BuildingEntity* { return new IFC4X3::IfcCableFitting(); } },
{ "IFCCABLEFITTINGTYPE", []()->BuildingEntity* { return new IFC4X3::IfcCableFittingType(); } },
{ "IFCCABLESEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcCableSegment(); } },
{ "IFCCABLESEGMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcCableSegmentType(); } },
{ "IFCCAISSONFOUNDATION", []()->BuildingEntity* { return new IFC4X3::IfcCaissonFoundation(); } },
{ "IFCCAISSONFOUNDATIONTYPE", []()->BuildingEntity* { return new IFC4X3::IfcCaissonFoundationType(); } },
{ "IFCCARTESIANPOINT", []()->BuildingEntity* { return new IFC4X3::IfcCartesianPoint(); } },
{ "IFCCARTESIANPOINTLIST", []()->BuildingEntity* { return new IFC4X3::IfcCartesianPointList(); } },
{ "IFCCARTESIANPOINTLIST2D", []()->BuildingEntity* { return new IFC4X3::IfcCartesianPointList2D(); } },
{ "IFCCARTESIANPOINTLIST3D", []()->BuildingEntity* { return new IFC4X3::IfcCartesianPointList3D(); } },
{ "IFCCARTESIANTRANSFORMATIONOPERATOR", []()->BuildingEntity* { return new IFC4X3::IfcCartesianTransformationOperator(); } },
{ "IFCCARTESIANTRANSFORMATIONOPERATOR2D", []()->BuildingEntity* { return new IFC4X3::IfcCartesianTransformationOperator2D(); } },
{ "IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM", []()->BuildingEntity* { return new IFC4X3::IfcCartesianTransformationOperator2DnonUniform(); } },
{ "IFCCARTESIANTRANSFORMATIONOPERATOR3D", []()->BuildingEntity* { return new IFC4X3::IfcCartesianTransformationOperator3D(); } },
{ "IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM", []()->BuildingEntity* { return new IFC4X3::IfcCartesianTransformationOperator3DnonUniform(); } },
{ "IFCCENTERLINEPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcCenterLineProfileDef(); } },
{ "IFCCHILLER", []()->BuildingEntity* { return new IFC4X3::IfcChiller(); } },
{ "IFCCHILLERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcChillerType(); } },
{ "IFCCHIMNEY", []()->BuildingEntity* { return new IFC4X3::IfcChimney(); } },
{ "IFCCHIMNEYTYPE", []()->BuildingEntity* { return new IFC4X3::IfcChimneyType(); } },
{ "IFCCIRCLE", []()->BuildingEntity* { return new IFC4X3::IfcCircle(); } },
{ "IFCCIRCLEHOLLOWPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcCircleHollowProfileDef(); } },
{ "IFCCIRCLEPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcCircleProfileDef(); } },
{ "IFCCIVILELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcCivilElement(); } },
{ "IFCCIVILELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcCivilElementType(); } },
{ "IFCCLASSIFICATION", []()->BuildingEntity* { return new IFC4X3::IfcClassification(); } },
{ "IFCCLASSIFICATIONREFERENCE", []()->BuildingEntity* { return new IFC4X3::IfcClassificationReference(); } },
{ "IFCCLOSEDSHELL", []()->BuildingEntity* { return new IFC4X3::IfcClosedShell(); } },
{ "IFCCLOTHOID", []()->BuildingEntity* { return new IFC4X3::IfcClothoid(); } },
{ "IFCCOIL", []()->BuildingEntity* { return new IFC4X3::IfcCoil(); } },
{ "IFCCOILTYPE", []()->BuildingEntity* { return new IFC4X3::IfcCoilType(); } },
{ "IFCCOLOURRGB", []()->BuildingEntity* { return new IFC4X3::IfcColourRgb(); } },
{ "IFCCOLOURRGBLIST", []()->BuildingEntity* { return new IFC4X3::IfcColourRgbList(); } },
{ "IFCCOLOURSPECIFICATION", []()->BuildingEntity* { return new IFC4X3::IfcColourSpecification(); } },
{ "IFCCOLUMN", []()->BuildingEntity* { return new IFC4X3::IfcColumn(); } },
{ "IFCCOLUMNTYPE", []()->BuildingEntity* { return new IFC4X3::IfcColumnType(); } },
{ "IFCCOMMUNICATIONSAPPLIANCE", []()->BuildingEntity* { return new IFC4X3::IfcCommunicationsAppliance(); } },
{ "IFCCOMMUNICATIONSAPPLIANCETYPE", []()->BuildingEntity* { return new IFC4X3::IfcCommunicationsApplianceType(); } },
{ "IFCCOMPLEXPROPERTY", []()->BuildingEntity* { return new IFC4X3::IfcComplexProperty(); } },
{ "IFCCOMPLEXPROPERTYTEMPLATE", []()->BuildingEntity* { return new IFC4X3::IfcComplexPropertyTemplate(); } },
{ "IFCCOMPOSITECURVE", []()->BuildingEntity* { return new IFC4X3::IfcCompositeCurve(); } },
{ "IFCCOMPOSITECURVEONSURFACE", []()->BuildingEntity* { return new IFC4X3::IfcCompositeCurveOnSurface(); } },
{ "IFCCOMPOSITECURVESEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcCompositeCurveSegment(); } },
{ "IFCCOMPOSITEPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcCompositeProfileDef(); } },
{ "IFCCOMPRESSOR", []()->BuildingEntity* { return new IFC4X3::IfcCompressor(); } },
{ "IFCCOMPRESSORTYPE", []()->BuildingEntity* { return new IFC4X3::IfcCompressorType(); } },
{ "IFCCONDENSER", []()->BuildingEntity* { return new IFC4X3::IfcCondenser(); } },
{ "IFCCONDENSERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcCondenserType(); } },
{ "IFCCONIC", []()->BuildingEntity* { return new IFC4X3::IfcConic(); } },
{ "IFCCONNECTEDFACESET", []()->BuildingEntity* { return new IFC4X3::IfcConnectedFaceSet(); } },
{ "IFCCONNECTIONCURVEGEOMETRY", []()->BuildingEntity* { return new IFC4X3::IfcConnectionCurveGeometry(); } },
{ "IFCCONNECTIONGEOMETRY", []()->BuildingEntity* { return new IFC4X3::IfcConnectionGeometry(); } },
{ "IFCCONNECTIONPOINTECCENTRICITY", []()->BuildingEntity* { return new IFC4X3::IfcConnectionPointEccentricity(); } },
{ "IFCCONNECTIONPOINTGEOMETRY", []()->BuildingEntity* { return new IFC4X3::IfcConnectionPointGeometry(); } },
{ "IFCCONNECTIONSURFACEGEOMETRY", []()->BuildingEntity* { return new IFC4X3::IfcConnectionSurfaceGeometry(); } },
{ "IFCCONNECTIONVOLUMEGEOMETRY", []()->BuildingEntity* { return new IFC4X3::IfcConnectionVolumeGeometry(); } },
{ "IFCCONSTRAINT", []()->BuildingEntity* { return new IFC4X3::IfcConstraint(); } },
{ "IFCCONSTRUCTIONEQUIPMENTRESOURCE", []()->BuildingEntity* { return new IFC4X3::IfcConstructionEquipmentResource(); } },
{ "IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE", []()->BuildingEntity* { return new IFC4X3::IfcConstructionEquipmentResourceType(); } },
{ "IFCCONSTRUCTIONMATERIALRESOURCE", []()->BuildingEntity* { return new IFC4X3::IfcConstructionMaterialResource(); } },
{ "IFCCONSTRUCTIONMATERIALRESOURCETYPE", []()->BuildingEntity* { return new IFC4X3::IfcConstructionMaterialResourceType(); } },
{ "IFCCONSTRUCTIONPRODUCTRESOURCE", []()->BuildingEntity* { return new IFC4X3::IfcConstructionProductResource(); } },
{ "IFCCONSTRUCTIONPRODUCTRESOURCETYPE", []()->BuildingEntity* { return new IFC4X3::IfcConstructionProductResourceType(); } },
{ "IFCCONSTRUCTIONRESOURCE", []()->BuildingEntity* { return new IFC4X3::IfcConstructionResource(); } },
{ "IFCCONSTRUCTIONRESOURCETYPE", []()->BuildingEntity* { return new IFC4X3::IfcConstructionResourceType(); } },
{ "IFCCONTEXT", []()->BuildingEntity* { return new IFC4X3::IfcContext(); } },
{ "IFCCONTEXTDEPENDENTUNIT", []()->BuildingEntity* { return new IFC4X3::IfcContextDependentUnit(); } },
{ "IFCCONTROL", []()->BuildingEntity* { return new IFC4X3::IfcControl(); } },
{ "IFCCONTROLLER", []()->BuildingEntity* { return new IFC4X3::IfcController(); } },
{ "IFCCONTROLLERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcControllerType(); } },
{ "IFCCONVERSIONBASEDUNIT", []()->BuildingEntity* { return new IFC4X3::IfcConversionBasedUnit(); } },
{ "IFCCONVERSIONBASEDUNITWITHOFFSET", []()->BuildingEntity* { return new IFC4X3::IfcConversionBasedUnitWithOffset(); } },
{ "IFCCONVEYORSEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcConveyorSegment(); } },
{ "IFCCONVEYORSEGMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcConveyorSegmentType(); } },
{ "IFCCOOLEDBEAM", []()->BuildingEntity* { return new IFC4X3::IfcCooledBeam(); } },
{ "IFCCOOLEDBEAMTYPE", []()->BuildingEntity* { return new IFC4X3::IfcCooledBeamType(); } },
{ "IFCCOOLINGTOWER", []()->BuildingEntity* { return new IFC4X3::IfcCoolingTower(); } },
{ "IFCCOOLINGTOWERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcCoolingTowerType(); } },
{ "IFCCOORDINATEOPERATION", []()->BuildingEntity* { return new IFC4X3::IfcCoordinateOperation(); } },
{ "IFCCOORDINATEREFERENCESYSTEM", []()->BuildingEntity* { return new IFC4X3::IfcCoordinateReferenceSystem(); } },
{ "IFCCOSINESPIRAL", []()->BuildingEntity* { return new IFC4X3::IfcCosineSpiral(); } },
{ "IFCCOSTITEM", []()->BuildingEntity* { return new IFC4X3::IfcCostItem(); } },
{ "IFCCOSTSCHEDULE", []()->BuildingEntity* { return new IFC4X3::IfcCostSchedule(); } },
{ "IFCCOSTVALUE", []()->BuildingEntity* { return new IFC4X3::IfcCostValue(); } },
{ "IFCCOURSE", []()->BuildingEntity* { return new IFC4X3::IfcCourse(); } },
{ "IFCCOURSETYPE", []()->BuildingEntity* { return new IFC4X3::IfcCourseType(); } },
{ "IFCCOVERING", []()->BuildingEntity* { return new IFC4X3::IfcCovering(); } },
{ "IFCCOVERINGTYPE", []()->BuildingEntity* { return new IFC4X3::IfcCoveringType(); } },
{ "IFCCREWRESOURCE", []()->BuildingEntity* { return new IFC4X3::IfcCrewResource(); } },
{ "IFCCREWRESOURCETYPE", []()->BuildingEntity* { return new IFC4X3::IfcCrewResourceType(); } },
{ "IFCCSGPRIMITIVE3D", []()->BuildingEntity* { return new IFC4X3::IfcCsgPrimitive3D(); } },
{ "IFCCSGSOLID", []()->BuildingEntity* { return new IFC4X3::IfcCsgSolid(); } },
{ "IFCCURRENCYRELATIONSHIP", []()->BuildingEntity* { return new IFC4X3::IfcCurrencyRelationship(); } },
{ "IFCCURTAINWALL", []()->BuildingEntity* { return new IFC4X3::IfcCurtainWall(); } },
{ "IFCCURTAINWALLTYPE", []()->BuildingEntity* { return new IFC4X3::IfcCurtainWallType(); } },
{ "IFCCURVE", []()->BuildingEntity* { return new IFC4X3::IfcCurve(); } },
{ "IFCCURVEBOUNDEDPLANE", []()->BuildingEntity* { return new IFC4X3::IfcCurveBoundedPlane(); } },
{ "IFCCURVEBOUNDEDSURFACE", []()->BuildingEntity* { return new IFC4X3::IfcCurveBoundedSurface(); } },
{ "IFCCURVESEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcCurveSegment(); } },
{ "IFCCURVESTYLE", []()->BuildingEntity* { return new IFC4X3::IfcCurveStyle(); } },
{ "IFCCURVESTYLEFONT", []()->BuildingEntity* { return new IFC4X3::IfcCurveStyleFont(); } },
{ "IFCCURVESTYLEFONTANDSCALING", []()->BuildingEntity* { return new IFC4X3::IfcCurveStyleFontAndScaling(); } },
{ "IFCCURVESTYLEFONTPATTERN", []()->BuildingEntity* { return new IFC4X3::IfcCurveStyleFontPattern(); } },
{ "IFCCYLINDRICALSURFACE", []()->BuildingEntity* { return new IFC4X3::IfcCylindricalSurface(); } },
{ "IFCDAMPER", []()->BuildingEntity* { return new IFC4X3::IfcDamper(); } },
{ "IFCDAMPERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcDamperType(); } },
{ "IFCDEEPFOUNDATION", []()->BuildingEntity* { return new IFC4X3::IfcDeepFoundation(); } },
{ "IFCDEEPFOUNDATIONTYPE", []()->BuildingEntity* { return new IFC4X3::IfcDeepFoundationType(); } },
{ "IFCDERIVEDPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcDerivedProfileDef(); } },
{ "IFCDERIVEDUNIT", []()->BuildingEntity* { return new IFC4X3::IfcDerivedUnit(); } },
{ "IFCDERIVEDUNITELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcDerivedUnitElement(); } },
{ "IFCDIMENSIONALEXPONENTS", []()->BuildingEntity* { return new IFC4X3::IfcDimensionalExponents(); } },
{ "IFCDIRECTION", []()->BuildingEntity* { return new IFC4X3::IfcDirection(); } },
{ "IFCDIRECTRIXCURVESWEPTAREASOLID", []()->BuildingEntity* { return new IFC4X3::IfcDirectrixCurveSweptAreaSolid(); } },
{ "IFCDIRECTRIXDERIVEDREFERENCESWEPTAREASOLID", []()->BuildingEntity* { return new IFC4X3::IfcDirectrixDerivedReferenceSweptAreaSolid(); } },
{ "IFCDISCRETEACCESSORY", []()->BuildingEntity* { return new IFC4X3::IfcDiscreteAccessory(); } },
{ "IFCDISCRETEACCESSORYTYPE", []()->BuildingEntity* { return new IFC4X3::IfcDiscreteAccessoryType(); } },
{ "IFCDISTRIBUTIONBOARD", []()->BuildingEntity* { return new IFC4X3::IfcDistributionBoard(); } },
{ "IFCDISTRIBUTIONBOARDTYPE", []()->BuildingEntity* { return new IFC4X3::IfcDistributionBoardType(); } },
{ "IFCDISTRIBUTIONCHAMBERELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcDistributionChamberElement(); } },
{ "IFCDISTRIBUTIONCHAMBERELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcDistributionChamberElementType(); } },
{ "IFCDISTRIBUTIONCIRCUIT", []()->BuildingEntity* { return new IFC4X3::IfcDistributionCircuit(); } },
{ "IFCDISTRIBUTIONCONTROLELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcDistributionControlElement(); } },
{ "IFCDISTRIBUTIONCONTROLELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcDistributionControlElementType(); } },
{ "IFCDISTRIBUTIONELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcDistributionElement(); } },
{ "IFCDISTRIBUTIONELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcDistributionElementType(); } },
{ "IFCDISTRIBUTIONFLOWELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcDistributionFlowElement(); } },
{ "IFCDISTRIBUTIONFLOWELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcDistributionFlowElementType(); } },
{ "IFCDISTRIBUTIONPORT", []()->BuildingEntity* { return new IFC4X3::IfcDistributionPort(); } },
{ "IFCDISTRIBUTIONSYSTEM", []()->BuildingEntity* { return new IFC4X3::IfcDistributionSystem(); } },
{ "IFCDOCUMENTINFORMATION", []()->BuildingEntity* { return new IFC4X3::IfcDocumentInformation(); } },
{ "IFCDOCUMENTINFORMATIONRELATIONSHIP", []()->BuildingEntity* { return new IFC4X3::IfcDocumentInformationRelationship(); } },
{ "IFCDOCUMENTREFERENCE", []()->BuildingEntity* { return new IFC4X3::IfcDocumentReference(); } },
{ "IFCDOOR", []()->BuildingEntity* { return new IFC4X3::IfcDoor(); } },
{ "IFCDOORLININGPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcDoorLiningProperties(); } },
{ "IFCDOORPANELPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcDoorPanelProperties(); } },
{ "IFCDOORSTYLE", []()->BuildingEntity* { return new IFC4X3::IfcDoorStyle(); } },
{ "IFCDOORTYPE", []()->BuildingEntity* { return new IFC4X3::IfcDoorType(); } },
{ "IFCDRAUGHTINGPREDEFINEDCOLOUR", []()->BuildingEntity* { return new IFC4X3::IfcDraughtingPreDefinedColour(); } },
{ "IFCDRAUGHTINGPREDEFINEDCURVEFONT", []()->BuildingEntity* { return new IFC4X3::IfcDraughtingPreDefinedCurveFont(); } },
{ "IFCDUCTFITTING", []()->BuildingEntity* { return new IFC4X3::IfcDuctFitting(); } },
{ "IFCDUCTFITTINGTYPE", []()->BuildingEntity* { return new IFC4X3::IfcDuctFittingType(); } },
{ "IFCDUCTSEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcDuctSegment(); } },
{ "IFCDUCTSEGMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcDuctSegmentType(); } },
{ "IFCDUCTSILENCER", []()->BuildingEntity* { return new IFC4X3::IfcDuctSilencer(); } },
{ "IFCDUCTSILENCERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcDuctSilencerType(); } },
{ "IFCEARTHWORKSCUT", []()->BuildingEntity* { return new IFC4X3::IfcEarthworksCut(); } },
{ "IFCEARTHWORKSELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcEarthworksElement(); } },
{ "IFCEARTHWORKSFILL", []()->BuildingEntity* { return new IFC4X3::IfcEarthworksFill(); } },
{ "IFCEDGE", []()->BuildingEntity* { return new IFC4X3::IfcEdge(); } },
{ "IFCEDGECURVE", []()->BuildingEntity* { return new IFC4X3::IfcEdgeCurve(); } },
{ "IFCEDGELOOP", []()->BuildingEntity* { return new IFC4X3::IfcEdgeLoop(); } },
{ "IFCELECTRICAPPLIANCE", []()->BuildingEntity* { return new IFC4X3::IfcElectricAppliance(); } },
{ "IFCELECTRICAPPLIANCETYPE", []()->BuildingEntity* { return new IFC4X3::IfcElectricApplianceType(); } },
{ "IFCELECTRICDISTRIBUTIONBOARD", []()->BuildingEntity* { return new IFC4X3::IfcElectricDistributionBoard(); } },
{ "IFCELECTRICDISTRIBUTIONBOARDTYPE", []()->BuildingEntity* { return new IFC4X3::IfcElectricDistributionBoardType(); } },
{ "IFCELECTRICFLOWSTORAGEDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcElectricFlowStorageDevice(); } },
{ "IFCELECTRICFLOWSTORAGEDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcElectricFlowStorageDeviceType(); } },
{ "IFCELECTRICFLOWTREATMENTDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcElectricFlowTreatmentDevice(); } },
{ "IFCELECTRICFLOWTREATMENTDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcElectricFlowTreatmentDeviceType(); } },
{ "IFCELECTRICGENERATOR", []()->BuildingEntity* { return new IFC4X3::IfcElectricGenerator(); } },
{ "IFCELECTRICGENERATORTYPE", []()->BuildingEntity* { return new IFC4X3::IfcElectricGeneratorType(); } },
{ "IFCELECTRICMOTOR", []()->BuildingEntity* { return new IFC4X3::IfcElectricMotor(); } },
{ "IFCELECTRICMOTORTYPE", []()->BuildingEntity* { return new IFC4X3::IfcElectricMotorType(); } },
{ "IFCELECTRICTIMECONTROL", []()->BuildingEntity* { return new IFC4X3::IfcElectricTimeControl(); } },
{ "IFCELECTRICTIMECONTROLTYPE", []()->BuildingEntity* { return new IFC4X3::IfcElectricTimeControlType(); } },
{ "IFCELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcElement(); } },
{ "IFCELEMENTASSEMBLY", []()->BuildingEntity* { return new IFC4X3::IfcElementAssembly(); } },
{ "IFCELEMENTASSEMBLYTYPE", []()->BuildingEntity* { return new IFC4X3::IfcElementAssemblyType(); } },
{ "IFCELEMENTCOMPONENT", []()->BuildingEntity* { return new IFC4X3::IfcElementComponent(); } },
{ "IFCELEMENTCOMPONENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcElementComponentType(); } },
{ "IFCELEMENTQUANTITY", []()->BuildingEntity* { return new IFC4X3::IfcElementQuantity(); } },
{ "IFCELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcElementType(); } },
{ "IFCELEMENTARYSURFACE", []()->BuildingEntity* { return new IFC4X3::IfcElementarySurface(); } },
{ "IFCELLIPSE", []()->BuildingEntity* { return new IFC4X3::IfcEllipse(); } },
{ "IFCELLIPSEPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcEllipseProfileDef(); } },
{ "IFCENERGYCONVERSIONDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcEnergyConversionDevice(); } },
{ "IFCENERGYCONVERSIONDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcEnergyConversionDeviceType(); } },
{ "IFCENGINE", []()->BuildingEntity* { return new IFC4X3::IfcEngine(); } },
{ "IFCENGINETYPE", []()->BuildingEntity* { return new IFC4X3::IfcEngineType(); } },
{ "IFCEVAPORATIVECOOLER", []()->BuildingEntity* { return new IFC4X3::IfcEvaporativeCooler(); } },
{ "IFCEVAPORATIVECOOLERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcEvaporativeCoolerType(); } },
{ "IFCEVAPORATOR", []()->BuildingEntity* { return new IFC4X3::IfcEvaporator(); } },
{ "IFCEVAPORATORTYPE", []()->BuildingEntity* { return new IFC4X3::IfcEvaporatorType(); } },
{ "IFCEVENT", []()->BuildingEntity* { return new IFC4X3::IfcEvent(); } },
{ "IFCEVENTTIME", []()->BuildingEntity* { return new IFC4X3::IfcEventTime(); } },
{ "IFCEVENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcEventType(); } },
{ "IFCEXTENDEDPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcExtendedProperties(); } },
{ "IFCEXTERNALINFORMATION", []()->BuildingEntity* { return new IFC4X3::IfcExternalInformation(); } },
{ "IFCEXTERNALREFERENCE", []()->BuildingEntity* { return new IFC4X3::IfcExternalReference(); } },
{ "IFCEXTERNALREFERENCERELATIONSHIP", []()->BuildingEntity* { return new IFC4X3::IfcExternalReferenceRelationship(); } },
{ "IFCEXTERNALSPATIALELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcExternalSpatialElement(); } },
{ "IFCEXTERNALSPATIALSTRUCTUREELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcExternalSpatialStructureElement(); } },
{ "IFCEXTERNALLYDEFINEDHATCHSTYLE", []()->BuildingEntity* { return new IFC4X3::IfcExternallyDefinedHatchStyle(); } },
{ "IFCEXTERNALLYDEFINEDSURFACESTYLE", []()->BuildingEntity* { return new IFC4X3::IfcExternallyDefinedSurfaceStyle(); } },
{ "IFCEXTERNALLYDEFINEDTEXTFONT", []()->BuildingEntity* { return new IFC4X3::IfcExternallyDefinedTextFont(); } },
{ "IFCEXTRUDEDAREASOLID", []()->BuildingEntity* { return new IFC4X3::IfcExtrudedAreaSolid(); } },
{ "IFCEXTRUDEDAREASOLIDTAPERED", []()->BuildingEntity* { return new IFC4X3::IfcExtrudedAreaSolidTapered(); } },
{ "IFCFACE", []()->BuildingEntity* { return new IFC4X3::IfcFace(); } },
{ "IFCFACEBASEDSURFACEMODEL", []()->BuildingEntity* { return new IFC4X3::IfcFaceBasedSurfaceModel(); } },
{ "IFCFACEBOUND", []()->BuildingEntity* { return new IFC4X3::IfcFaceBound(); } },
{ "IFCFACEOUTERBOUND", []()->BuildingEntity* { return new IFC4X3::IfcFaceOuterBound(); } },
{ "IFCFACESURFACE", []()->BuildingEntity* { return new IFC4X3::IfcFaceSurface(); } },
{ "IFCFACETEDBREP", []()->BuildingEntity* { return new IFC4X3::IfcFacetedBrep(); } },
{ "IFCFACETEDBREPWITHVOIDS", []()->BuildingEntity* { return new IFC4X3::IfcFacetedBrepWithVoids(); } },
{ "IFCFACILITY", []()->BuildingEntity* { return new IFC4X3::IfcFacility(); } },
{ "IFCFACILITYPART", []()->BuildingEntity* { return new IFC4X3::IfcFacilityPart(); } },
{ "IFCFACILITYPARTCOMMON", []()->BuildingEntity* { return new IFC4X3::IfcFacilityPartCommon(); } },
{ "IFCFAILURECONNECTIONCONDITION", []()->BuildingEntity* { return new IFC4X3::IfcFailureConnectionCondition(); } },
{ "IFCFAN", []()->BuildingEntity* { return new IFC4X3::IfcFan(); } },
{ "IFCFANTYPE", []()->BuildingEntity* { return new IFC4X3::IfcFanType(); } },
{ "IFCFASTENER", []()->BuildingEntity* { return new IFC4X3::IfcFastener(); } },
{ "IFCFASTENERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcFastenerType(); } },
{ "IFCFEATUREELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcFeatureElement(); } },
{ "IFCFEATUREELEMENTADDITION", []()->BuildingEntity* { return new IFC4X3::IfcFeatureElementAddition(); } },
{ "IFCFEATUREELEMENTSUBTRACTION", []()->BuildingEntity* { return new IFC4X3::IfcFeatureElementSubtraction(); } },
{ "IFCFILLAREASTYLE", []()->BuildingEntity* { return new IFC4X3::IfcFillAreaStyle(); } },
{ "IFCFILLAREASTYLEHATCHING", []()->BuildingEntity* { return new IFC4X3::IfcFillAreaStyleHatching(); } },
{ "IFCFILLAREASTYLETILES", []()->BuildingEntity* { return new IFC4X3::IfcFillAreaStyleTiles(); } },
{ "IFCFILTER", []()->BuildingEntity* { return new IFC4X3::IfcFilter(); } },
{ "IFCFILTERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcFilterType(); } },
{ "IFCFIRESUPPRESSIONTERMINAL", []()->BuildingEntity* { return new IFC4X3::IfcFireSuppressionTerminal(); } },
{ "IFCFIRESUPPRESSIONTERMINALTYPE", []()->BuildingEntity* { return new IFC4X3::IfcFireSuppressionTerminalType(); } },
{ "IFCFIXEDREFERENCESWEPTAREASOLID", []()->BuildingEntity* { return new IFC4X3::IfcFixedReferenceSweptAreaSolid(); } },
{ "IFCFLOWCONTROLLER", []()->BuildingEntity* { return new IFC4X3::IfcFlowController(); } },
{ "IFCFLOWCONTROLLERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcFlowControllerType(); } },
{ "IFCFLOWFITTING", []()->BuildingEntity* { return new IFC4X3::IfcFlowFitting(); } },
{ "IFCFLOWFITTINGTYPE", []()->BuildingEntity* { return new IFC4X3::IfcFlowFittingType(); } },
{ "IFCFLOWINSTRUMENT", []()->BuildingEntity* { return new IFC4X3::IfcFlowInstrument(); } },
{ "IFCFLOWINSTRUMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcFlowInstrumentType(); } },
{ "IFCFLOWMETER", []()->BuildingEntity* { return new IFC4X3::IfcFlowMeter(); } },
{ "IFCFLOWMETERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcFlowMeterType(); } },
{ "IFCFLOWMOVINGDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcFlowMovingDevice(); } },
{ "IFCFLOWMOVINGDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcFlowMovingDeviceType(); } },
{ "IFCFLOWSEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcFlowSegment(); } },
{ "IFCFLOWSEGMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcFlowSegmentType(); } },
{ "IFCFLOWSTORAGEDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcFlowStorageDevice(); } },
{ "IFCFLOWSTORAGEDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcFlowStorageDeviceType(); } },
{ "IFCFLOWTERMINAL", []()->BuildingEntity* { return new IFC4X3::IfcFlowTerminal(); } },
{ "IFCFLOWTERMINALTYPE", []()->BuildingEntity* { return new IFC4X3::IfcFlowTerminalType(); } },
{ "IFCFLOWTREATMENTDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcFlowTreatmentDevice(); } },
{ "IFCFLOWTREATMENTDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcFlowTreatmentDeviceType(); } },
{ "IFCFOOTING", []()->BuildingEntity* { return new IFC4X3::IfcFooting(); } },
{ "IFCFOOTINGTYPE", []()->BuildingEntity* { return new IFC4X3::IfcFootingType(); } },
{ "IFCFURNISHINGELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcFurnishingElement(); } },
{ "IFCFURNISHINGELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcFurnishingElementType(); } },
{ "IFCFURNITURE", []()->BuildingEntity* { return new IFC4X3::IfcFurniture(); } },
{ "IFCFURNITURETYPE", []()->BuildingEntity* { return new IFC4X3::IfcFurnitureType(); } },
{ "IFCGEOGRAPHICELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcGeographicElement(); } },
{ "IFCGEOGRAPHICELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcGeographicElementType(); } },
{ "IFCGEOMETRICCURVESET", []()->BuildingEntity* { return new IFC4X3::IfcGeometricCurveSet(); } },
{ "IFCGEOMETRICREPRESENTATIONCONTEXT", []()->BuildingEntity* { return new IFC4X3::IfcGeometricRepresentationContext(); } },
{ "IFCGEOMETRICREPRESENTATIONITEM", []()->BuildingEntity* { return new IFC4X3::IfcGeometricRepresentationItem(); } },
{ "IFCGEOMETRICREPRESENTATIONSUBCONTEXT", []()->BuildingEntity* { return new IFC4X3::IfcGeometricRepresentationSubContext(); } },
{ "IFCGEOMETRICSET", []()->BuildingEntity* { return new IFC4X3::IfcGeometricSet(); } },
{ "IFCGEOMODEL", []()->BuildingEntity* { return new IFC4X3::IfcGeomodel(); } },
{ "IFCGEOSLICE", []()->BuildingEntity* { return new IFC4X3::IfcGeoslice(); } },
{ "IFCGEOTECHNICALASSEMBLY", []()->BuildingEntity* { return new IFC4X3::IfcGeotechnicalAssembly(); } },
{ "IFCGEOTECHNICALELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcGeotechnicalElement(); } },
{ "IFCGEOTECHNICALSTRATUM", []()->BuildingEntity* { return new IFC4X3::IfcGeotechnicalStratum(); } },
{ "IFCGRADIENTCURVE", []()->BuildingEntity* { return new IFC4X3::IfcGradientCurve(); } },
{ "IFCGRID", []()->BuildingEntity* { return new IFC4X3::IfcGrid(); } },
{ "IFCGRIDAXIS", []()->BuildingEntity* { return new IFC4X3::IfcGridAxis(); } },
{ "IFCGRIDPLACEMENT", []()->BuildingEntity* { return new IFC4X3::IfcGridPlacement(); } },
{ "IFCGROUP", []()->BuildingEntity* { return new IFC4X3::IfcGroup(); } },
{ "IFCHALFSPACESOLID", []()->BuildingEntity* { return new IFC4X3::IfcHalfSpaceSolid(); } },
{ "IFCHEATEXCHANGER", []()->BuildingEntity* { return new IFC4X3::IfcHeatExchanger(); } },
{ "IFCHEATEXCHANGERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcHeatExchangerType(); } },
{ "IFCHUMIDIFIER", []()->BuildingEntity* { return new IFC4X3::IfcHumidifier(); } },
{ "IFCHUMIDIFIERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcHumidifierType(); } },
{ "IFCISHAPEPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcIShapeProfileDef(); } },
{ "IFCIMAGETEXTURE", []()->BuildingEntity* { return new IFC4X3::IfcImageTexture(); } },
{ "IFCIMPACTPROTECTIONDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcImpactProtectionDevice(); } },
{ "IFCIMPACTPROTECTIONDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcImpactProtectionDeviceType(); } },
{ "IFCINDEXEDCOLOURMAP", []()->BuildingEntity* { return new IFC4X3::IfcIndexedColourMap(); } },
{ "IFCINDEXEDPOLYCURVE", []()->BuildingEntity* { return new IFC4X3::IfcIndexedPolyCurve(); } },
{ "IFCINDEXEDPOLYGONALFACE", []()->BuildingEntity* { return new IFC4X3::IfcIndexedPolygonalFace(); } },
{ "IFCINDEXEDPOLYGONALFACEWITHVOIDS", []()->BuildingEntity* { return new IFC4X3::IfcIndexedPolygonalFaceWithVoids(); } },
{ "IFCINDEXEDPOLYGONALTEXTUREMAP", []()->BuildingEntity* { return new IFC4X3::IfcIndexedPolygonalTextureMap(); } },
{ "IFCINDEXEDTEXTUREMAP", []()->BuildingEntity* { return new IFC4X3::IfcIndexedTextureMap(); } },
{ "IFCINDEXEDTRIANGLETEXTUREMAP", []()->BuildingEntity* { return new IFC4X3::IfcIndexedTriangleTextureMap(); } },
{ "IFCINTERCEPTOR", []()->BuildingEntity* { return new IFC4X3::IfcInterceptor(); } },
{ "IFCINTERCEPTORTYPE", []()->BuildingEntity* { return new IFC4X3::IfcInterceptorType(); } },
{ "IFCINTERSECTIONCURVE", []()->BuildingEntity* { return new IFC4X3::IfcIntersectionCurve(); } },
{ "IFCINVENTORY", []()->BuildingEntity* { return new IFC4X3::IfcInventory(); } },
{ "IFCIRREGULARTIMESERIES", []()->BuildingEntity* { return new IFC4X3::IfcIrregularTimeSeries(); } },
{ "IFCIRREGULARTIMESERIESVALUE", []()->BuildingEntity* { return new IFC4X3::IfcIrregularTimeSeriesValue(); } },
{ "IFCJUNCTIONBOX", []()->BuildingEntity* { return new IFC4X3::IfcJunctionBox(); } },
{ "IFCJUNCTIONBOXTYPE", []()->BuildingEntity* { return new IFC4X3::IfcJunctionBoxType(); } },
{ "IFCKERB", []()->BuildingEntity* { return new IFC4X3::IfcKerb(); } },
{ "IFCKERBTYPE", []()->BuildingEntity* { return new IFC4X3::IfcKerbType(); } },
{ "IFCLSHAPEPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcLShapeProfileDef(); } },
{ "IFCLABORRESOURCE", []()->BuildingEntity* { return new IFC4X3::IfcLaborResource(); } },
{ "IFCLABORRESOURCETYPE", []()->BuildingEntity* { return new IFC4X3::IfcLaborResourceType(); } },
{ "IFCLAGTIME", []()->BuildingEntity* { return new IFC4X3::IfcLagTime(); } },
{ "IFCLAMP", []()->BuildingEntity* { return new IFC4X3::IfcLamp(); } },
{ "IFCLAMPTYPE", []()->BuildingEntity* { return new IFC4X3::IfcLampType(); } },
{ "IFCLIBRARYINFORMATION", []()->BuildingEntity* { return new IFC4X3::IfcLibraryInformation(); } },
{ "IFCLIBRARYREFERENCE", []()->BuildingEntity* { return new IFC4X3::IfcLibraryReference(); } },
{ "IFCLIGHTDISTRIBUTIONDATA", []()->BuildingEntity* { return new IFC4X3::IfcLightDistributionData(); } },
{ "IFCLIGHTFIXTURE", []()->BuildingEntity* { return new IFC4X3::IfcLightFixture(); } },
{ "IFCLIGHTFIXTURETYPE", []()->BuildingEntity* { return new IFC4X3::IfcLightFixtureType(); } },
{ "IFCLIGHTINTENSITYDISTRIBUTION", []()->BuildingEntity* { return new IFC4X3::IfcLightIntensityDistribution(); } },
{ "IFCLIGHTSOURCE", []()->BuildingEntity* { return new IFC4X3::IfcLightSource(); } },
{ "IFCLIGHTSOURCEAMBIENT", []()->BuildingEntity* { return new IFC4X3::IfcLightSourceAmbient(); } },
{ "IFCLIGHTSOURCEDIRECTIONAL", []()->BuildingEntity* { return new IFC4X3::IfcLightSourceDirectional(); } },
{ "IFCLIGHTSOURCEGONIOMETRIC", []()->BuildingEntity* { return new IFC4X3::IfcLightSourceGoniometric(); } },
{ "IFCLIGHTSOURCEPOSITIONAL", []()->BuildingEntity* { return new IFC4X3::IfcLightSourcePositional(); } },
{ "IFCLIGHTSOURCESPOT", []()->BuildingEntity* { return new IFC4X3::IfcLightSourceSpot(); } },
{ "IFCLINE", []()->BuildingEntity* { return new IFC4X3::IfcLine(); } },
{ "IFCLINEARELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcLinearElement(); } },
{ "IFCLINEARPLACEMENT", []()->BuildingEntity* { return new IFC4X3::IfcLinearPlacement(); } },
{ "IFCLINEARPOSITIONINGELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcLinearPositioningElement(); } },
{ "IFCLIQUIDTERMINAL", []()->BuildingEntity* { return new IFC4X3::IfcLiquidTerminal(); } },
{ "IFCLIQUIDTERMINALTYPE", []()->BuildingEntity* { return new IFC4X3::IfcLiquidTerminalType(); } },
{ "IFCLOCALPLACEMENT", []()->BuildingEntity* { return new IFC4X3::IfcLocalPlacement(); } },
{ "IFCLOOP", []()->BuildingEntity* { return new IFC4X3::IfcLoop(); } },
{ "IFCMANIFOLDSOLIDBREP", []()->BuildingEntity* { return new IFC4X3::IfcManifoldSolidBrep(); } },
{ "IFCMAPCONVERSION", []()->BuildingEntity* { return new IFC4X3::IfcMapConversion(); } },
{ "IFCMAPPEDITEM", []()->BuildingEntity* { return new IFC4X3::IfcMappedItem(); } },
{ "IFCMARINEFACILITY", []()->BuildingEntity* { return new IFC4X3::IfcMarineFacility(); } },
{ "IFCMARINEPART", []()->BuildingEntity* { return new IFC4X3::IfcMarinePart(); } },
{ "IFCMATERIAL", []()->BuildingEntity* { return new IFC4X3::IfcMaterial(); } },
{ "IFCMATERIALCLASSIFICATIONRELATIONSHIP", []()->BuildingEntity* { return new IFC4X3::IfcMaterialClassificationRelationship(); } },
{ "IFCMATERIALCONSTITUENT", []()->BuildingEntity* { return new IFC4X3::IfcMaterialConstituent(); } },
{ "IFCMATERIALCONSTITUENTSET", []()->BuildingEntity* { return new IFC4X3::IfcMaterialConstituentSet(); } },
{ "IFCMATERIALDEFINITION", []()->BuildingEntity* { return new IFC4X3::IfcMaterialDefinition(); } },
{ "IFCMATERIALDEFINITIONREPRESENTATION", []()->BuildingEntity* { return new IFC4X3::IfcMaterialDefinitionRepresentation(); } },
{ "IFCMATERIALLAYER", []()->BuildingEntity* { return new IFC4X3::IfcMaterialLayer(); } },
{ "IFCMATERIALLAYERSET", []()->BuildingEntity* { return new IFC4X3::IfcMaterialLayerSet(); } },
{ "IFCMATERIALLAYERSETUSAGE", []()->BuildingEntity* { return new IFC4X3::IfcMaterialLayerSetUsage(); } },
{ "IFCMATERIALLAYERWITHOFFSETS", []()->BuildingEntity* { return new IFC4X3::IfcMaterialLayerWithOffsets(); } },
{ "IFCMATERIALLIST", []()->BuildingEntity* { return new IFC4X3::IfcMaterialList(); } },
{ "IFCMATERIALPROFILE", []()->BuildingEntity* { return new IFC4X3::IfcMaterialProfile(); } },
{ "IFCMATERIALPROFILESET", []()->BuildingEntity* { return new IFC4X3::IfcMaterialProfileSet(); } },
{ "IFCMATERIALPROFILESETUSAGE", []()->BuildingEntity* { return new IFC4X3::IfcMaterialProfileSetUsage(); } },
{ "IFCMATERIALPROFILESETUSAGETAPERING", []()->BuildingEntity* { return new IFC4X3::IfcMaterialProfileSetUsageTapering(); } },
{ "IFCMATERIALPROFILEWITHOFFSETS", []()->BuildingEntity* { return new IFC4X3::IfcMaterialProfileWithOffsets(); } },
{ "IFCMATERIALPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcMaterialProperties(); } },
{ "IFCMATERIALRELATIONSHIP", []()->BuildingEntity* { return new IFC4X3::IfcMaterialRelationship(); } },
{ "IFCMATERIALUSAGEDEFINITION", []()->BuildingEntity* { return new IFC4X3::IfcMaterialUsageDefinition(); } },
{ "IFCMEASUREWITHUNIT", []()->BuildingEntity* { return new IFC4X3::IfcMeasureWithUnit(); } },
{ "IFCMECHANICALFASTENER", []()->BuildingEntity* { return new IFC4X3::IfcMechanicalFastener(); } },
{ "IFCMECHANICALFASTENERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcMechanicalFastenerType(); } },
{ "IFCMEDICALDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcMedicalDevice(); } },
{ "IFCMEDICALDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcMedicalDeviceType(); } },
{ "IFCMEMBER", []()->BuildingEntity* { return new IFC4X3::IfcMember(); } },
{ "IFCMEMBERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcMemberType(); } },
{ "IFCMETRIC", []()->BuildingEntity* { return new IFC4X3::IfcMetric(); } },
{ "IFCMIRROREDPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcMirroredProfileDef(); } },
{ "IFCMOBILETELECOMMUNICATIONSAPPLIANCE", []()->BuildingEntity* { return new IFC4X3::IfcMobileTelecommunicationsAppliance(); } },
{ "IFCMOBILETELECOMMUNICATIONSAPPLIANCETYPE", []()->BuildingEntity* { return new IFC4X3::IfcMobileTelecommunicationsApplianceType(); } },
{ "IFCMONETARYUNIT", []()->BuildingEntity* { return new IFC4X3::IfcMonetaryUnit(); } },
{ "IFCMOORINGDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcMooringDevice(); } },
{ "IFCMOORINGDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcMooringDeviceType(); } },
{ "IFCMOTORCONNECTION", []()->BuildingEntity* { return new IFC4X3::IfcMotorConnection(); } },
{ "IFCMOTORCONNECTIONTYPE", []()->BuildingEntity* { return new IFC4X3::IfcMotorConnectionType(); } },
{ "IFCNAMEDUNIT", []()->BuildingEntity* { return new IFC4X3::IfcNamedUnit(); } },
{ "IFCNAVIGATIONELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcNavigationElement(); } },
{ "IFCNAVIGATIONELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcNavigationElementType(); } },
{ "IFCOBJECT", []()->BuildingEntity* { return new IFC4X3::IfcObject(); } },
{ "IFCOBJECTDEFINITION", []()->BuildingEntity* { return new IFC4X3::IfcObjectDefinition(); } },
{ "IFCOBJECTPLACEMENT", []()->BuildingEntity* { return new IFC4X3::IfcObjectPlacement(); } },
{ "IFCOBJECTIVE", []()->BuildingEntity* { return new IFC4X3::IfcObjective(); } },
{ "IFCOCCUPANT", []()->BuildingEntity* { return new IFC4X3::IfcOccupant(); } },
{ "IFCOFFSETCURVE", []()->BuildingEntity* { return new IFC4X3::IfcOffsetCurve(); } },
{ "IFCOFFSETCURVE2D", []()->BuildingEntity* { return new IFC4X3::IfcOffsetCurve2D(); } },
{ "IFCOFFSETCURVE3D", []()->BuildingEntity* { return new IFC4X3::IfcOffsetCurve3D(); } },
{ "IFCOFFSETCURVEBYDISTANCES", []()->BuildingEntity* { return new IFC4X3::IfcOffsetCurveByDistances(); } },
{ "IFCOPENCROSSPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcOpenCrossProfileDef(); } },
{ "IFCOPENSHELL", []()->BuildingEntity* { return new IFC4X3::IfcOpenShell(); } },
{ "IFCOPENINGELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcOpeningElement(); } },
{ "IFCORGANIZATION", []()->BuildingEntity* { return new IFC4X3::IfcOrganization(); } },
{ "IFCORGANIZATIONRELATIONSHIP", []()->BuildingEntity* { return new IFC4X3::IfcOrganizationRelationship(); } },
{ "IFCORIENTEDEDGE", []()->BuildingEntity* { return new IFC4X3::IfcOrientedEdge(); } },
{ "IFCOUTERBOUNDARYCURVE", []()->BuildingEntity* { return new IFC4X3::IfcOuterBoundaryCurve(); } },
{ "IFCOUTLET", []()->BuildingEntity* { return new IFC4X3::IfcOutlet(); } },
{ "IFCOUTLETTYPE", []()->BuildingEntity* { return new IFC4X3::IfcOutletType(); } },
{ "IFCOWNERHISTORY", []()->BuildingEntity* { return new IFC4X3::IfcOwnerHistory(); } },
{ "IFCPARAMETERIZEDPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcParameterizedProfileDef(); } },
{ "IFCPATH", []()->BuildingEntity* { return new IFC4X3::IfcPath(); } },
{ "IFCPAVEMENT", []()->BuildingEntity* { return new IFC4X3::IfcPavement(); } },
{ "IFCPAVEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcPavementType(); } },
{ "IFCPCURVE", []()->BuildingEntity* { return new IFC4X3::IfcPcurve(); } },
{ "IFCPERFORMANCEHISTORY", []()->BuildingEntity* { return new IFC4X3::IfcPerformanceHistory(); } },
{ "IFCPERMEABLECOVERINGPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcPermeableCoveringProperties(); } },
{ "IFCPERMIT", []()->BuildingEntity* { return new IFC4X3::IfcPermit(); } },
{ "IFCPERSON", []()->BuildingEntity* { return new IFC4X3::IfcPerson(); } },
{ "IFCPERSONANDORGANIZATION", []()->BuildingEntity* { return new IFC4X3::IfcPersonAndOrganization(); } },
{ "IFCPHYSICALCOMPLEXQUANTITY", []()->BuildingEntity* { return new IFC4X3::IfcPhysicalComplexQuantity(); } },
{ "IFCPHYSICALQUANTITY", []()->BuildingEntity* { return new IFC4X3::IfcPhysicalQuantity(); } },
{ "IFCPHYSICALSIMPLEQUANTITY", []()->BuildingEntity* { return new IFC4X3::IfcPhysicalSimpleQuantity(); } },
{ "IFCPILE", []()->BuildingEntity* { return new IFC4X3::IfcPile(); } },
{ "IFCPILETYPE", []()->BuildingEntity* { return new IFC4X3::IfcPileType(); } },
{ "IFCPIPEFITTING", []()->BuildingEntity* { return new IFC4X3::IfcPipeFitting(); } },
{ "IFCPIPEFITTINGTYPE", []()->BuildingEntity* { return new IFC4X3::IfcPipeFittingType(); } },
{ "IFCPIPESEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcPipeSegment(); } },
{ "IFCPIPESEGMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcPipeSegmentType(); } },
{ "IFCPIXELTEXTURE", []()->BuildingEntity* { return new IFC4X3::IfcPixelTexture(); } },
{ "IFCPLACEMENT", []()->BuildingEntity* { return new IFC4X3::IfcPlacement(); } },
{ "IFCPLANARBOX", []()->BuildingEntity* { return new IFC4X3::IfcPlanarBox(); } },
{ "IFCPLANAREXTENT", []()->BuildingEntity* { return new IFC4X3::IfcPlanarExtent(); } },
{ "IFCPLANE", []()->BuildingEntity* { return new IFC4X3::IfcPlane(); } },
{ "IFCPLATE", []()->BuildingEntity* { return new IFC4X3::IfcPlate(); } },
{ "IFCPLATETYPE", []()->BuildingEntity* { return new IFC4X3::IfcPlateType(); } },
{ "IFCPOINT", []()->BuildingEntity* { return new IFC4X3::IfcPoint(); } },
{ "IFCPOINTBYDISTANCEEXPRESSION", []()->BuildingEntity* { return new IFC4X3::IfcPointByDistanceExpression(); } },
{ "IFCPOINTONCURVE", []()->BuildingEntity* { return new IFC4X3::IfcPointOnCurve(); } },
{ "IFCPOINTONSURFACE", []()->BuildingEntity* { return new IFC4X3::IfcPointOnSurface(); } },
{ "IFCPOLYLOOP", []()->BuildingEntity* { return new IFC4X3::IfcPolyLoop(); } },
{ "IFCPOLYGONALBOUNDEDHALFSPACE", []()->BuildingEntity* { return new IFC4X3::IfcPolygonalBoundedHalfSpace(); } },
{ "IFCPOLYGONALFACESET", []()->BuildingEntity* { return new IFC4X3::IfcPolygonalFaceSet(); } },
{ "IFCPOLYLINE", []()->BuildingEntity* { return new IFC4X3::IfcPolyline(); } },
{ "IFCPOLYNOMIALCURVE", []()->BuildingEntity* { return new IFC4X3::IfcPolynomialCurve(); } },
{ "IFCPORT", []()->BuildingEntity* { return new IFC4X3::IfcPort(); } },
{ "IFCPOSITIONINGELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcPositioningElement(); } },
{ "IFCPOSTALADDRESS", []()->BuildingEntity* { return new IFC4X3::IfcPostalAddress(); } },
{ "IFCPREDEFINEDCOLOUR", []()->BuildingEntity* { return new IFC4X3::IfcPreDefinedColour(); } },
{ "IFCPREDEFINEDCURVEFONT", []()->BuildingEntity* { return new IFC4X3::IfcPreDefinedCurveFont(); } },
{ "IFCPREDEFINEDITEM", []()->BuildingEntity* { return new IFC4X3::IfcPreDefinedItem(); } },
{ "IFCPREDEFINEDPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcPreDefinedProperties(); } },
{ "IFCPREDEFINEDPROPERTYSET", []()->BuildingEntity* { return new IFC4X3::IfcPreDefinedPropertySet(); } },
{ "IFCPREDEFINEDTEXTFONT", []()->BuildingEntity* { return new IFC4X3::IfcPreDefinedTextFont(); } },
{ "IFCPRESENTATIONITEM", []()->BuildingEntity* { return new IFC4X3::IfcPresentationItem(); } },
{ "IFCPRESENTATIONLAYERASSIGNMENT", []()->BuildingEntity* { return new IFC4X3::IfcPresentationLayerAssignment(); } },
{ "IFCPRESENTATIONLAYERWITHSTYLE", []()->BuildingEntity* { return new IFC4X3::IfcPresentationLayerWithStyle(); } },
{ "IFCPRESENTATIONSTYLE", []()->BuildingEntity* { return new IFC4X3::IfcPresentationStyle(); } },
{ "IFCPRESENTATIONSTYLEASSIGNMENT", []()->BuildingEntity* { return new IFC4X3::IfcPresentationStyleAssignment(); } },
{ "IFCPROCEDURE", []()->BuildingEntity* { return new IFC4X3::IfcProcedure(); } },
{ "IFCPROCEDURETYPE", []()->BuildingEntity* { return new IFC4X3::IfcProcedureType(); } },
{ "IFCPROCESS", []()->BuildingEntity* { return new IFC4X3::IfcProcess(); } },
{ "IFCPRODUCT", []()->BuildingEntity* { return new IFC4X3::IfcProduct(); } },
{ "IFCPRODUCTDEFINITIONSHAPE", []()->BuildingEntity* { return new IFC4X3::IfcProductDefinitionShape(); } },
{ "IFCPRODUCTREPRESENTATION", []()->BuildingEntity* { return new IFC4X3::IfcProductRepresentation(); } },
{ "IFCPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcProfileDef(); } },
{ "IFCPROFILEPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcProfileProperties(); } },
{ "IFCPROJECT", []()->BuildingEntity* { return new IFC4X3::IfcProject(); } },
{ "IFCPROJECTLIBRARY", []()->BuildingEntity* { return new IFC4X3::IfcProjectLibrary(); } },
{ "IFCPROJECTORDER", []()->BuildingEntity* { return new IFC4X3::IfcProjectOrder(); } },
{ "IFCPROJECTEDCRS", []()->BuildingEntity* { return new IFC4X3::IfcProjectedCRS(); } },
{ "IFCPROJECTIONELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcProjectionElement(); } },
{ "IFCPROPERTY", []()->BuildingEntity* { return new IFC4X3::IfcProperty(); } },
{ "IFCPROPERTYABSTRACTION", []()->BuildingEntity* { return new IFC4X3::IfcPropertyAbstraction(); } },
{ "IFCPROPERTYBOUNDEDVALUE", []()->BuildingEntity* { return new IFC4X3::IfcPropertyBoundedValue(); } },
{ "IFCPROPERTYDEFINITION", []()->BuildingEntity* { return new IFC4X3::IfcPropertyDefinition(); } },
{ "IFCPROPERTYDEPENDENCYRELATIONSHIP", []()->BuildingEntity* { return new IFC4X3::IfcPropertyDependencyRelationship(); } },
{ "IFCPROPERTYENUMERATEDVALUE", []()->BuildingEntity* { return new IFC4X3::IfcPropertyEnumeratedValue(); } },
{ "IFCPROPERTYENUMERATION", []()->BuildingEntity* { return new IFC4X3::IfcPropertyEnumeration(); } },
{ "IFCPROPERTYLISTVALUE", []()->BuildingEntity* { return new IFC4X3::IfcPropertyListValue(); } },
{ "IFCPROPERTYREFERENCEVALUE", []()->BuildingEntity* { return new IFC4X3::IfcPropertyReferenceValue(); } },
{ "IFCPROPERTYSET", []()->BuildingEntity* { return new IFC4X3::IfcPropertySet(); } },
{ "IFCPROPERTYSETDEFINITION", []()->BuildingEntity* { return new IFC4X3::IfcPropertySetDefinition(); } },
{ "IFCPROPERTYSETTEMPLATE", []()->BuildingEntity* { return new IFC4X3::IfcPropertySetTemplate(); } },
{ "IFCPROPERTYSINGLEVALUE", []()->BuildingEntity* { return new IFC4X3::IfcPropertySingleValue(); } },
{ "IFCPROPERTYTABLEVALUE", []()->BuildingEntity* { return new IFC4X3::IfcPropertyTableValue(); } },
{ "IFCPROPERTYTEMPLATE", []()->BuildingEntity* { return new IFC4X3::IfcPropertyTemplate(); } },
{ "IFCPROPERTYTEMPLATEDEFINITION", []()->BuildingEntity* { return new IFC4X3::IfcPropertyTemplateDefinition(); } },
{ "IFCPROTECTIVEDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcProtectiveDevice(); } },
{ "IFCPROTECTIVEDEVICETRIPPINGUNIT", []()->BuildingEntity* { return new IFC4X3::IfcProtectiveDeviceTrippingUnit(); } },
{ "IFCPROTECTIVEDEVICETRIPPINGUNITTYPE", []()->BuildingEntity* { return new IFC4X3::IfcProtectiveDeviceTrippingUnitType(); } },
{ "IFCPROTECTIVEDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcProtectiveDeviceType(); } },
{ "IFCPUMP", []()->BuildingEntity* { return new IFC4X3::IfcPump(); } },
{ "IFCPUMPTYPE", []()->BuildingEntity* { return new IFC4X3::IfcPumpType(); } },
{ "IFCQUANTITYAREA", []()->BuildingEntity* { return new IFC4X3::IfcQuantityArea(); } },
{ "IFCQUANTITYCOUNT", []()->BuildingEntity* { return new IFC4X3::IfcQuantityCount(); } },
{ "IFCQUANTITYLENGTH", []()->BuildingEntity* { return new IFC4X3::IfcQuantityLength(); } },
{ "IFCQUANTITYNUMBER", []()->BuildingEntity* { return new IFC4X3::IfcQuantityNumber(); } },
{ "IFCQUANTITYSET", []()->BuildingEntity* { return new IFC4X3::IfcQuantitySet(); } },
{ "IFCQUANTITYTIME", []()->BuildingEntity* { return new IFC4X3::IfcQuantityTime(); } },
{ "IFCQUANTITYVOLUME", []()->BuildingEntity* { return new IFC4X3::IfcQuantityVolume(); } },
{ "IFCQUANTITYWEIGHT", []()->BuildingEntity* { return new IFC4X3::IfcQuantityWeight(); } },
{ "IFCRAIL", []()->BuildingEntity* { return new IFC4X3::IfcRail(); } },
{ "IFCRAILTYPE", []()->BuildingEntity* { return new IFC4X3::IfcRailType(); } },
{ "IFCRAILING", []()->BuildingEntity* { return new IFC4X3::IfcRailing(); } },
{ "IFCRAILINGTYPE", []()->BuildingEntity* { return new IFC4X3::IfcRailingType(); } },
{ "IFCRAILWAY", []()->BuildingEntity* { return new IFC4X3::IfcRailway(); } },
{ "IFCRAILWAYPART", []()->BuildingEntity* { return new IFC4X3::IfcRailwayPart(); } },
{ "IFCRAMP", []()->BuildingEntity* { return new IFC4X3::IfcRamp(); } },
{ "IFCRAMPFLIGHT", []()->BuildingEntity* { return new IFC4X3::IfcRampFlight(); } },
{ "IFCRAMPFLIGHTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcRampFlightType(); } },
{ "IFCRAMPTYPE", []()->BuildingEntity* { return new IFC4X3::IfcRampType(); } },
{ "IFCRATIONALBSPLINECURVEWITHKNOTS", []()->BuildingEntity* { return new IFC4X3::IfcRationalBSplineCurveWithKnots(); } },
{ "IFCRATIONALBSPLINESURFACEWITHKNOTS", []()->BuildingEntity* { return new IFC4X3::IfcRationalBSplineSurfaceWithKnots(); } },
{ "IFCRECTANGLEHOLLOWPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcRectangleHollowProfileDef(); } },
{ "IFCRECTANGLEPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcRectangleProfileDef(); } },
{ "IFCRECTANGULARPYRAMID", []()->BuildingEntity* { return new IFC4X3::IfcRectangularPyramid(); } },
{ "IFCRECTANGULARTRIMMEDSURFACE", []()->BuildingEntity* { return new IFC4X3::IfcRectangularTrimmedSurface(); } },
{ "IFCRECURRENCEPATTERN", []()->BuildingEntity* { return new IFC4X3::IfcRecurrencePattern(); } },
{ "IFCREFERENCE", []()->BuildingEntity* { return new IFC4X3::IfcReference(); } },
{ "IFCREFERENT", []()->BuildingEntity* { return new IFC4X3::IfcReferent(); } },
{ "IFCREGULARTIMESERIES", []()->BuildingEntity* { return new IFC4X3::IfcRegularTimeSeries(); } },
{ "IFCREINFORCEDSOIL", []()->BuildingEntity* { return new IFC4X3::IfcReinforcedSoil(); } },
{ "IFCREINFORCEMENTBARPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcReinforcementBarProperties(); } },
{ "IFCREINFORCEMENTDEFINITIONPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcReinforcementDefinitionProperties(); } },
{ "IFCREINFORCINGBAR", []()->BuildingEntity* { return new IFC4X3::IfcReinforcingBar(); } },
{ "IFCREINFORCINGBARTYPE", []()->BuildingEntity* { return new IFC4X3::IfcReinforcingBarType(); } },
{ "IFCREINFORCINGELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcReinforcingElement(); } },
{ "IFCREINFORCINGELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcReinforcingElementType(); } },
{ "IFCREINFORCINGMESH", []()->BuildingEntity* { return new IFC4X3::IfcReinforcingMesh(); } },
{ "IFCREINFORCINGMESHTYPE", []()->BuildingEntity* { return new IFC4X3::IfcReinforcingMeshType(); } },
{ "IFCRELADHERESTOELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcRelAdheresToElement(); } },
{ "IFCRELAGGREGATES", []()->BuildingEntity* { return new IFC4X3::IfcRelAggregates(); } },
{ "IFCRELASSIGNS", []()->BuildingEntity* { return new IFC4X3::IfcRelAssigns(); } },
{ "IFCRELASSIGNSTOACTOR", []()->BuildingEntity* { return new IFC4X3::IfcRelAssignsToActor(); } },
{ "IFCRELASSIGNSTOCONTROL", []()->BuildingEntity* { return new IFC4X3::IfcRelAssignsToControl(); } },
{ "IFCRELASSIGNSTOGROUP", []()->BuildingEntity* { return new IFC4X3::IfcRelAssignsToGroup(); } },
{ "IFCRELASSIGNSTOGROUPBYFACTOR", []()->BuildingEntity* { return new IFC4X3::IfcRelAssignsToGroupByFactor(); } },
{ "IFCRELASSIGNSTOPROCESS", []()->BuildingEntity* { return new IFC4X3::IfcRelAssignsToProcess(); } },
{ "IFCRELASSIGNSTOPRODUCT", []()->BuildingEntity* { return new IFC4X3::IfcRelAssignsToProduct(); } },
{ "IFCRELASSIGNSTORESOURCE", []()->BuildingEntity* { return new IFC4X3::IfcRelAssignsToResource(); } },
{ "IFCRELASSOCIATES", []()->BuildingEntity* { return new IFC4X3::IfcRelAssociates(); } },
{ "IFCRELASSOCIATESAPPROVAL", []()->BuildingEntity* { return new IFC4X3::IfcRelAssociatesApproval(); } },
{ "IFCRELASSOCIATESCLASSIFICATION", []()->BuildingEntity* { return new IFC4X3::IfcRelAssociatesClassification(); } },
{ "IFCRELASSOCIATESCONSTRAINT", []()->BuildingEntity* { return new IFC4X3::IfcRelAssociatesConstraint(); } },
{ "IFCRELASSOCIATESDOCUMENT", []()->BuildingEntity* { return new IFC4X3::IfcRelAssociatesDocument(); } },
{ "IFCRELASSOCIATESLIBRARY", []()->BuildingEntity* { return new IFC4X3::IfcRelAssociatesLibrary(); } },
{ "IFCRELASSOCIATESMATERIAL", []()->BuildingEntity* { return new IFC4X3::IfcRelAssociatesMaterial(); } },
{ "IFCRELASSOCIATESPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcRelAssociatesProfileDef(); } },
{ "IFCRELCONNECTS", []()->BuildingEntity* { return new IFC4X3::IfcRelConnects(); } },
{ "IFCRELCONNECTSELEMENTS", []()->BuildingEntity* { return new IFC4X3::IfcRelConnectsElements(); } },
{ "IFCRELCONNECTSPATHELEMENTS", []()->BuildingEntity* { return new IFC4X3::IfcRelConnectsPathElements(); } },
{ "IFCRELCONNECTSPORTTOELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcRelConnectsPortToElement(); } },
{ "IFCRELCONNECTSPORTS", []()->BuildingEntity* { return new IFC4X3::IfcRelConnectsPorts(); } },
{ "IFCRELCONNECTSSTRUCTURALACTIVITY", []()->BuildingEntity* { return new IFC4X3::IfcRelConnectsStructuralActivity(); } },
{ "IFCRELCONNECTSSTRUCTURALMEMBER", []()->BuildingEntity* { return new IFC4X3::IfcRelConnectsStructuralMember(); } },
{ "IFCRELCONNECTSWITHECCENTRICITY", []()->BuildingEntity* { return new IFC4X3::IfcRelConnectsWithEccentricity(); } },
{ "IFCRELCONNECTSWITHREALIZINGELEMENTS", []()->BuildingEntity* { return new IFC4X3::IfcRelConnectsWithRealizingElements(); } },
{ "IFCRELCONTAINEDINSPATIALSTRUCTURE", []()->BuildingEntity* { return new IFC4X3::IfcRelContainedInSpatialStructure(); } },
{ "IFCRELCOVERSBLDGELEMENTS", []()->BuildingEntity* { return new IFC4X3::IfcRelCoversBldgElements(); } },
{ "IFCRELCOVERSSPACES", []()->BuildingEntity* { return new IFC4X3::IfcRelCoversSpaces(); } },
{ "IFCRELDECLARES", []()->BuildingEntity* { return new IFC4X3::IfcRelDeclares(); } },
{ "IFCRELDECOMPOSES", []()->BuildingEntity* { return new IFC4X3::IfcRelDecomposes(); } },
{ "IFCRELDEFINES", []()->BuildingEntity* { return new IFC4X3::IfcRelDefines(); } },
{ "IFCRELDEFINESBYOBJECT", []()->BuildingEntity* { return new IFC4X3::IfcRelDefinesByObject(); } },
{ "IFCRELDEFINESBYPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcRelDefinesByProperties(); } },
{ "IFCRELDEFINESBYTEMPLATE", []()->BuildingEntity* { return new IFC4X3::IfcRelDefinesByTemplate(); } },
{ "IFCRELDEFINESBYTYPE", []()->BuildingEntity* { return new IFC4X3::IfcRelDefinesByType(); } },
{ "IFCRELFILLSELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcRelFillsElement(); } },
{ "IFCRELFLOWCONTROLELEMENTS", []()->BuildingEntity* { return new IFC4X3::IfcRelFlowControlElements(); } },
{ "IFCRELINTERFERESELEMENTS", []()->BuildingEntity* { return new IFC4X3::IfcRelInterferesElements(); } },
{ "IFCRELNESTS", []()->BuildingEntity* { return new IFC4X3::IfcRelNests(); } },
{ "IFCRELPOSITIONS", []()->BuildingEntity* { return new IFC4X3::IfcRelPositions(); } },
{ "IFCRELPROJECTSELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcRelProjectsElement(); } },
{ "IFCRELREFERENCEDINSPATIALSTRUCTURE", []()->BuildingEntity* { return new IFC4X3::IfcRelReferencedInSpatialStructure(); } },
{ "IFCRELSEQUENCE", []()->BuildingEntity* { return new IFC4X3::IfcRelSequence(); } },
{ "IFCRELSERVICESBUILDINGS", []()->BuildingEntity* { return new IFC4X3::IfcRelServicesBuildings(); } },
{ "IFCRELSPACEBOUNDARY", []()->BuildingEntity* { return new IFC4X3::IfcRelSpaceBoundary(); } },
{ "IFCRELSPACEBOUNDARY1STLEVEL", []()->BuildingEntity* { return new IFC4X3::IfcRelSpaceBoundary1stLevel(); } },
{ "IFCRELSPACEBOUNDARY2NDLEVEL", []()->BuildingEntity* { return new IFC4X3::IfcRelSpaceBoundary2ndLevel(); } },
{ "IFCRELVOIDSELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcRelVoidsElement(); } },
{ "IFCRELATIONSHIP", []()->BuildingEntity* { return new IFC4X3::IfcRelationship(); } },
{ "IFCREPARAMETRISEDCOMPOSITECURVESEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcReparametrisedCompositeCurveSegment(); } },
{ "IFCREPRESENTATION", []()->BuildingEntity* { return new IFC4X3::IfcRepresentation(); } },
{ "IFCREPRESENTATIONCONTEXT", []()->BuildingEntity* { return new IFC4X3::IfcRepresentationContext(); } },
{ "IFCREPRESENTATIONITEM", []()->BuildingEntity* { return new IFC4X3::IfcRepresentationItem(); } },
{ "IFCREPRESENTATIONMAP", []()->BuildingEntity* { return new IFC4X3::IfcRepresentationMap(); } },
{ "IFCRESOURCE", []()->BuildingEntity* { return new IFC4X3::IfcResource(); } },
{ "IFCRESOURCEAPPROVALRELATIONSHIP", []()->BuildingEntity* { return new IFC4X3::IfcResourceApprovalRelationship(); } },
{ "IFCRESOURCECONSTRAINTRELATIONSHIP", []()->BuildingEntity* { return new IFC4X3::IfcResourceConstraintRelationship(); } },
{ "IFCRESOURCELEVELRELATIONSHIP", []()->BuildingEntity* { return new IFC4X3::IfcResourceLevelRelationship(); } },
{ "IFCRESOURCETIME", []()->BuildingEntity* { return new IFC4X3::IfcResourceTime(); } },
{ "IFCREVOLVEDAREASOLID", []()->BuildingEntity* { return new IFC4X3::IfcRevolvedAreaSolid(); } },
{ "IFCREVOLVEDAREASOLIDTAPERED", []()->BuildingEntity* { return new IFC4X3::IfcRevolvedAreaSolidTapered(); } },
{ "IFCRIGHTCIRCULARCONE", []()->BuildingEntity* { return new IFC4X3::IfcRightCircularCone(); } },
{ "IFCRIGHTCIRCULARCYLINDER", []()->BuildingEntity* { return new IFC4X3::IfcRightCircularCylinder(); } },
{ "IFCROAD", []()->BuildingEntity* { return new IFC4X3::IfcRoad(); } },
{ "IFCROADPART", []()->BuildingEntity* { return new IFC4X3::IfcRoadPart(); } },
{ "IFCROOF", []()->BuildingEntity* { return new IFC4X3::IfcRoof(); } },
{ "IFCROOFTYPE", []()->BuildingEntity* { return new IFC4X3::IfcRoofType(); } },
{ "IFCROOT", []()->BuildingEntity* { return new IFC4X3::IfcRoot(); } },
{ "IFCROUNDEDRECTANGLEPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcRoundedRectangleProfileDef(); } },
{ "IFCSIUNIT", []()->BuildingEntity* { return new IFC4X3::IfcSIUnit(); } },
{ "IFCSANITARYTERMINAL", []()->BuildingEntity* { return new IFC4X3::IfcSanitaryTerminal(); } },
{ "IFCSANITARYTERMINALTYPE", []()->BuildingEntity* { return new IFC4X3::IfcSanitaryTerminalType(); } },
{ "IFCSCHEDULINGTIME", []()->BuildingEntity* { return new IFC4X3::IfcSchedulingTime(); } },
{ "IFCSEAMCURVE", []()->BuildingEntity* { return new IFC4X3::IfcSeamCurve(); } },
{ "IFCSECONDORDERPOLYNOMIALSPIRAL", []()->BuildingEntity* { return new IFC4X3::IfcSecondOrderPolynomialSpiral(); } },
{ "IFCSECTIONPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcSectionProperties(); } },
{ "IFCSECTIONREINFORCEMENTPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcSectionReinforcementProperties(); } },
{ "IFCSECTIONEDSOLID", []()->BuildingEntity* { return new IFC4X3::IfcSectionedSolid(); } },
{ "IFCSECTIONEDSOLIDHORIZONTAL", []()->BuildingEntity* { return new IFC4X3::IfcSectionedSolidHorizontal(); } },
{ "IFCSECTIONEDSPINE", []()->BuildingEntity* { return new IFC4X3::IfcSectionedSpine(); } },
{ "IFCSECTIONEDSURFACE", []()->BuildingEntity* { return new IFC4X3::IfcSectionedSurface(); } },
{ "IFCSEGMENT", []()->BuildingEntity* { return new IFC4X3::IfcSegment(); } },
{ "IFCSEGMENTEDREFERENCECURVE", []()->BuildingEntity* { return new IFC4X3::IfcSegmentedReferenceCurve(); } },
{ "IFCSENSOR", []()->BuildingEntity* { return new IFC4X3::IfcSensor(); } },
{ "IFCSENSORTYPE", []()->BuildingEntity* { return new IFC4X3::IfcSensorType(); } },
{ "IFCSEVENTHORDERPOLYNOMIALSPIRAL", []()->BuildingEntity* { return new IFC4X3::IfcSeventhOrderPolynomialSpiral(); } },
{ "IFCSHADINGDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcShadingDevice(); } },
{ "IFCSHADINGDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcShadingDeviceType(); } },
{ "IFCSHAPEASPECT", []()->BuildingEntity* { return new IFC4X3::IfcShapeAspect(); } },
{ "IFCSHAPEMODEL", []()->BuildingEntity* { return new IFC4X3::IfcShapeModel(); } },
{ "IFCSHAPEREPRESENTATION", []()->BuildingEntity* { return new IFC4X3::IfcShapeRepresentation(); } },
{ "IFCSHELLBASEDSURFACEMODEL", []()->BuildingEntity* { return new IFC4X3::IfcShellBasedSurfaceModel(); } },
{ "IFCSIGN", []()->BuildingEntity* { return new IFC4X3::IfcSign(); } },
{ "IFCSIGNTYPE", []()->BuildingEntity* { return new IFC4X3::IfcSignType(); } },
{ "IFCSIGNAL", []()->BuildingEntity* { return new IFC4X3::IfcSignal(); } },
{ "IFCSIGNALTYPE", []()->BuildingEntity* { return new IFC4X3::IfcSignalType(); } },
{ "IFCSIMPLEPROPERTY", []()->BuildingEntity* { return new IFC4X3::IfcSimpleProperty(); } },
{ "IFCSIMPLEPROPERTYTEMPLATE", []()->BuildingEntity* { return new IFC4X3::IfcSimplePropertyTemplate(); } },
{ "IFCSINESPIRAL", []()->BuildingEntity* { return new IFC4X3::IfcSineSpiral(); } },
{ "IFCSITE", []()->BuildingEntity* { return new IFC4X3::IfcSite(); } },
{ "IFCSLAB", []()->BuildingEntity* { return new IFC4X3::IfcSlab(); } },
{ "IFCSLABTYPE", []()->BuildingEntity* { return new IFC4X3::IfcSlabType(); } },
{ "IFCSLIPPAGECONNECTIONCONDITION", []()->BuildingEntity* { return new IFC4X3::IfcSlippageConnectionCondition(); } },
{ "IFCSOLARDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcSolarDevice(); } },
{ "IFCSOLARDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcSolarDeviceType(); } },
{ "IFCSOLIDMODEL", []()->BuildingEntity* { return new IFC4X3::IfcSolidModel(); } },
{ "IFCSPACE", []()->BuildingEntity* { return new IFC4X3::IfcSpace(); } },
{ "IFCSPACEHEATER", []()->BuildingEntity* { return new IFC4X3::IfcSpaceHeater(); } },
{ "IFCSPACEHEATERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcSpaceHeaterType(); } },
{ "IFCSPACETYPE", []()->BuildingEntity* { return new IFC4X3::IfcSpaceType(); } },
{ "IFCSPATIALELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcSpatialElement(); } },
{ "IFCSPATIALELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcSpatialElementType(); } },
{ "IFCSPATIALSTRUCTUREELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcSpatialStructureElement(); } },
{ "IFCSPATIALSTRUCTUREELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcSpatialStructureElementType(); } },
{ "IFCSPATIALZONE", []()->BuildingEntity* { return new IFC4X3::IfcSpatialZone(); } },
{ "IFCSPATIALZONETYPE", []()->BuildingEntity* { return new IFC4X3::IfcSpatialZoneType(); } },
{ "IFCSPHERE", []()->BuildingEntity* { return new IFC4X3::IfcSphere(); } },
{ "IFCSPHERICALSURFACE", []()->BuildingEntity* { return new IFC4X3::IfcSphericalSurface(); } },
{ "IFCSPIRAL", []()->BuildingEntity* { return new IFC4X3::IfcSpiral(); } },
{ "IFCSTACKTERMINAL", []()->BuildingEntity* { return new IFC4X3::IfcStackTerminal(); } },
{ "IFCSTACKTERMINALTYPE", []()->BuildingEntity* { return new IFC4X3::IfcStackTerminalType(); } },
{ "IFCSTAIR", []()->BuildingEntity* { return new IFC4X3::IfcStair(); } },
{ "IFCSTAIRFLIGHT", []()->BuildingEntity* { return new IFC4X3::IfcStairFlight(); } },
{ "IFCSTAIRFLIGHTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcStairFlightType(); } },
{ "IFCSTAIRTYPE", []()->BuildingEntity* { return new IFC4X3::IfcStairType(); } },
{ "IFCSTRUCTURALACTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralAction(); } },
{ "IFCSTRUCTURALACTIVITY", []()->BuildingEntity* { return new IFC4X3::IfcStructuralActivity(); } },
{ "IFCSTRUCTURALANALYSISMODEL", []()->BuildingEntity* { return new IFC4X3::IfcStructuralAnalysisModel(); } },
{ "IFCSTRUCTURALCONNECTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralConnection(); } },
{ "IFCSTRUCTURALCONNECTIONCONDITION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralConnectionCondition(); } },
{ "IFCSTRUCTURALCURVEACTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralCurveAction(); } },
{ "IFCSTRUCTURALCURVECONNECTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralCurveConnection(); } },
{ "IFCSTRUCTURALCURVEMEMBER", []()->BuildingEntity* { return new IFC4X3::IfcStructuralCurveMember(); } },
{ "IFCSTRUCTURALCURVEMEMBERVARYING", []()->BuildingEntity* { return new IFC4X3::IfcStructuralCurveMemberVarying(); } },
{ "IFCSTRUCTURALCURVEREACTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralCurveReaction(); } },
{ "IFCSTRUCTURALITEM", []()->BuildingEntity* { return new IFC4X3::IfcStructuralItem(); } },
{ "IFCSTRUCTURALLINEARACTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLinearAction(); } },
{ "IFCSTRUCTURALLOAD", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLoad(); } },
{ "IFCSTRUCTURALLOADCASE", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLoadCase(); } },
{ "IFCSTRUCTURALLOADCONFIGURATION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLoadConfiguration(); } },
{ "IFCSTRUCTURALLOADGROUP", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLoadGroup(); } },
{ "IFCSTRUCTURALLOADLINEARFORCE", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLoadLinearForce(); } },
{ "IFCSTRUCTURALLOADORRESULT", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLoadOrResult(); } },
{ "IFCSTRUCTURALLOADPLANARFORCE", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLoadPlanarForce(); } },
{ "IFCSTRUCTURALLOADSINGLEDISPLACEMENT", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLoadSingleDisplacement(); } },
{ "IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLoadSingleDisplacementDistortion(); } },
{ "IFCSTRUCTURALLOADSINGLEFORCE", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLoadSingleForce(); } },
{ "IFCSTRUCTURALLOADSINGLEFORCEWARPING", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLoadSingleForceWarping(); } },
{ "IFCSTRUCTURALLOADSTATIC", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLoadStatic(); } },
{ "IFCSTRUCTURALLOADTEMPERATURE", []()->BuildingEntity* { return new IFC4X3::IfcStructuralLoadTemperature(); } },
{ "IFCSTRUCTURALMEMBER", []()->BuildingEntity* { return new IFC4X3::IfcStructuralMember(); } },
{ "IFCSTRUCTURALPLANARACTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralPlanarAction(); } },
{ "IFCSTRUCTURALPOINTACTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralPointAction(); } },
{ "IFCSTRUCTURALPOINTCONNECTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralPointConnection(); } },
{ "IFCSTRUCTURALPOINTREACTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralPointReaction(); } },
{ "IFCSTRUCTURALREACTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralReaction(); } },
{ "IFCSTRUCTURALRESULTGROUP", []()->BuildingEntity* { return new IFC4X3::IfcStructuralResultGroup(); } },
{ "IFCSTRUCTURALSURFACEACTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralSurfaceAction(); } },
{ "IFCSTRUCTURALSURFACECONNECTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralSurfaceConnection(); } },
{ "IFCSTRUCTURALSURFACEMEMBER", []()->BuildingEntity* { return new IFC4X3::IfcStructuralSurfaceMember(); } },
{ "IFCSTRUCTURALSURFACEMEMBERVARYING", []()->BuildingEntity* { return new IFC4X3::IfcStructuralSurfaceMemberVarying(); } },
{ "IFCSTRUCTURALSURFACEREACTION", []()->BuildingEntity* { return new IFC4X3::IfcStructuralSurfaceReaction(); } },
{ "IFCSTYLEMODEL", []()->BuildingEntity* { return new IFC4X3::IfcStyleModel(); } },
{ "IFCSTYLEDITEM", []()->BuildingEntity* { return new IFC4X3::IfcStyledItem(); } },
{ "IFCSTYLEDREPRESENTATION", []()->BuildingEntity* { return new IFC4X3::IfcStyledRepresentation(); } },
{ "IFCSUBCONTRACTRESOURCE", []()->BuildingEntity* { return new IFC4X3::IfcSubContractResource(); } },
{ "IFCSUBCONTRACTRESOURCETYPE", []()->BuildingEntity* { return new IFC4X3::IfcSubContractResourceType(); } },
{ "IFCSUBEDGE", []()->BuildingEntity* { return new IFC4X3::IfcSubedge(); } },
{ "IFCSURFACE", []()->BuildingEntity* { return new IFC4X3::IfcSurface(); } },
{ "IFCSURFACECURVE", []()->BuildingEntity* { return new IFC4X3::IfcSurfaceCurve(); } },
{ "IFCSURFACECURVESWEPTAREASOLID", []()->BuildingEntity* { return new IFC4X3::IfcSurfaceCurveSweptAreaSolid(); } },
{ "IFCSURFACEFEATURE", []()->BuildingEntity* { return new IFC4X3::IfcSurfaceFeature(); } },
{ "IFCSURFACEOFLINEAREXTRUSION", []()->BuildingEntity* { return new IFC4X3::IfcSurfaceOfLinearExtrusion(); } },
{ "IFCSURFACEOFREVOLUTION", []()->BuildingEntity* { return new IFC4X3::IfcSurfaceOfRevolution(); } },
{ "IFCSURFACEREINFORCEMENTAREA", []()->BuildingEntity* { return new IFC4X3::IfcSurfaceReinforcementArea(); } },
{ "IFCSURFACESTYLE", []()->BuildingEntity* { return new IFC4X3::IfcSurfaceStyle(); } },
{ "IFCSURFACESTYLELIGHTING", []()->BuildingEntity* { return new IFC4X3::IfcSurfaceStyleLighting(); } },
{ "IFCSURFACESTYLEREFRACTION", []()->BuildingEntity* { return new IFC4X3::IfcSurfaceStyleRefraction(); } },
{ "IFCSURFACESTYLERENDERING", []()->BuildingEntity* { return new IFC4X3::IfcSurfaceStyleRendering(); } },
{ "IFCSURFACESTYLESHADING", []()->BuildingEntity* { return new IFC4X3::IfcSurfaceStyleShading(); } },
{ "IFCSURFACESTYLEWITHTEXTURES", []()->BuildingEntity* { return new IFC4X3::IfcSurfaceStyleWithTextures(); } },
{ "IFCSURFACETEXTURE", []()->BuildingEntity* { return new IFC4X3::IfcSurfaceTexture(); } },
{ "IFCSWEPTAREASOLID", []()->BuildingEntity* { return new IFC4X3::IfcSweptAreaSolid(); } },
{ "IFCSWEPTDISKSOLID", []()->BuildingEntity* { return new IFC4X3::IfcSweptDiskSolid(); } },
{ "IFCSWEPTDISKSOLIDPOLYGONAL", []()->BuildingEntity* { return new IFC4X3::IfcSweptDiskSolidPolygonal(); } },
{ "IFCSWEPTSURFACE", []()->BuildingEntity* { return new IFC4X3::IfcSweptSurface(); } },
{ "IFCSWITCHINGDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcSwitchingDevice(); } },
{ "IFCSWITCHINGDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcSwitchingDeviceType(); } },
{ "IFCSYSTEM", []()->BuildingEntity* { return new IFC4X3::IfcSystem(); } },
{ "IFCSYSTEMFURNITUREELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcSystemFurnitureElement(); } },
{ "IFCSYSTEMFURNITUREELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcSystemFurnitureElementType(); } },
{ "IFCTSHAPEPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcTShapeProfileDef(); } },
{ "IFCTABLE", []()->BuildingEntity* { return new IFC4X3::IfcTable(); } },
{ "IFCTABLECOLUMN", []()->BuildingEntity* { return new IFC4X3::IfcTableColumn(); } },
{ "IFCTABLEROW", []()->BuildingEntity* { return new IFC4X3::IfcTableRow(); } },
{ "IFCTANK", []()->BuildingEntity* { return new IFC4X3::IfcTank(); } },
{ "IFCTANKTYPE", []()->BuildingEntity* { return new IFC4X3::IfcTankType(); } },
{ "IFCTASK", []()->BuildingEntity* { return new IFC4X3::IfcTask(); } },
{ "IFCTASKTIME", []()->BuildingEntity* { return new IFC4X3::IfcTaskTime(); } },
{ "IFCTASKTIMERECURRING", []()->BuildingEntity* { return new IFC4X3::IfcTaskTimeRecurring(); } },
{ "IFCTASKTYPE", []()->BuildingEntity* { return new IFC4X3::IfcTaskType(); } },
{ "IFCTELECOMADDRESS", []()->BuildingEntity* { return new IFC4X3::IfcTelecomAddress(); } },
{ "IFCTENDON", []()->BuildingEntity* { return new IFC4X3::IfcTendon(); } },
{ "IFCTENDONANCHOR", []()->BuildingEntity* { return new IFC4X3::IfcTendonAnchor(); } },
{ "IFCTENDONANCHORTYPE", []()->BuildingEntity* { return new IFC4X3::IfcTendonAnchorType(); } },
{ "IFCTENDONCONDUIT", []()->BuildingEntity* { return new IFC4X3::IfcTendonConduit(); } },
{ "IFCTENDONCONDUITTYPE", []()->BuildingEntity* { return new IFC4X3::IfcTendonConduitType(); } },
{ "IFCTENDONTYPE", []()->BuildingEntity* { return new IFC4X3::IfcTendonType(); } },
{ "IFCTESSELLATEDFACESET", []()->BuildingEntity* { return new IFC4X3::IfcTessellatedFaceSet(); } },
{ "IFCTESSELLATEDITEM", []()->BuildingEntity* { return new IFC4X3::IfcTessellatedItem(); } },
{ "IFCTEXTLITERAL", []()->BuildingEntity* { return new IFC4X3::IfcTextLiteral(); } },
{ "IFCTEXTLITERALWITHEXTENT", []()->BuildingEntity* { return new IFC4X3::IfcTextLiteralWithExtent(); } },
{ "IFCTEXTSTYLE", []()->BuildingEntity* { return new IFC4X3::IfcTextStyle(); } },
{ "IFCTEXTSTYLEFONTMODEL", []()->BuildingEntity* { return new IFC4X3::IfcTextStyleFontModel(); } },
{ "IFCTEXTSTYLEFORDEFINEDFONT", []()->BuildingEntity* { return new IFC4X3::IfcTextStyleForDefinedFont(); } },
{ "IFCTEXTSTYLETEXTMODEL", []()->BuildingEntity* { return new IFC4X3::IfcTextStyleTextModel(); } },
{ "IFCTEXTURECOORDINATE", []()->BuildingEntity* { return new IFC4X3::IfcTextureCoordinate(); } },
{ "IFCTEXTURECOORDINATEGENERATOR", []()->BuildingEntity* { return new IFC4X3::IfcTextureCoordinateGenerator(); } },
{ "IFCTEXTURECOORDINATEINDICES", []()->BuildingEntity* { return new IFC4X3::IfcTextureCoordinateIndices(); } },
{ "IFCTEXTURECOORDINATEINDICESWITHVOIDS", []()->BuildingEntity* { return new IFC4X3::IfcTextureCoordinateIndicesWithVoids(); } },
{ "IFCTEXTUREMAP", []()->BuildingEntity* { return new IFC4X3::IfcTextureMap(); } },
{ "IFCTEXTUREVERTEX", []()->BuildingEntity* { return new IFC4X3::IfcTextureVertex(); } },
{ "IFCTEXTUREVERTEXLIST", []()->BuildingEntity* { return new IFC4X3::IfcTextureVertexList(); } },
{ "IFCTHIRDORDERPOLYNOMIALSPIRAL", []()->BuildingEntity* { return new IFC4X3::IfcThirdOrderPolynomialSpiral(); } },
{ "IFCTIMEPERIOD", []()->BuildingEntity* { return new IFC4X3::IfcTimePeriod(); } },
{ "IFCTIMESERIES", []()->BuildingEntity* { return new IFC4X3::IfcTimeSeries(); } },
{ "IFCTIMESERIESVALUE", []()->BuildingEntity* { return new IFC4X3::IfcTimeSeriesValue(); } },
{ "IFCTOPOLOGICALREPRESENTATIONITEM", []()->BuildingEntity* { return new IFC4X3::IfcTopologicalRepresentationItem(); } },
{ "IFCTOPOLOGYREPRESENTATION", []()->BuildingEntity* { return new IFC4X3::IfcTopologyRepresentation(); } },
{ "IFCTOROIDALSURFACE", []()->BuildingEntity* { return new IFC4X3::IfcToroidalSurface(); } },
{ "IFCTRACKELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcTrackElement(); } },
{ "IFCTRACKELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcTrackElementType(); } },
{ "IFCTRANSFORMER", []()->BuildingEntity* { return new IFC4X3::IfcTransformer(); } },
{ "IFCTRANSFORMERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcTransformerType(); } },
{ "IFCTRANSPORTELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcTransportElement(); } },
{ "IFCTRANSPORTELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcTransportElementType(); } },
{ "IFCTRANSPORTATIONDEVICE", []()->BuildingEntity* { return new IFC4X3::IfcTransportationDevice(); } },
{ "IFCTRANSPORTATIONDEVICETYPE", []()->BuildingEntity* { return new IFC4X3::IfcTransportationDeviceType(); } },
{ "IFCTRAPEZIUMPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcTrapeziumProfileDef(); } },
{ "IFCTRIANGULATEDFACESET", []()->BuildingEntity* { return new IFC4X3::IfcTriangulatedFaceSet(); } },
{ "IFCTRIANGULATEDIRREGULARNETWORK", []()->BuildingEntity* { return new IFC4X3::IfcTriangulatedIrregularNetwork(); } },
{ "IFCTRIMMEDCURVE", []()->BuildingEntity* { return new IFC4X3::IfcTrimmedCurve(); } },
{ "IFCTUBEBUNDLE", []()->BuildingEntity* { return new IFC4X3::IfcTubeBundle(); } },
{ "IFCTUBEBUNDLETYPE", []()->BuildingEntity* { return new IFC4X3::IfcTubeBundleType(); } },
{ "IFCTYPEOBJECT", []()->BuildingEntity* { return new IFC4X3::IfcTypeObject(); } },
{ "IFCTYPEPROCESS", []()->BuildingEntity* { return new IFC4X3::IfcTypeProcess(); } },
{ "IFCTYPEPRODUCT", []()->BuildingEntity* { return new IFC4X3::IfcTypeProduct(); } },
{ "IFCTYPERESOURCE", []()->BuildingEntity* { return new IFC4X3::IfcTypeResource(); } },
{ "IFCUSHAPEPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcUShapeProfileDef(); } },
{ "IFCUNITASSIGNMENT", []()->BuildingEntity* { return new IFC4X3::IfcUnitAssignment(); } },
{ "IFCUNITARYCONTROLELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcUnitaryControlElement(); } },
{ "IFCUNITARYCONTROLELEMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcUnitaryControlElementType(); } },
{ "IFCUNITARYEQUIPMENT", []()->BuildingEntity* { return new IFC4X3::IfcUnitaryEquipment(); } },
{ "IFCUNITARYEQUIPMENTTYPE", []()->BuildingEntity* { return new IFC4X3::IfcUnitaryEquipmentType(); } },
{ "IFCVALVE", []()->BuildingEntity* { return new IFC4X3::IfcValve(); } },
{ "IFCVALVETYPE", []()->BuildingEntity* { return new IFC4X3::IfcValveType(); } },
{ "IFCVECTOR", []()->BuildingEntity* { return new IFC4X3::IfcVector(); } },
{ "IFCVEHICLE", []()->BuildingEntity* { return new IFC4X3::IfcVehicle(); } },
{ "IFCVEHICLETYPE", []()->BuildingEntity* { return new IFC4X3::IfcVehicleType(); } },
{ "IFCVERTEX", []()->BuildingEntity* { return new IFC4X3::IfcVertex(); } },
{ "IFCVERTEXLOOP", []()->BuildingEntity* { return new IFC4X3::IfcVertexLoop(); } },
{ "IFCVERTEXPOINT", []()->BuildingEntity* { return new IFC4X3::IfcVertexPoint(); } },
{ "IFCVIBRATIONDAMPER", []()->BuildingEntity* { return new IFC4X3::IfcVibrationDamper(); } },
{ "IFCVIBRATIONDAMPERTYPE", []()->BuildingEntity* { return new IFC4X3::IfcVibrationDamperType(); } },
{ "IFCVIBRATIONISOLATOR", []()->BuildingEntity* { return new IFC4X3::IfcVibrationIsolator(); } },
{ "IFCVIBRATIONISOLATORTYPE", []()->BuildingEntity* { return new IFC4X3::IfcVibrationIsolatorType(); } },
{ "IFCVIRTUALELEMENT", []()->BuildingEntity* { return new IFC4X3::IfcVirtualElement(); } },
{ "IFCVIRTUALGRIDINTERSECTION", []()->BuildingEntity* { return new IFC4X3::IfcVirtualGridIntersection(); } },
{ "IFCVOIDINGFEATURE", []()->BuildingEntity* { return new IFC4X3::IfcVoidingFeature(); } },
{ "IFCWALL", []()->BuildingEntity* { return new IFC4X3::IfcWall(); } },
{ "IFCWALLSTANDARDCASE", []()->BuildingEntity* { return new IFC4X3::IfcWallStandardCase(); } },
{ "IFCWALLTYPE", []()->BuildingEntity* { return new IFC4X3::IfcWallType(); } },
{ "IFCWASTETERMINAL", []()->BuildingEntity* { return new IFC4X3::IfcWasteTerminal(); } },
{ "IFCWASTETERMINALTYPE", []()->BuildingEntity* { return new IFC4X3::IfcWasteTerminalType(); } },
{ "IFCWINDOW", []()->BuildingEntity* { return new IFC4X3::IfcWindow(); } },
{ "IFCWINDOWLININGPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcWindowLiningProperties(); } },
{ "IFCWINDOWPANELPROPERTIES", []()->BuildingEntity* { return new IFC4X3::IfcWindowPanelProperties(); } },
{ "IFCWINDOWSTYLE", []()->BuildingEntity* { return new IFC4X3::IfcWindowStyle(); } },
{ "IFCWINDOWTYPE", []()->BuildingEntity* { return new IFC4X3::IfcWindowType(); } },
{ "IFCWORKCALENDAR", []()->BuildingEntity* { return new IFC4X3::IfcWorkCalendar(); } },
{ "IFCWORKCONTROL", []()->BuildingEntity* { return new IFC4X3::IfcWorkControl(); } },
{ "IFCWORKPLAN", []()->BuildingEntity* { return new IFC4X3::IfcWorkPlan(); } },
{ "IFCWORKSCHEDULE", []()->BuildingEntity* { return new IFC4X3::IfcWorkSchedule(); } },
{ "IFCWORKTIME", []()->BuildingEntity* { return new IFC4X3::IfcWorkTime(); } },
{ "IFCZSHAPEPROFILEDEF", []()->BuildingEntity* { return new IFC4X3::IfcZShapeProfileDef(); } },
{ "IFCZONE", []()->BuildingEntity* { return new IFC4X3::IfcZone(); } }};

BuildingEntity* IFC4X3::EntityFactory::createEntityObject( const std::string& class_name_upper )
{
	auto it_find = entity_factory_map.find( class_name_upper );
	if( it_find != entity_factory_map.end() )
	{
		return it_find->second();
	}
	// class_name not registered
	return nullptr;
}
void IFC4X3::EntityFactory::emptyMapOfEntities()
{
	entity_factory_map.clear();
}
const char* IFC4X3::EntityFactory::getStringForClassID(uint32_t ifcClassID)
{
	switch( ifcClassID )
	{
		case 3699917729: return "IfcAbsorbedDoseMeasure";
		case 4182062534: return "IfcAccelerationMeasure";
		case 4151168619: return "IfcActionRequestTypeEnum";
		case 126693432: return "IfcActionSourceTypeEnum";
		case 2261624226: return "IfcActionTypeEnum";
		case 1728812236: return "IfcActorSelect";
		case 815500815: return "IfcActuatorTypeEnum";
		case 33568735: return "IfcAddressTypeEnum";
		case 1269596434: return "IfcAirTerminalBoxTypeEnum";
		case 1239913253: return "IfcAirTerminalTypeEnum";
		case 1797193231: return "IfcAirToAirHeatRecoveryTypeEnum";
		case 4164688622: return "IfcAlarmTypeEnum";
		case 2969962241: return "IfcAlignmentCantSegmentTypeEnum";
		case 3194911961: return "IfcAlignmentHorizontalSegmentTypeEnum";
		case 2326367582: return "IfcAlignmentTypeEnum";
		case 1505327130: return "IfcAlignmentVerticalSegmentTypeEnum";
		case 360377573: return "IfcAmountOfSubstanceMeasure";
		case 3881097202: return "IfcAnalysisModelTypeEnum";
		case 2506162743: return "IfcAnalysisTheoryTypeEnum";
		case 632304761: return "IfcAngularVelocityMeasure";
		case 3733744356: return "IfcAnnotationTypeEnum";
		case 2887218128: return "IfcAppliedValueSelect";
		case 3683503648: return "IfcArcIndex";
		case 1500781891: return "IfcAreaDensityMeasure";
		case 2650437152: return "IfcAreaMeasure";
		case 373436428: return "IfcArithmeticOperatorEnum";
		case 1925676203: return "IfcAssemblyPlaceEnum";
		case 2981638260: return "IfcAudioVisualApplianceTypeEnum";
		case 382301979: return "IfcAxis2Placement";
		case 3573632694: return "IfcBSplineCurveForm";
		case 37940459: return "IfcBSplineSurfaceForm";
		case 358033588: return "IfcBeamTypeEnum";
		case 3397575177: return "IfcBearingTypeDisplacementEnum";
		case 3124462625: return "IfcBearingTypeEnum";
		case 207745069: return "IfcBenchmarkEnum";
		case 2739565819: return "IfcBendingParameterSelect";
		case 2314439260: return "IfcBinary";
		case 3726661758: return "IfcBoilerTypeEnum";
		case 2735952531: return "IfcBoolean";
		case 1532845080: return "IfcBooleanOperand";
		case 3054888242: return "IfcBooleanOperator";
		case 1867003952: return "IfcBoxAlignment";
		case 492794765: return "IfcBridgePartTypeEnum";
		case 1536983066: return "IfcBridgeTypeEnum";
		case 3476419373: return "IfcBuildingElementPartTypeEnum";
		case 1913101020: return "IfcBuildingElementProxyTypeEnum";
		case 3114819794: return "IfcBuildingSystemTypeEnum";
		case 1338660958: return "IfcBuiltSystemTypeEnum";
		case 1973315761: return "IfcBurnerTypeEnum";
		case 54623293: return "IfcCableCarrierFittingTypeEnum";
		case 1501183454: return "IfcCableCarrierSegmentTypeEnum";
		case 2089642407: return "IfcCableFittingTypeEnum";
		case 649472068: return "IfcCableSegmentTypeEnum";
		case 4218053802: return "IfcCaissonFoundationTypeEnum";
		case 1683019596: return "IfcCardinalPointReference";
		case 531202833: return "IfcChangeActionEnum";
		case 1693487766: return "IfcChillerTypeEnum";
		case 627898853: return "IfcChimneyTypeEnum";
		case 3714063296: return "IfcClassificationReferenceSelect";
		case 49088397: return "IfcClassificationSelect";
		case 1760651496: return "IfcCoilTypeEnum";
		case 3052078743: return "IfcColour";
		case 1877383524: return "IfcColourOrFactor";
		case 1460979143: return "IfcColumnTypeEnum";
		case 614319689: return "IfcCommunicationsApplianceTypeEnum";
		case 2991860651: return "IfcComplexNumber";
		case 1692979113: return "IfcComplexPropertyTemplateTypeEnum";
		case 3812528620: return "IfcCompoundPlaneAngleMeasure";
		case 798148481: return "IfcCompressorTypeEnum";
		case 3453182476: return "IfcCondenserTypeEnum";
		case 2128902557: return "IfcConnectionTypeEnum";
		case 4111266820: return "IfcConstraintEnum";
		case 91683625: return "IfcConstructionEquipmentResourceTypeEnum";
		case 3593671318: return "IfcConstructionMaterialResourceTypeEnum";
		case 506783830: return "IfcConstructionProductResourceTypeEnum";
		case 3238673880: return "IfcContextDependentMeasure";
		case 3805913727: return "IfcControllerTypeEnum";
		case 1906401893: return "IfcConveyorSegmentTypeEnum";
		case 3405941096: return "IfcCooledBeamTypeEnum";
		case 668377315: return "IfcCoolingTowerTypeEnum";
		case 2853304871: return "IfcCoordinateReferenceSystemSelect";
		case 683809370: return "IfcCostItemTypeEnum";
		case 672692152: return "IfcCostScheduleTypeEnum";
		case 1778710042: return "IfcCountMeasure";
		case 1420568751: return "IfcCourseTypeEnum";
		case 2966862399: return "IfcCoveringTypeEnum";
		case 2952703181: return "IfcCrewResourceTypeEnum";
		case 717039860: return "IfcCsgSelect";
		case 2451242878: return "IfcCurtainWallTypeEnum";
		case 94842927: return "IfcCurvatureMeasure";
		case 3733406562: return "IfcCurveFontOrScaledCurveFontSelect";
		case 3547450287: return "IfcCurveInterpolationEnum";
		case 3166912612: return "IfcCurveMeasureSelect";
		case 1636267221: return "IfcCurveOnSurface";
		case 4149869811: return "IfcCurveOrEdgeCurve";
		case 3345948710: return "IfcCurveStyleFontSelect";
		case 2079224331: return "IfcDamperTypeEnum";
		case 290688911: return "IfcDataOriginEnum";
		case 937566702: return "IfcDate";
		case 2195413836: return "IfcDateTime";
		case 86635668: return "IfcDayInMonthNumber";
		case 3701338814: return "IfcDayInWeekNumber";
		case 736530666: return "IfcDefinitionSelect";
		case 1050256046: return "IfcDerivedMeasureValue";
		case 124742581: return "IfcDerivedUnitEnum";
		case 1514641115: return "IfcDescriptiveMeasure";
		case 4134073009: return "IfcDimensionCount";
		case 3389681023: return "IfcDirectionSenseEnum";
		case 697765865: return "IfcDiscreteAccessoryTypeEnum";
		case 3829999316: return "IfcDistributionBoardTypeEnum";
		case 8322439: return "IfcDistributionChamberElementTypeEnum";
		case 860830233: return "IfcDistributionPortTypeEnum";
		case 922449830: return "IfcDistributionSystemEnum";
		case 2885466731: return "IfcDocumentConfidentialityEnum";
		case 3247369562: return "IfcDocumentSelect";
		case 4068098364: return "IfcDocumentStatusEnum";
		case 3571493279: return "IfcDoorPanelOperationEnum";
		case 2872136011: return "IfcDoorPanelPositionEnum";
		case 2721224556: return "IfcDoorStyleConstructionEnum";
		case 509816776: return "IfcDoorStyleOperationEnum";
		case 1970628803: return "IfcDoorTypeEnum";
		case 4016286979: return "IfcDoorTypeOperationEnum";
		case 524656162: return "IfcDoseEquivalentMeasure";
		case 376935608: return "IfcDuctFittingTypeEnum";
		case 1280103771: return "IfcDuctSegmentTypeEnum";
		case 1875623387: return "IfcDuctSilencerTypeEnum";
		case 2541165894: return "IfcDuration";
		case 69416015: return "IfcDynamicViscosityMeasure";
		case 1268632640: return "IfcEarthworksCutTypeEnum";
		case 2872680054: return "IfcEarthworksFillTypeEnum";
		case 1290156191: return "IfcElectricApplianceTypeEnum";
		case 1827137117: return "IfcElectricCapacitanceMeasure";
		case 3818826038: return "IfcElectricChargeMeasure";
		case 2093906313: return "IfcElectricConductanceMeasure";
		case 3790457270: return "IfcElectricCurrentMeasure";
		case 365584592: return "IfcElectricDistributionBoardTypeEnum";
		case 3044747827: return "IfcElectricFlowStorageDeviceTypeEnum";
		case 1128263546: return "IfcElectricFlowTreatmentDeviceTypeEnum";
		case 3185663589: return "IfcElectricGeneratorTypeEnum";
		case 667340609: return "IfcElectricMotorTypeEnum";
		case 2951915441: return "IfcElectricResistanceMeasure";
		case 1262424489: return "IfcElectricTimeControlTypeEnum";
		case 2506197118: return "IfcElectricVoltageMeasure";
		case 2841622424: return "IfcElementAssemblyTypeEnum";
		case 690167070: return "IfcElementCompositionEnum";
		case 2078135608: return "IfcEnergyMeasure";
		case 3462168616: return "IfcEngineTypeEnum";
		case 1002142388: return "IfcEvaporativeCoolerTypeEnum";
		case 554647353: return "IfcEvaporatorTypeEnum";
		case 3717035687: return "IfcEventTriggerTypeEnum";
		case 1401066283: return "IfcEventTypeEnum";
		case 3344706444: return "IfcExternalSpatialElementTypeEnum";
		case 1019252178: return "IfcFacilityPartCommonTypeEnum";
		case 2447993252: return "IfcFacilityUsageEnum";
		case 3754373064: return "IfcFanTypeEnum";
		case 2244117335: return "IfcFastenerTypeEnum";
		case 544876936: return "IfcFillStyleSelect";
		case 3959380518: return "IfcFilterTypeEnum";
		case 2793383123: return "IfcFireSuppressionTerminalTypeEnum";
		case 2183683140: return "IfcFlowDirectionEnum";
		case 897523405: return "IfcFlowInstrumentTypeEnum";
		case 2973211341: return "IfcFlowMeterTypeEnum";
		case 1102727119: return "IfcFontStyle";
		case 2715512545: return "IfcFontVariant";
		case 2590844177: return "IfcFontWeight";
		case 4155216521: return "IfcFootingTypeEnum";
		case 1361398929: return "IfcForceMeasure";
		case 3044325142: return "IfcFrequencyMeasure";
		case 1639589134: return "IfcFurnitureTypeEnum";
		case 460077198: return "IfcGeographicElementTypeEnum";
		case 1131349010: return "IfcGeometricProjectionEnum";
		case 3346224455: return "IfcGeometricSetSelect";
		case 3178974365: return "IfcGeotechnicalStratumTypeEnum";
		case 3637616042: return "IfcGlobalOrLocalEnum";
		case 3064340077: return "IfcGloballyUniqueId";
		case 440562759: return "IfcGridPlacementDirectionSelect";
		case 3041753155: return "IfcGridTypeEnum";
		case 2356011799: return "IfcHatchLineDistanceSelect";
		case 1007984134: return "IfcHeatExchangerTypeEnum";
		case 3113092358: return "IfcHeatFluxDensityMeasure";
		case 1158859006: return "IfcHeatingValueMeasure";
		case 237118112: return "IfcHumidifierTypeEnum";
		case 983778844: return "IfcIdentifier";
		case 3358199106: return "IfcIlluminanceMeasure";
		case 4013007887: return "IfcImpactProtectionDeviceTypeEnum";
		case 2679005408: return "IfcInductanceMeasure";
		case 1939436016: return "IfcInteger";
		case 3809634241: return "IfcIntegerCountRateMeasure";
		case 2548949139: return "IfcInterceptorTypeEnum";
		case 1837433645: return "IfcInterferenceSelect";
		case 1687521235: return "IfcInternalOrExternalEnum";
		case 2774431236: return "IfcInventoryTypeEnum";
		case 3686016028: return "IfcIonConcentrationMeasure";
		case 3192672207: return "IfcIsothermalMoistureCapacityMeasure";
		case 1844818999: return "IfcJunctionBoxTypeEnum";
		case 2054016361: return "IfcKinematicViscosityMeasure";
		case 2053683727: return "IfcKnotType";
		case 3258342251: return "IfcLabel";
		case 1162880614: return "IfcLaborResourceTypeEnum";
		case 185388416: return "IfcLampTypeEnum";
		case 1275358634: return "IfcLanguageId";
		case 1469346588: return "IfcLayerSetDirectionEnum";
		case 939592812: return "IfcLayeredItem";
		case 1243674935: return "IfcLengthMeasure";
		case 288382656: return "IfcLibrarySelect";
		case 881902783: return "IfcLightDistributionCurveEnum";
		case 3739410009: return "IfcLightDistributionDataSourceSelect";
		case 3034186359: return "IfcLightEmissionSourceEnum";
		case 4215032627: return "IfcLightFixtureTypeEnum";
		case 1774176899: return "IfcLineIndex";
		case 191860431: return "IfcLinearForceMeasure";
		case 2128979029: return "IfcLinearMomentMeasure";
		case 1307019551: return "IfcLinearStiffnessMeasure";
		case 3086160713: return "IfcLinearVelocityMeasure";
		case 3099164984: return "IfcLiquidTerminalTypeEnum";
		case 2602792976: return "IfcLoadGroupTypeEnum";
		case 503418787: return "IfcLogical";
		case 2449831054: return "IfcLogicalOperatorEnum";
		case 2095003142: return "IfcLuminousFluxMeasure";
		case 2755797622: return "IfcLuminousIntensityDistributionMeasure";
		case 151039812: return "IfcLuminousIntensityMeasure";
		case 286949696: return "IfcMagneticFluxDensityMeasure";
		case 2486716878: return "IfcMagneticFluxMeasure";
		case 4135496989: return "IfcMarineFacilityTypeEnum";
		case 1095732595: return "IfcMarinePartTypeEnum";
		case 1477762836: return "IfcMassDensityMeasure";
		case 4017473158: return "IfcMassFlowRateMeasure";
		case 3124614049: return "IfcMassMeasure";
		case 3531705166: return "IfcMassPerLengthMeasure";
		case 4274534246: return "IfcMaterialSelect";
		case 990564147: return "IfcMeasureValue";
		case 962935207: return "IfcMechanicalFastenerTypeEnum";
		case 3989067775: return "IfcMedicalDeviceTypeEnum";
		case 3818625751: return "IfcMemberTypeEnum";
		case 1042063629: return "IfcMetricValueSelect";
		case 423474865: return "IfcMobileTelecommunicationsApplianceTypeEnum";
		case 3341486342: return "IfcModulusOfElasticityMeasure";
		case 2173214787: return "IfcModulusOfLinearSubgradeReactionMeasure";
		case 1052454078: return "IfcModulusOfRotationalSubgradeReactionMeasure";
		case 4241973650: return "IfcModulusOfRotationalSubgradeReactionSelect";
		case 1753493141: return "IfcModulusOfSubgradeReactionMeasure";
		case 1880189351: return "IfcModulusOfSubgradeReactionSelect";
		case 613796396: return "IfcModulusOfTranslationalSubgradeReactionSelect";
		case 3177669450: return "IfcMoistureDiffusivityMeasure";
		case 1648970520: return "IfcMolecularWeightMeasure";
		case 3114022597: return "IfcMomentOfInertiaMeasure";
		case 2615040989: return "IfcMonetaryMeasure";
		case 765770214: return "IfcMonthInYearNumber";
		case 2707447046: return "IfcMooringDeviceTypeEnum";
		case 527936033: return "IfcMotorConnectionTypeEnum";
		case 3294834125: return "IfcNavigationElementTypeEnum";
		case 525895558: return "IfcNonNegativeLengthMeasure";
		case 2095195183: return "IfcNormalisedRatioMeasure";
		case 2395907400: return "IfcNumericMeasure";
		case 1430971844: return "IfcObjectReferenceSelect";
		case 1545711075: return "IfcObjectTypeEnum";
		case 1962769620: return "IfcObjectiveEnum";
		case 3349296550: return "IfcOccupantTypeEnum";
		case 2874063949: return "IfcOpeningElementTypeEnum";
		case 103775553: return "IfcOutletTypeEnum";
		case 929793134: return "IfcPHMeasure";
		case 2260317790: return "IfcParameterValue";
		case 1938929368: return "IfcPavementTypeEnum";
		case 571176181: return "IfcPerformanceHistoryTypeEnum";
		case 3446698506: return "IfcPermeableCoveringOperationEnum";
		case 3061959087: return "IfcPermitTypeEnum";
		case 64643665: return "IfcPhysicalOrVirtualEnum";
		case 2457772935: return "IfcPileConstructionEnum";
		case 2974343352: return "IfcPileTypeEnum";
		case 3531860660: return "IfcPipeFittingTypeEnum";
		case 2293803863: return "IfcPipeSegmentTypeEnum";
		case 2642773653: return "IfcPlanarForceMeasure";
		case 4042175685: return "IfcPlaneAngleMeasure";
		case 661370862: return "IfcPlateTypeEnum";
		case 3931646380: return "IfcPointOrVertexPoint";
		case 1790229001: return "IfcPositiveInteger";
		case 2815919920: return "IfcPositiveLengthMeasure";
		case 3054510233: return "IfcPositivePlaneAngleMeasure";
		case 1245737093: return "IfcPositiveRatioMeasure";
		case 1364037233: return "IfcPowerMeasure";
		case 960210175: return "IfcPreferredSurfaceCurveRepresentation";
		case 2169031380: return "IfcPresentableText";
		case 3665567075: return "IfcPressureMeasure";
		case 3037870609: return "IfcProcedureTypeEnum";
		case 1959371038: return "IfcProcessSelect";
		case 4021806647: return "IfcProductRepresentationSelect";
		case 2211051443: return "IfcProductSelect";
		case 2321227483: return "IfcProfileTypeEnum";
		case 1551283683: return "IfcProjectOrderTypeEnum";
		case 960326014: return "IfcProjectedOrTrueLengthEnum";
		case 1897649832: return "IfcProjectionElementTypeEnum";
		case 49845113: return "IfcPropertySetDefinitionSelect";
		case 2798247006: return "IfcPropertySetDefinitionSet";
		case 606860825: return "IfcPropertySetTemplateTypeEnum";
		case 2749697471: return "IfcProtectiveDeviceTrippingUnitTypeEnum";
		case 3739419792: return "IfcProtectiveDeviceTypeEnum";
		case 473029300: return "IfcPumpTypeEnum";
		case 3972513137: return "IfcRadioActivityMeasure";
		case 2906317437: return "IfcRailTypeEnum";
		case 1491040762: return "IfcRailingTypeEnum";
		case 2181869104: return "IfcRailwayPartTypeEnum";
		case 827741273: return "IfcRailwayTypeEnum";
		case 1040890966: return "IfcRampFlightTypeEnum";
		case 3995464546: return "IfcRampTypeEnum";
		case 96294661: return "IfcRatioMeasure";
		case 200335297: return "IfcReal";
		case 1390679141: return "IfcRecurrenceTypeEnum";
		case 1718859833: return "IfcReferentTypeEnum";
		case 1011845978: return "IfcReflectanceMethodEnum";
		case 2875026444: return "IfcReinforcedSoilTypeEnum";
		case 3202202375: return "IfcReinforcingBarRoleEnum";
		case 1190328964: return "IfcReinforcingBarSurfaceEnum";
		case 145283476: return "IfcReinforcingBarTypeEnum";
		case 1385270127: return "IfcReinforcingMeshTypeEnum";
		case 4036359239: return "IfcResourceObjectSelect";
		case 2207572250: return "IfcResourceSelect";
		case 3629595153: return "IfcRoadPartTypeEnum";
		case 1464019863: return "IfcRoadTypeEnum";
		case 3869224543: return "IfcRoleEnum";
		case 1736192930: return "IfcRoofTypeEnum";
		case 2133746277: return "IfcRotationalFrequencyMeasure";
		case 1755127002: return "IfcRotationalMassMeasure";
		case 3211557302: return "IfcRotationalStiffnessMeasure";
		case 2509546566: return "IfcRotationalStiffnessSelect";
		case 1787361927: return "IfcSIPrefix";
		case 542029231: return "IfcSIUnitName";
		case 1367202144: return "IfcSanitaryTerminalTypeEnum";
		case 3467162246: return "IfcSectionModulusMeasure";
		case 2342653256: return "IfcSectionTypeEnum";
		case 2190458107: return "IfcSectionalAreaIntegralMeasure";
		case 183626358: return "IfcSegmentIndexSelect";
		case 1098295817: return "IfcSensorTypeEnum";
		case 628493158: return "IfcSequenceEnum";
		case 1823282114: return "IfcShadingDeviceTypeEnum";
		case 408310005: return "IfcShearModulusMeasure";
		case 2298722686: return "IfcShell";
		case 3160627042: return "IfcSignTypeEnum";
		case 1506544127: return "IfcSignalTypeEnum";
		case 3841475323: return "IfcSimplePropertyTemplateTypeEnum";
		case 1844851602: return "IfcSimpleValue";
		case 1570177309: return "IfcSizeSelect";
		case 639531123: return "IfcSlabTypeEnum";
		case 244819378: return "IfcSolarDeviceTypeEnum";
		case 3471399674: return "IfcSolidAngleMeasure";
		case 11730523: return "IfcSolidOrShell";
		case 4157543285: return "IfcSoundPowerLevelMeasure";
		case 846465480: return "IfcSoundPowerMeasure";
		case 3457685358: return "IfcSoundPressureLevelMeasure";
		case 993287707: return "IfcSoundPressureMeasure";
		case 4134219045: return "IfcSpaceBoundarySelect";
		case 1855850635: return "IfcSpaceHeaterTypeEnum";
		case 1455546828: return "IfcSpaceTypeEnum";
		case 2394031724: return "IfcSpatialReferenceSelect";
		case 3647622174: return "IfcSpatialZoneTypeEnum";
		case 3477203348: return "IfcSpecificHeatCapacityMeasure";
		case 2757832317: return "IfcSpecularExponent";
		case 3921983062: return "IfcSpecularHighlightSelect";
		case 361837227: return "IfcSpecularRoughness";
		case 3956248403: return "IfcStackTerminalTypeEnum";
		case 3038022802: return "IfcStairFlightTypeEnum";
		case 2319738306: return "IfcStairTypeEnum";
		case 4223916898: return "IfcStateEnum";
		case 2688182192: return "IfcStructuralActivityAssignmentSelect";
		case 3876018962: return "IfcStructuralCurveActivityTypeEnum";
		case 2680421541: return "IfcStructuralCurveMemberTypeEnum";
		case 2860242611: return "IfcStructuralSurfaceActivityTypeEnum";
		case 316539858: return "IfcStructuralSurfaceMemberTypeEnum";
		case 4008630002: return "IfcSubContractResourceTypeEnum";
		case 652748602: return "IfcSurfaceFeatureTypeEnum";
		case 2844211000: return "IfcSurfaceOrFaceSurface";
		case 2785408664: return "IfcSurfaceSide";
		case 1225378771: return "IfcSurfaceStyleElementSelect";
		case 1942645678: return "IfcSwitchingDeviceTypeEnum";
		case 1021971458: return "IfcSystemFurnitureElementTypeEnum";
		case 3300536621: return "IfcTankTypeEnum";
		case 3555794193: return "IfcTaskDurationEnum";
		case 384449397: return "IfcTaskTypeEnum";
		case 58845555: return "IfcTemperatureGradientMeasure";
		case 1209108979: return "IfcTemperatureRateOfChangeMeasure";
		case 1479426229: return "IfcTendonAnchorTypeEnum";
		case 2641080392: return "IfcTendonConduitTypeEnum";
		case 3917635812: return "IfcTendonTypeEnum";
		case 2801250643: return "IfcText";
		case 1460886941: return "IfcTextAlignment";
		case 3490877962: return "IfcTextDecoration";
		case 603696268: return "IfcTextFontName";
		case 1286164555: return "IfcTextFontSelect";
		case 1152197495: return "IfcTextPath";
		case 296282323: return "IfcTextTransformation";
		case 232962298: return "IfcThermalAdmittanceMeasure";
		case 2645777649: return "IfcThermalConductivityMeasure";
		case 2281867870: return "IfcThermalExpansionCoefficientMeasure";
		case 857959152: return "IfcThermalResistanceMeasure";
		case 2016195849: return "IfcThermalTransmittanceMeasure";
		case 743184107: return "IfcThermodynamicTemperatureMeasure";
		case 4075327185: return "IfcTime";
		case 2726807636: return "IfcTimeMeasure";
		case 3242977126: return "IfcTimeOrRatioSelect";
		case 1432008316: return "IfcTimeSeriesDataTypeEnum";
		case 2591213694: return "IfcTimeStamp";
		case 1278329552: return "IfcTorqueMeasure";
		case 859079163: return "IfcTrackElementTypeEnum";
		case 291444547: return "IfcTransformerTypeEnum";
		case 1914407012: return "IfcTransitionCode";
		case 972054012: return "IfcTranslationalStiffnessSelect";
		case 3740788744: return "IfcTransportElementTypeEnum";
		case 3407053508: return "IfcTrimmingPreference";
		case 437759802: return "IfcTrimmingSelect";
		case 3627328112: return "IfcTubeBundleTypeEnum";
		case 950732822: return "IfcURIReference";
		case 1103567559: return "IfcUnit";
		case 1197507443: return "IfcUnitEnum";
		case 3301026240: return "IfcUnitaryControlElementTypeEnum";
		case 935604799: return "IfcUnitaryEquipmentTypeEnum";
		case 3521532855: return "IfcValue";
		case 3594581223: return "IfcValveTypeEnum";
		case 3345633955: return "IfcVaporPermeabilityMeasure";
		case 805718298: return "IfcVectorOrDirection";
		case 1184275752: return "IfcVehicleTypeEnum";
		case 1672225696: return "IfcVibrationDamperTypeEnum";
		case 1282226622: return "IfcVibrationIsolatorTypeEnum";
		case 2630368378: return "IfcVirtualElementTypeEnum";
		case 3288126668: return "IfcVoidingFeatureTypeEnum";
		case 3458127941: return "IfcVolumeMeasure";
		case 2593997549: return "IfcVolumetricFlowRateMeasure";
		case 3551551017: return "IfcWallTypeEnum";
		case 51269191: return "IfcWarpingConstantMeasure";
		case 1718600412: return "IfcWarpingMomentMeasure";
		case 854899952: return "IfcWarpingStiffnessSelect";
		case 3676660675: return "IfcWasteTerminalTypeEnum";
		case 2324037503: return "IfcWindowPanelOperationEnum";
		case 278839091: return "IfcWindowPanelPositionEnum";
		case 3672713367: return "IfcWindowStyleConstructionEnum";
		case 1074166056: return "IfcWindowStyleOperationEnum";
		case 255461614: return "IfcWindowTypeEnum";
		case 1932549289: return "IfcWindowTypePartitioningEnum";
		case 1471118587: return "IfcWorkCalendarTypeEnum";
		case 2706281606: return "IfcWorkPlanTypeEnum";
		case 3098684301: return "IfcWorkScheduleTypeEnum";
		case 3821786052: return "IfcActionRequest";
		case 2296667514: return "IfcActor";
		case 3630933823: return "IfcActorRole";
		case 4288193352: return "IfcActuator";
		case 2874132201: return "IfcActuatorType";
		case 618182010: return "IfcAddress";
		case 1635779807: return "IfcAdvancedBrep";
		case 2603310189: return "IfcAdvancedBrepWithVoids";
		case 3406155212: return "IfcAdvancedFace";
		case 1634111441: return "IfcAirTerminal";
		case 177149247: return "IfcAirTerminalBox";
		case 1411407467: return "IfcAirTerminalBoxType";
		case 3352864051: return "IfcAirTerminalType";
		case 2056796094: return "IfcAirToAirHeatRecovery";
		case 1871374353: return "IfcAirToAirHeatRecoveryType";
		case 3087945054: return "IfcAlarm";
		case 3001207471: return "IfcAlarmType";
		case 325726236: return "IfcAlignment";
		case 4266260250: return "IfcAlignmentCant";
		case 3752311538: return "IfcAlignmentCantSegment";
		case 1545765605: return "IfcAlignmentHorizontal";
		case 536804194: return "IfcAlignmentHorizontalSegment";
		case 2879124712: return "IfcAlignmentParameterSegment";
		case 317615605: return "IfcAlignmentSegment";
		case 1662888072: return "IfcAlignmentVertical";
		case 3633395639: return "IfcAlignmentVerticalSegment";
		case 1674181508: return "IfcAnnotation";
		case 669184980: return "IfcAnnotationFillArea";
		case 639542469: return "IfcApplication";
		case 411424972: return "IfcAppliedValue";
		case 130549933: return "IfcApproval";
		case 3869604511: return "IfcApprovalRelationship";
		case 3798115385: return "IfcArbitraryClosedProfileDef";
		case 1310608509: return "IfcArbitraryOpenProfileDef";
		case 2705031697: return "IfcArbitraryProfileDefWithVoids";
		case 3460190687: return "IfcAsset";
		case 3207858831: return "IfcAsymmetricIShapeProfileDef";
		case 277319702: return "IfcAudioVisualAppliance";
		case 1532957894: return "IfcAudioVisualApplianceType";
		case 4261334040: return "IfcAxis1Placement";
		case 3125803723: return "IfcAxis2Placement2D";
		case 2740243338: return "IfcAxis2Placement3D";
		case 3425423356: return "IfcAxis2PlacementLinear";
		case 1967976161: return "IfcBSplineCurve";
		case 2461110595: return "IfcBSplineCurveWithKnots";
		case 2887950389: return "IfcBSplineSurface";
		case 167062518: return "IfcBSplineSurfaceWithKnots";
		case 753842376: return "IfcBeam";
		case 819618141: return "IfcBeamType";
		case 4196446775: return "IfcBearing";
		case 3649138523: return "IfcBearingType";
		case 616511568: return "IfcBlobTexture";
		case 1334484129: return "IfcBlock";
		case 32344328: return "IfcBoiler";
		case 231477066: return "IfcBoilerType";
		case 3649129432: return "IfcBooleanClippingResult";
		case 2736907675: return "IfcBooleanResult";
		case 3314249567: return "IfcBorehole";
		case 4037036970: return "IfcBoundaryCondition";
		case 1136057603: return "IfcBoundaryCurve";
		case 1560379544: return "IfcBoundaryEdgeCondition";
		case 3367102660: return "IfcBoundaryFaceCondition";
		case 1387855156: return "IfcBoundaryNodeCondition";
		case 2069777674: return "IfcBoundaryNodeConditionWarping";
		case 1260505505: return "IfcBoundedCurve";
		case 4182860854: return "IfcBoundedSurface";
		case 2581212453: return "IfcBoundingBox";
		case 2713105998: return "IfcBoxedHalfSpace";
		case 644574406: return "IfcBridge";
		case 963979645: return "IfcBridgePart";
		case 4031249490: return "IfcBuilding";
		case 2979338954: return "IfcBuildingElementPart";
		case 39481116: return "IfcBuildingElementPartType";
		case 1095909175: return "IfcBuildingElementProxy";
		case 1909888760: return "IfcBuildingElementProxyType";
		case 3124254112: return "IfcBuildingStorey";
		case 1177604601: return "IfcBuildingSystem";
		case 1876633798: return "IfcBuiltElement";
		case 1626504194: return "IfcBuiltElementType";
		case 3862327254: return "IfcBuiltSystem";
		case 2938176219: return "IfcBurner";
		case 2188180465: return "IfcBurnerType";
		case 2898889636: return "IfcCShapeProfileDef";
		case 635142910: return "IfcCableCarrierFitting";
		case 395041908: return "IfcCableCarrierFittingType";
		case 3758799889: return "IfcCableCarrierSegment";
		case 3293546465: return "IfcCableCarrierSegmentType";
		case 1051757585: return "IfcCableFitting";
		case 2674252688: return "IfcCableFittingType";
		case 4217484030: return "IfcCableSegment";
		case 1285652485: return "IfcCableSegmentType";
		case 3999819293: return "IfcCaissonFoundation";
		case 3203706013: return "IfcCaissonFoundationType";
		case 1123145078: return "IfcCartesianPoint";
		case 574549367: return "IfcCartesianPointList";
		case 1675464909: return "IfcCartesianPointList2D";
		case 2059837836: return "IfcCartesianPointList3D";
		case 59481748: return "IfcCartesianTransformationOperator";
		case 3749851601: return "IfcCartesianTransformationOperator2D";
		case 3486308946: return "IfcCartesianTransformationOperator2DnonUniform";
		case 3331915920: return "IfcCartesianTransformationOperator3D";
		case 1416205885: return "IfcCartesianTransformationOperator3DnonUniform";
		case 3150382593: return "IfcCenterLineProfileDef";
		case 3902619387: return "IfcChiller";
		case 2951183804: return "IfcChillerType";
		case 3296154744: return "IfcChimney";
		case 2197970202: return "IfcChimneyType";
		case 2611217952: return "IfcCircle";
		case 2937912522: return "IfcCircleHollowProfileDef";
		case 1383045692: return "IfcCircleProfileDef";
		case 1677625105: return "IfcCivilElement";
		case 3893394355: return "IfcCivilElementType";
		case 747523909: return "IfcClassification";
		case 647927063: return "IfcClassificationReference";
		case 2205249479: return "IfcClosedShell";
		case 3497074424: return "IfcClothoid";
		case 639361253: return "IfcCoil";
		case 2301859152: return "IfcCoilType";
		case 776857604: return "IfcColourRgb";
		case 3285139300: return "IfcColourRgbList";
		case 3264961684: return "IfcColourSpecification";
		case 843113511: return "IfcColumn";
		case 300633059: return "IfcColumnType";
		case 3221913625: return "IfcCommunicationsAppliance";
		case 400855858: return "IfcCommunicationsApplianceType";
		case 2542286263: return "IfcComplexProperty";
		case 3875453745: return "IfcComplexPropertyTemplate";
		case 3732776249: return "IfcCompositeCurve";
		case 15328376: return "IfcCompositeCurveOnSurface";
		case 2485617015: return "IfcCompositeCurveSegment";
		case 1485152156: return "IfcCompositeProfileDef";
		case 3571504051: return "IfcCompressor";
		case 3850581409: return "IfcCompressorType";
		case 2272882330: return "IfcCondenser";
		case 2816379211: return "IfcCondenserType";
		case 2510884976: return "IfcConic";
		case 370225590: return "IfcConnectedFaceSet";
		case 1981873012: return "IfcConnectionCurveGeometry";
		case 2859738748: return "IfcConnectionGeometry";
		case 45288368: return "IfcConnectionPointEccentricity";
		case 2614616156: return "IfcConnectionPointGeometry";
		case 2732653382: return "IfcConnectionSurfaceGeometry";
		case 775493141: return "IfcConnectionVolumeGeometry";
		case 1959218052: return "IfcConstraint";
		case 3898045240: return "IfcConstructionEquipmentResource";
		case 2185764099: return "IfcConstructionEquipmentResourceType";
		case 1060000209: return "IfcConstructionMaterialResource";
		case 4105962743: return "IfcConstructionMaterialResourceType";
		case 488727124: return "IfcConstructionProductResource";
		case 1525564444: return "IfcConstructionProductResourceType";
		case 2559216714: return "IfcConstructionResource";
		case 2574617495: return "IfcConstructionResourceType";
		case 3419103109: return "IfcContext";
		case 3050246964: return "IfcContextDependentUnit";
		case 3293443760: return "IfcControl";
		case 25142252: return "IfcController";
		case 578613899: return "IfcControllerType";
		case 2889183280: return "IfcConversionBasedUnit";
		case 2713554722: return "IfcConversionBasedUnitWithOffset";
		case 3460952963: return "IfcConveyorSegment";
		case 2940368186: return "IfcConveyorSegmentType";
		case 4136498852: return "IfcCooledBeam";
		case 335055490: return "IfcCooledBeamType";
		case 3640358203: return "IfcCoolingTower";
		case 2954562838: return "IfcCoolingTowerType";
		case 1785450214: return "IfcCoordinateOperation";
		case 1466758467: return "IfcCoordinateReferenceSystem";
		case 2000195564: return "IfcCosineSpiral";
		case 3895139033: return "IfcCostItem";
		case 1419761937: return "IfcCostSchedule";
		case 602808272: return "IfcCostValue";
		case 1502416096: return "IfcCourse";
		case 4189326743: return "IfcCourseType";
		case 1973544240: return "IfcCovering";
		case 1916426348: return "IfcCoveringType";
		case 3295246426: return "IfcCrewResource";
		case 1815067380: return "IfcCrewResourceType";
		case 2506170314: return "IfcCsgPrimitive3D";
		case 2147822146: return "IfcCsgSolid";
		case 539742890: return "IfcCurrencyRelationship";
		case 3495092785: return "IfcCurtainWall";
		case 1457835157: return "IfcCurtainWallType";
		case 2601014836: return "IfcCurve";
		case 2827736869: return "IfcCurveBoundedPlane";
		case 2629017746: return "IfcCurveBoundedSurface";
		case 4212018352: return "IfcCurveSegment";
		case 3800577675: return "IfcCurveStyle";
		case 1105321065: return "IfcCurveStyleFont";
		case 2367409068: return "IfcCurveStyleFontAndScaling";
		case 3510044353: return "IfcCurveStyleFontPattern";
		case 1213902940: return "IfcCylindricalSurface";
		case 4074379575: return "IfcDamper";
		case 3961806047: return "IfcDamperType";
		case 3426335179: return "IfcDeepFoundation";
		case 1306400036: return "IfcDeepFoundationType";
		case 3632507154: return "IfcDerivedProfileDef";
		case 1765591967: return "IfcDerivedUnit";
		case 1045800335: return "IfcDerivedUnitElement";
		case 2949456006: return "IfcDimensionalExponents";
		case 32440307: return "IfcDirection";
		case 593015953: return "IfcDirectrixCurveSweptAreaSolid";
		case 4234616927: return "IfcDirectrixDerivedReferenceSweptAreaSolid";
		case 1335981549: return "IfcDiscreteAccessory";
		case 2635815018: return "IfcDiscreteAccessoryType";
		case 3693000487: return "IfcDistributionBoard";
		case 479945903: return "IfcDistributionBoardType";
		case 1052013943: return "IfcDistributionChamberElement";
		case 1599208980: return "IfcDistributionChamberElementType";
		case 562808652: return "IfcDistributionCircuit";
		case 1062813311: return "IfcDistributionControlElement";
		case 2063403501: return "IfcDistributionControlElementType";
		case 1945004755: return "IfcDistributionElement";
		case 3256556792: return "IfcDistributionElementType";
		case 3040386961: return "IfcDistributionFlowElement";
		case 3849074793: return "IfcDistributionFlowElementType";
		case 3041715199: return "IfcDistributionPort";
		case 3205830791: return "IfcDistributionSystem";
		case 1154170062: return "IfcDocumentInformation";
		case 770865208: return "IfcDocumentInformationRelationship";
		case 3732053477: return "IfcDocumentReference";
		case 395920057: return "IfcDoor";
		case 2963535650: return "IfcDoorLiningProperties";
		case 1714330368: return "IfcDoorPanelProperties";
		case 526551008: return "IfcDoorStyle";
		case 2323601079: return "IfcDoorType";
		case 445594917: return "IfcDraughtingPreDefinedColour";
		case 4006246654: return "IfcDraughtingPreDefinedCurveFont";
		case 342316401: return "IfcDuctFitting";
		case 869906466: return "IfcDuctFittingType";
		case 3518393246: return "IfcDuctSegment";
		case 3760055223: return "IfcDuctSegmentType";
		case 1360408905: return "IfcDuctSilencer";
		case 2030761528: return "IfcDuctSilencerType";
		case 3071239417: return "IfcEarthworksCut";
		case 1077100507: return "IfcEarthworksElement";
		case 3376911765: return "IfcEarthworksFill";
		case 3900360178: return "IfcEdge";
		case 476780140: return "IfcEdgeCurve";
		case 1472233963: return "IfcEdgeLoop";
		case 1904799276: return "IfcElectricAppliance";
		case 663422040: return "IfcElectricApplianceType";
		case 862014818: return "IfcElectricDistributionBoard";
		case 2417008758: return "IfcElectricDistributionBoardType";
		case 3310460725: return "IfcElectricFlowStorageDevice";
		case 3277789161: return "IfcElectricFlowStorageDeviceType";
		case 24726584: return "IfcElectricFlowTreatmentDevice";
		case 2142170206: return "IfcElectricFlowTreatmentDeviceType";
		case 264262732: return "IfcElectricGenerator";
		case 1534661035: return "IfcElectricGeneratorType";
		case 402227799: return "IfcElectricMotor";
		case 1217240411: return "IfcElectricMotorType";
		case 1003880860: return "IfcElectricTimeControl";
		case 712377611: return "IfcElectricTimeControlType";
		case 1758889154: return "IfcElement";
		case 4123344466: return "IfcElementAssembly";
		case 2397081782: return "IfcElementAssemblyType";
		case 1623761950: return "IfcElementComponent";
		case 2590856083: return "IfcElementComponentType";
		case 1883228015: return "IfcElementQuantity";
		case 339256511: return "IfcElementType";
		case 2777663545: return "IfcElementarySurface";
		case 1704287377: return "IfcEllipse";
		case 2835456948: return "IfcEllipseProfileDef";
		case 1658829314: return "IfcEnergyConversionDevice";
		case 2107101300: return "IfcEnergyConversionDeviceType";
		case 2814081492: return "IfcEngine";
		case 132023988: return "IfcEngineType";
		case 3747195512: return "IfcEvaporativeCooler";
		case 3174744832: return "IfcEvaporativeCoolerType";
		case 484807127: return "IfcEvaporator";
		case 3390157468: return "IfcEvaporatorType";
		case 4148101412: return "IfcEvent";
		case 211053100: return "IfcEventTime";
		case 4024345920: return "IfcEventType";
		case 297599258: return "IfcExtendedProperties";
		case 4294318154: return "IfcExternalInformation";
		case 3200245327: return "IfcExternalReference";
		case 1437805879: return "IfcExternalReferenceRelationship";
		case 1209101575: return "IfcExternalSpatialElement";
		case 2853485674: return "IfcExternalSpatialStructureElement";
		case 2242383968: return "IfcExternallyDefinedHatchStyle";
		case 1040185647: return "IfcExternallyDefinedSurfaceStyle";
		case 3548104201: return "IfcExternallyDefinedTextFont";
		case 477187591: return "IfcExtrudedAreaSolid";
		case 2804161546: return "IfcExtrudedAreaSolidTapered";
		case 2556980723: return "IfcFace";
		case 2047409740: return "IfcFaceBasedSurfaceModel";
		case 1809719519: return "IfcFaceBound";
		case 803316827: return "IfcFaceOuterBound";
		case 3008276851: return "IfcFaceSurface";
		case 807026263: return "IfcFacetedBrep";
		case 3737207727: return "IfcFacetedBrepWithVoids";
		case 24185140: return "IfcFacility";
		case 1310830890: return "IfcFacilityPart";
		case 4228831410: return "IfcFacilityPartCommon";
		case 4219587988: return "IfcFailureConnectionCondition";
		case 3415622556: return "IfcFan";
		case 346874300: return "IfcFanType";
		case 647756555: return "IfcFastener";
		case 2489546625: return "IfcFastenerType";
		case 2827207264: return "IfcFeatureElement";
		case 2143335405: return "IfcFeatureElementAddition";
		case 1287392070: return "IfcFeatureElementSubtraction";
		case 738692330: return "IfcFillAreaStyle";
		case 374418227: return "IfcFillAreaStyleHatching";
		case 315944413: return "IfcFillAreaStyleTiles";
		case 819412036: return "IfcFilter";
		case 1810631287: return "IfcFilterType";
		case 1426591983: return "IfcFireSuppressionTerminal";
		case 4222183408: return "IfcFireSuppressionTerminalType";
		case 2652556860: return "IfcFixedReferenceSweptAreaSolid";
		case 2058353004: return "IfcFlowController";
		case 3907093117: return "IfcFlowControllerType";
		case 4278956645: return "IfcFlowFitting";
		case 3198132628: return "IfcFlowFittingType";
		case 182646315: return "IfcFlowInstrument";
		case 4037862832: return "IfcFlowInstrumentType";
		case 2188021234: return "IfcFlowMeter";
		case 3815607619: return "IfcFlowMeterType";
		case 3132237377: return "IfcFlowMovingDevice";
		case 1482959167: return "IfcFlowMovingDeviceType";
		case 987401354: return "IfcFlowSegment";
		case 1834744321: return "IfcFlowSegmentType";
		case 707683696: return "IfcFlowStorageDevice";
		case 1339347760: return "IfcFlowStorageDeviceType";
		case 2223149337: return "IfcFlowTerminal";
		case 2297155007: return "IfcFlowTerminalType";
		case 3508470533: return "IfcFlowTreatmentDevice";
		case 3009222698: return "IfcFlowTreatmentDeviceType";
		case 900683007: return "IfcFooting";
		case 1893162501: return "IfcFootingType";
		case 263784265: return "IfcFurnishingElement";
		case 4238390223: return "IfcFurnishingElementType";
		case 1509553395: return "IfcFurniture";
		case 1268542332: return "IfcFurnitureType";
		case 3493046030: return "IfcGeographicElement";
		case 4095422895: return "IfcGeographicElementType";
		case 987898635: return "IfcGeometricCurveSet";
		case 3448662350: return "IfcGeometricRepresentationContext";
		case 2453401579: return "IfcGeometricRepresentationItem";
		case 4142052618: return "IfcGeometricRepresentationSubContext";
		case 3590301190: return "IfcGeometricSet";
		case 2680139844: return "IfcGeomodel";
		case 1971632696: return "IfcGeoslice";
		case 2713699986: return "IfcGeotechnicalAssembly";
		case 4230923436: return "IfcGeotechnicalElement";
		case 1594536857: return "IfcGeotechnicalStratum";
		case 2898700619: return "IfcGradientCurve";
		case 3009204131: return "IfcGrid";
		case 852622518: return "IfcGridAxis";
		case 178086475: return "IfcGridPlacement";
		case 2706460486: return "IfcGroup";
		case 812098782: return "IfcHalfSpaceSolid";
		case 3319311131: return "IfcHeatExchanger";
		case 1251058090: return "IfcHeatExchangerType";
		case 2068733104: return "IfcHumidifier";
		case 1806887404: return "IfcHumidifierType";
		case 1484403080: return "IfcIShapeProfileDef";
		case 3905492369: return "IfcImageTexture";
		case 2568555532: return "IfcImpactProtectionDevice";
		case 3948183225: return "IfcImpactProtectionDeviceType";
		case 3570813810: return "IfcIndexedColourMap";
		case 2571569899: return "IfcIndexedPolyCurve";
		case 178912537: return "IfcIndexedPolygonalFace";
		case 2294589976: return "IfcIndexedPolygonalFaceWithVoids";
		case 3465909080: return "IfcIndexedPolygonalTextureMap";
		case 1437953363: return "IfcIndexedTextureMap";
		case 2133299955: return "IfcIndexedTriangleTextureMap";
		case 4175244083: return "IfcInterceptor";
		case 3946677679: return "IfcInterceptorType";
		case 3113134337: return "IfcIntersectionCurve";
		case 2391368822: return "IfcInventory";
		case 3741457305: return "IfcIrregularTimeSeries";
		case 3020489413: return "IfcIrregularTimeSeriesValue";
		case 2176052936: return "IfcJunctionBox";
		case 4288270099: return "IfcJunctionBoxType";
		case 2696325953: return "IfcKerb";
		case 679976338: return "IfcKerbType";
		case 572779678: return "IfcLShapeProfileDef";
		case 3827777499: return "IfcLaborResource";
		case 428585644: return "IfcLaborResourceType";
		case 1585845231: return "IfcLagTime";
		case 76236018: return "IfcLamp";
		case 1051575348: return "IfcLampType";
		case 2655187982: return "IfcLibraryInformation";
		case 3452421091: return "IfcLibraryReference";
		case 4162380809: return "IfcLightDistributionData";
		case 629592764: return "IfcLightFixture";
		case 1161773419: return "IfcLightFixtureType";
		case 1566485204: return "IfcLightIntensityDistribution";
		case 1402838566: return "IfcLightSource";
		case 125510826: return "IfcLightSourceAmbient";
		case 2604431987: return "IfcLightSourceDirectional";
		case 4266656042: return "IfcLightSourceGoniometric";
		case 1520743889: return "IfcLightSourcePositional";
		case 3422422726: return "IfcLightSourceSpot";
		case 1281925730: return "IfcLine";
		case 2176059722: return "IfcLinearElement";
		case 388784114: return "IfcLinearPlacement";
		case 1154579445: return "IfcLinearPositioningElement";
		case 1638804497: return "IfcLiquidTerminal";
		case 1770583370: return "IfcLiquidTerminalType";
		case 2624227202: return "IfcLocalPlacement";
		case 1008929658: return "IfcLoop";
		case 1425443689: return "IfcManifoldSolidBrep";
		case 3057273783: return "IfcMapConversion";
		case 2347385850: return "IfcMappedItem";
		case 525669439: return "IfcMarineFacility";
		case 976884017: return "IfcMarinePart";
		case 1838606355: return "IfcMaterial";
		case 1847130766: return "IfcMaterialClassificationRelationship";
		case 3708119000: return "IfcMaterialConstituent";
		case 2852063980: return "IfcMaterialConstituentSet";
		case 760658860: return "IfcMaterialDefinition";
		case 2022407955: return "IfcMaterialDefinitionRepresentation";
		case 248100487: return "IfcMaterialLayer";
		case 3303938423: return "IfcMaterialLayerSet";
		case 1303795690: return "IfcMaterialLayerSetUsage";
		case 1847252529: return "IfcMaterialLayerWithOffsets";
		case 2199411900: return "IfcMaterialList";
		case 2235152071: return "IfcMaterialProfile";
		case 164193824: return "IfcMaterialProfileSet";
		case 3079605661: return "IfcMaterialProfileSetUsage";
		case 3404854881: return "IfcMaterialProfileSetUsageTapering";
		case 552965576: return "IfcMaterialProfileWithOffsets";
		case 3265635763: return "IfcMaterialProperties";
		case 853536259: return "IfcMaterialRelationship";
		case 1507914824: return "IfcMaterialUsageDefinition";
		case 2597039031: return "IfcMeasureWithUnit";
		case 377706215: return "IfcMechanicalFastener";
		case 2108223431: return "IfcMechanicalFastenerType";
		case 1437502449: return "IfcMedicalDevice";
		case 1114901282: return "IfcMedicalDeviceType";
		case 1073191201: return "IfcMember";
		case 3181161470: return "IfcMemberType";
		case 3368373690: return "IfcMetric";
		case 2998442950: return "IfcMirroredProfileDef";
		case 2078563270: return "IfcMobileTelecommunicationsAppliance";
		case 1950438474: return "IfcMobileTelecommunicationsApplianceType";
		case 2706619895: return "IfcMonetaryUnit";
		case 234836483: return "IfcMooringDevice";
		case 710110818: return "IfcMooringDeviceType";
		case 2474470126: return "IfcMotorConnection";
		case 977012517: return "IfcMotorConnectionType";
		case 1918398963: return "IfcNamedUnit";
		case 2182337498: return "IfcNavigationElement";
		case 506776471: return "IfcNavigationElementType";
		case 3888040117: return "IfcObject";
		case 219451334: return "IfcObjectDefinition";
		case 3701648758: return "IfcObjectPlacement";
		case 2251480897: return "IfcObjective";
		case 4143007308: return "IfcOccupant";
		case 590820931: return "IfcOffsetCurve";
		case 3388369263: return "IfcOffsetCurve2D";
		case 3505215534: return "IfcOffsetCurve3D";
		case 2485787929: return "IfcOffsetCurveByDistances";
		case 182550632: return "IfcOpenCrossProfileDef";
		case 2665983363: return "IfcOpenShell";
		case 3588315303: return "IfcOpeningElement";
		case 4251960020: return "IfcOrganization";
		case 1411181986: return "IfcOrganizationRelationship";
		case 1029017970: return "IfcOrientedEdge";
		case 144952367: return "IfcOuterBoundaryCurve";
		case 3694346114: return "IfcOutlet";
		case 2837617999: return "IfcOutletType";
		case 1207048766: return "IfcOwnerHistory";
		case 2529465313: return "IfcParameterizedProfileDef";
		case 2519244187: return "IfcPath";
		case 1383356374: return "IfcPavement";
		case 514975943: return "IfcPavementType";
		case 1682466193: return "IfcPcurve";
		case 2382730787: return "IfcPerformanceHistory";
		case 3566463478: return "IfcPermeableCoveringProperties";
		case 3327091369: return "IfcPermit";
		case 2077209135: return "IfcPerson";
		case 101040310: return "IfcPersonAndOrganization";
		case 3021840470: return "IfcPhysicalComplexQuantity";
		case 2483315170: return "IfcPhysicalQuantity";
		case 2226359599: return "IfcPhysicalSimpleQuantity";
		case 1687234759: return "IfcPile";
		case 1158309216: return "IfcPileType";
		case 310824031: return "IfcPipeFitting";
		case 804291784: return "IfcPipeFittingType";
		case 3612865200: return "IfcPipeSegment";
		case 4231323485: return "IfcPipeSegmentType";
		case 597895409: return "IfcPixelTexture";
		case 2004835150: return "IfcPlacement";
		case 603570806: return "IfcPlanarBox";
		case 1663979128: return "IfcPlanarExtent";
		case 220341763: return "IfcPlane";
		case 3171933400: return "IfcPlate";
		case 4017108033: return "IfcPlateType";
		case 2067069095: return "IfcPoint";
		case 2165702409: return "IfcPointByDistanceExpression";
		case 4022376103: return "IfcPointOnCurve";
		case 1423911732: return "IfcPointOnSurface";
		case 2924175390: return "IfcPolyLoop";
		case 2775532180: return "IfcPolygonalBoundedHalfSpace";
		case 2839578677: return "IfcPolygonalFaceSet";
		case 3724593414: return "IfcPolyline";
		case 3381221214: return "IfcPolynomialCurve";
		case 3740093272: return "IfcPort";
		case 1946335990: return "IfcPositioningElement";
		case 3355820592: return "IfcPostalAddress";
		case 759155922: return "IfcPreDefinedColour";
		case 2559016684: return "IfcPreDefinedCurveFont";
		case 3727388367: return "IfcPreDefinedItem";
		case 3778827333: return "IfcPreDefinedProperties";
		case 3967405729: return "IfcPreDefinedPropertySet";
		case 1775413392: return "IfcPreDefinedTextFont";
		case 677532197: return "IfcPresentationItem";
		case 2022622350: return "IfcPresentationLayerAssignment";
		case 1304840413: return "IfcPresentationLayerWithStyle";
		case 3119450353: return "IfcPresentationStyle";
		case 2417041796: return "IfcPresentationStyleAssignment";
		case 2744685151: return "IfcProcedure";
		case 569719735: return "IfcProcedureType";
		case 2945172077: return "IfcProcess";
		case 4208778838: return "IfcProduct";
		case 673634403: return "IfcProductDefinitionShape";
		case 2095639259: return "IfcProductRepresentation";
		case 3958567839: return "IfcProfileDef";
		case 2802850158: return "IfcProfileProperties";
		case 103090709: return "IfcProject";
		case 653396225: return "IfcProjectLibrary";
		case 2904328755: return "IfcProjectOrder";
		case 3843373140: return "IfcProjectedCRS";
		case 3651124850: return "IfcProjectionElement";
		case 2598011224: return "IfcProperty";
		case 986844984: return "IfcPropertyAbstraction";
		case 871118103: return "IfcPropertyBoundedValue";
		case 1680319473: return "IfcPropertyDefinition";
		case 148025276: return "IfcPropertyDependencyRelationship";
		case 4166981789: return "IfcPropertyEnumeratedValue";
		case 3710013099: return "IfcPropertyEnumeration";
		case 2752243245: return "IfcPropertyListValue";
		case 941946838: return "IfcPropertyReferenceValue";
		case 1451395588: return "IfcPropertySet";
		case 3357820518: return "IfcPropertySetDefinition";
		case 492091185: return "IfcPropertySetTemplate";
		case 3650150729: return "IfcPropertySingleValue";
		case 110355661: return "IfcPropertyTableValue";
		case 3521284610: return "IfcPropertyTemplate";
		case 1482703590: return "IfcPropertyTemplateDefinition";
		case 738039164: return "IfcProtectiveDevice";
		case 2295281155: return "IfcProtectiveDeviceTrippingUnit";
		case 655969474: return "IfcProtectiveDeviceTrippingUnitType";
		case 1842657554: return "IfcProtectiveDeviceType";
		case 90941305: return "IfcPump";
		case 2250791053: return "IfcPumpType";
		case 2044713172: return "IfcQuantityArea";
		case 2093928680: return "IfcQuantityCount";
		case 931644368: return "IfcQuantityLength";
		case 2691318326: return "IfcQuantityNumber";
		case 2090586900: return "IfcQuantitySet";
		case 3252649465: return "IfcQuantityTime";
		case 2405470396: return "IfcQuantityVolume";
		case 825690147: return "IfcQuantityWeight";
		case 3290496277: return "IfcRail";
		case 1763565496: return "IfcRailType";
		case 2262370178: return "IfcRailing";
		case 2893384427: return "IfcRailingType";
		case 3992365140: return "IfcRailway";
		case 1891881377: return "IfcRailwayPart";
		case 3024970846: return "IfcRamp";
		case 3283111854: return "IfcRampFlight";
		case 2324767716: return "IfcRampFlightType";
		case 1469900589: return "IfcRampType";
		case 1232101972: return "IfcRationalBSplineCurveWithKnots";
		case 683857671: return "IfcRationalBSplineSurfaceWithKnots";
		case 2770003689: return "IfcRectangleHollowProfileDef";
		case 3615266464: return "IfcRectangleProfileDef";
		case 2798486643: return "IfcRectangularPyramid";
		case 3454111270: return "IfcRectangularTrimmedSurface";
		case 3915482550: return "IfcRecurrencePattern";
		case 2433181523: return "IfcReference";
		case 4021432810: return "IfcReferent";
		case 3413951693: return "IfcRegularTimeSeries";
		case 3798194928: return "IfcReinforcedSoil";
		case 1580146022: return "IfcReinforcementBarProperties";
		case 3765753017: return "IfcReinforcementDefinitionProperties";
		case 979691226: return "IfcReinforcingBar";
		case 2572171363: return "IfcReinforcingBarType";
		case 3027567501: return "IfcReinforcingElement";
		case 964333572: return "IfcReinforcingElementType";
		case 2320036040: return "IfcReinforcingMesh";
		case 2310774935: return "IfcReinforcingMeshType";
		case 3818125796: return "IfcRelAdheresToElement";
		case 160246688: return "IfcRelAggregates";
		case 3939117080: return "IfcRelAssigns";
		case 1683148259: return "IfcRelAssignsToActor";
		case 2495723537: return "IfcRelAssignsToControl";
		case 1307041759: return "IfcRelAssignsToGroup";
		case 1027710054: return "IfcRelAssignsToGroupByFactor";
		case 4278684876: return "IfcRelAssignsToProcess";
		case 2857406711: return "IfcRelAssignsToProduct";
		case 205026976: return "IfcRelAssignsToResource";
		case 1865459582: return "IfcRelAssociates";
		case 4095574036: return "IfcRelAssociatesApproval";
		case 919958153: return "IfcRelAssociatesClassification";
		case 2728634034: return "IfcRelAssociatesConstraint";
		case 982818633: return "IfcRelAssociatesDocument";
		case 3840914261: return "IfcRelAssociatesLibrary";
		case 2655215786: return "IfcRelAssociatesMaterial";
		case 1033248425: return "IfcRelAssociatesProfileDef";
		case 826625072: return "IfcRelConnects";
		case 1204542856: return "IfcRelConnectsElements";
		case 3945020480: return "IfcRelConnectsPathElements";
		case 4201705270: return "IfcRelConnectsPortToElement";
		case 3190031847: return "IfcRelConnectsPorts";
		case 2127690289: return "IfcRelConnectsStructuralActivity";
		case 1638771189: return "IfcRelConnectsStructuralMember";
		case 504942748: return "IfcRelConnectsWithEccentricity";
		case 3678494232: return "IfcRelConnectsWithRealizingElements";
		case 3242617779: return "IfcRelContainedInSpatialStructure";
		case 886880790: return "IfcRelCoversBldgElements";
		case 2802773753: return "IfcRelCoversSpaces";
		case 2565941209: return "IfcRelDeclares";
		case 2551354335: return "IfcRelDecomposes";
		case 693640335: return "IfcRelDefines";
		case 1462361463: return "IfcRelDefinesByObject";
		case 4186316022: return "IfcRelDefinesByProperties";
		case 307848117: return "IfcRelDefinesByTemplate";
		case 781010003: return "IfcRelDefinesByType";
		case 3940055652: return "IfcRelFillsElement";
		case 279856033: return "IfcRelFlowControlElements";
		case 427948657: return "IfcRelInterferesElements";
		case 3268803585: return "IfcRelNests";
		case 1441486842: return "IfcRelPositions";
		case 750771296: return "IfcRelProjectsElement";
		case 1245217292: return "IfcRelReferencedInSpatialStructure";
		case 4122056220: return "IfcRelSequence";
		case 366585022: return "IfcRelServicesBuildings";
		case 3451746338: return "IfcRelSpaceBoundary";
		case 3523091289: return "IfcRelSpaceBoundary1stLevel";
		case 1521410863: return "IfcRelSpaceBoundary2ndLevel";
		case 1401173127: return "IfcRelVoidsElement";
		case 478536968: return "IfcRelationship";
		case 816062949: return "IfcReparametrisedCompositeCurveSegment";
		case 1076942058: return "IfcRepresentation";
		case 3377609919: return "IfcRepresentationContext";
		case 3008791417: return "IfcRepresentationItem";
		case 1660063152: return "IfcRepresentationMap";
		case 2914609552: return "IfcResource";
		case 2943643501: return "IfcResourceApprovalRelationship";
		case 1608871552: return "IfcResourceConstraintRelationship";
		case 2439245199: return "IfcResourceLevelRelationship";
		case 1042787934: return "IfcResourceTime";
		case 1856042241: return "IfcRevolvedAreaSolid";
		case 3243963512: return "IfcRevolvedAreaSolidTapered";
		case 4158566097: return "IfcRightCircularCone";
		case 3626867408: return "IfcRightCircularCylinder";
		case 146592293: return "IfcRoad";
		case 550521510: return "IfcRoadPart";
		case 2016517767: return "IfcRoof";
		case 2781568857: return "IfcRoofType";
		case 2341007311: return "IfcRoot";
		case 2778083089: return "IfcRoundedRectangleProfileDef";
		case 448429030: return "IfcSIUnit";
		case 3053780830: return "IfcSanitaryTerminal";
		case 1768891740: return "IfcSanitaryTerminalType";
		case 1054537805: return "IfcSchedulingTime";
		case 2157484638: return "IfcSeamCurve";
		case 3649235739: return "IfcSecondOrderPolynomialSpiral";
		case 2042790032: return "IfcSectionProperties";
		case 4165799628: return "IfcSectionReinforcementProperties";
		case 1862484736: return "IfcSectionedSolid";
		case 1290935644: return "IfcSectionedSolidHorizontal";
		case 1509187699: return "IfcSectionedSpine";
		case 1356537516: return "IfcSectionedSurface";
		case 823603102: return "IfcSegment";
		case 544395925: return "IfcSegmentedReferenceCurve";
		case 4086658281: return "IfcSensor";
		case 1783015770: return "IfcSensorType";
		case 1027922057: return "IfcSeventhOrderPolynomialSpiral";
		case 1329646415: return "IfcShadingDevice";
		case 4074543187: return "IfcShadingDeviceType";
		case 867548509: return "IfcShapeAspect";
		case 3982875396: return "IfcShapeModel";
		case 4240577450: return "IfcShapeRepresentation";
		case 4124623270: return "IfcShellBasedSurfaceModel";
		case 33720170: return "IfcSign";
		case 3599934289: return "IfcSignType";
		case 991950508: return "IfcSignal";
		case 1894708472: return "IfcSignalType";
		case 3692461612: return "IfcSimpleProperty";
		case 3663146110: return "IfcSimplePropertyTemplate";
		case 42703149: return "IfcSineSpiral";
		case 4097777520: return "IfcSite";
		case 1529196076: return "IfcSlab";
		case 2533589738: return "IfcSlabType";
		case 2609359061: return "IfcSlippageConnectionCondition";
		case 3420628829: return "IfcSolarDevice";
		case 1072016465: return "IfcSolarDeviceType";
		case 723233188: return "IfcSolidModel";
		case 3856911033: return "IfcSpace";
		case 1999602285: return "IfcSpaceHeater";
		case 1305183839: return "IfcSpaceHeaterType";
		case 3812236995: return "IfcSpaceType";
		case 1412071761: return "IfcSpatialElement";
		case 710998568: return "IfcSpatialElementType";
		case 2706606064: return "IfcSpatialStructureElement";
		case 3893378262: return "IfcSpatialStructureElementType";
		case 463610769: return "IfcSpatialZone";
		case 2481509218: return "IfcSpatialZoneType";
		case 451544542: return "IfcSphere";
		case 4015995234: return "IfcSphericalSurface";
		case 2735484536: return "IfcSpiral";
		case 1404847402: return "IfcStackTerminal";
		case 3112655638: return "IfcStackTerminalType";
		case 331165859: return "IfcStair";
		case 4252922144: return "IfcStairFlight";
		case 1039846685: return "IfcStairFlightType";
		case 338393293: return "IfcStairType";
		case 682877961: return "IfcStructuralAction";
		case 3544373492: return "IfcStructuralActivity";
		case 2515109513: return "IfcStructuralAnalysisModel";
		case 1179482911: return "IfcStructuralConnection";
		case 2273995522: return "IfcStructuralConnectionCondition";
		case 1004757350: return "IfcStructuralCurveAction";
		case 4243806635: return "IfcStructuralCurveConnection";
		case 214636428: return "IfcStructuralCurveMember";
		case 2445595289: return "IfcStructuralCurveMemberVarying";
		case 2757150158: return "IfcStructuralCurveReaction";
		case 3136571912: return "IfcStructuralItem";
		case 1807405624: return "IfcStructuralLinearAction";
		case 2162789131: return "IfcStructuralLoad";
		case 385403989: return "IfcStructuralLoadCase";
		case 3478079324: return "IfcStructuralLoadConfiguration";
		case 1252848954: return "IfcStructuralLoadGroup";
		case 1595516126: return "IfcStructuralLoadLinearForce";
		case 609421318: return "IfcStructuralLoadOrResult";
		case 2668620305: return "IfcStructuralLoadPlanarForce";
		case 2473145415: return "IfcStructuralLoadSingleDisplacement";
		case 1973038258: return "IfcStructuralLoadSingleDisplacementDistortion";
		case 1597423693: return "IfcStructuralLoadSingleForce";
		case 1190533807: return "IfcStructuralLoadSingleForceWarping";
		case 2525727697: return "IfcStructuralLoadStatic";
		case 3408363356: return "IfcStructuralLoadTemperature";
		case 530289379: return "IfcStructuralMember";
		case 1621171031: return "IfcStructuralPlanarAction";
		case 2082059205: return "IfcStructuralPointAction";
		case 734778138: return "IfcStructuralPointConnection";
		case 1235345126: return "IfcStructuralPointReaction";
		case 3689010777: return "IfcStructuralReaction";
		case 2986769608: return "IfcStructuralResultGroup";
		case 3657597509: return "IfcStructuralSurfaceAction";
		case 1975003073: return "IfcStructuralSurfaceConnection";
		case 3979015343: return "IfcStructuralSurfaceMember";
		case 2218152070: return "IfcStructuralSurfaceMemberVarying";
		case 603775116: return "IfcStructuralSurfaceReaction";
		case 2830218821: return "IfcStyleModel";
		case 3958052878: return "IfcStyledItem";
		case 3049322572: return "IfcStyledRepresentation";
		case 148013059: return "IfcSubContractResource";
		case 4095615324: return "IfcSubContractResourceType";
		case 2233826070: return "IfcSubedge";
		case 2513912981: return "IfcSurface";
		case 699246055: return "IfcSurfaceCurve";
		case 2028607225: return "IfcSurfaceCurveSweptAreaSolid";
		case 3101698114: return "IfcSurfaceFeature";
		case 2809605785: return "IfcSurfaceOfLinearExtrusion";
		case 4124788165: return "IfcSurfaceOfRevolution";
		case 2934153892: return "IfcSurfaceReinforcementArea";
		case 1300840506: return "IfcSurfaceStyle";
		case 3303107099: return "IfcSurfaceStyleLighting";
		case 1607154358: return "IfcSurfaceStyleRefraction";
		case 1878645084: return "IfcSurfaceStyleRendering";
		case 846575682: return "IfcSurfaceStyleShading";
		case 1351298697: return "IfcSurfaceStyleWithTextures";
		case 626085974: return "IfcSurfaceTexture";
		case 2247615214: return "IfcSweptAreaSolid";
		case 1260650574: return "IfcSweptDiskSolid";
		case 1096409881: return "IfcSweptDiskSolidPolygonal";
		case 230924584: return "IfcSweptSurface";
		case 1162798199: return "IfcSwitchingDevice";
		case 2315554128: return "IfcSwitchingDeviceType";
		case 2254336722: return "IfcSystem";
		case 413509423: return "IfcSystemFurnitureElement";
		case 1580310250: return "IfcSystemFurnitureElementType";
		case 3071757647: return "IfcTShapeProfileDef";
		case 985171141: return "IfcTable";
		case 2043862942: return "IfcTableColumn";
		case 531007025: return "IfcTableRow";
		case 812556717: return "IfcTank";
		case 5716631: return "IfcTankType";
		case 3473067441: return "IfcTask";
		case 1549132990: return "IfcTaskTime";
		case 2771591690: return "IfcTaskTimeRecurring";
		case 3206491090: return "IfcTaskType";
		case 912023232: return "IfcTelecomAddress";
		case 3824725483: return "IfcTendon";
		case 2347447852: return "IfcTendonAnchor";
		case 3081323446: return "IfcTendonAnchorType";
		case 3663046924: return "IfcTendonConduit";
		case 2281632017: return "IfcTendonConduitType";
		case 2415094496: return "IfcTendonType";
		case 2387106220: return "IfcTessellatedFaceSet";
		case 901063453: return "IfcTessellatedItem";
		case 4282788508: return "IfcTextLiteral";
		case 3124975700: return "IfcTextLiteralWithExtent";
		case 1447204868: return "IfcTextStyle";
		case 1983826977: return "IfcTextStyleFontModel";
		case 2636378356: return "IfcTextStyleForDefinedFont";
		case 1640371178: return "IfcTextStyleTextModel";
		case 280115917: return "IfcTextureCoordinate";
		case 1742049831: return "IfcTextureCoordinateGenerator";
		case 222769930: return "IfcTextureCoordinateIndices";
		case 1010789467: return "IfcTextureCoordinateIndicesWithVoids";
		case 2552916305: return "IfcTextureMap";
		case 1210645708: return "IfcTextureVertex";
		case 3611470254: return "IfcTextureVertexList";
		case 782932809: return "IfcThirdOrderPolynomialSpiral";
		case 1199560280: return "IfcTimePeriod";
		case 3101149627: return "IfcTimeSeries";
		case 581633288: return "IfcTimeSeriesValue";
		case 1377556343: return "IfcTopologicalRepresentationItem";
		case 1735638870: return "IfcTopologyRepresentation";
		case 1935646853: return "IfcToroidalSurface";
		case 3425753595: return "IfcTrackElement";
		case 618700268: return "IfcTrackElementType";
		case 3825984169: return "IfcTransformer";
		case 1692211062: return "IfcTransformerType";
		case 1620046519: return "IfcTransportElement";
		case 2097647324: return "IfcTransportElementType";
		case 1953115116: return "IfcTransportationDevice";
		case 3665877780: return "IfcTransportationDeviceType";
		case 2715220739: return "IfcTrapeziumProfileDef";
		case 2916149573: return "IfcTriangulatedFaceSet";
		case 1229763772: return "IfcTriangulatedIrregularNetwork";
		case 3593883385: return "IfcTrimmedCurve";
		case 3026737570: return "IfcTubeBundle";
		case 1600972822: return "IfcTubeBundleType";
		case 1628702193: return "IfcTypeObject";
		case 3736923433: return "IfcTypeProcess";
		case 2347495698: return "IfcTypeProduct";
		case 3698973494: return "IfcTypeResource";
		case 427810014: return "IfcUShapeProfileDef";
		case 180925521: return "IfcUnitAssignment";
		case 630975310: return "IfcUnitaryControlElement";
		case 3179687236: return "IfcUnitaryControlElementType";
		case 4292641817: return "IfcUnitaryEquipment";
		case 1911125066: return "IfcUnitaryEquipmentType";
		case 4207607924: return "IfcValve";
		case 728799441: return "IfcValveType";
		case 1417489154: return "IfcVector";
		case 840318589: return "IfcVehicle";
		case 3651464721: return "IfcVehicleType";
		case 2799835756: return "IfcVertex";
		case 2759199220: return "IfcVertexLoop";
		case 1907098498: return "IfcVertexPoint";
		case 1530820697: return "IfcVibrationDamper";
		case 3956297820: return "IfcVibrationDamperType";
		case 2391383451: return "IfcVibrationIsolator";
		case 3313531582: return "IfcVibrationIsolatorType";
		case 2769231204: return "IfcVirtualElement";
		case 891718957: return "IfcVirtualGridIntersection";
		case 926996030: return "IfcVoidingFeature";
		case 2391406946: return "IfcWall";
		case 3512223829: return "IfcWallStandardCase";
		case 1898987631: return "IfcWallType";
		case 4237592921: return "IfcWasteTerminal";
		case 1133259667: return "IfcWasteTerminalType";
		case 3304561284: return "IfcWindow";
		case 336235671: return "IfcWindowLiningProperties";
		case 512836454: return "IfcWindowPanelProperties";
		case 1299126871: return "IfcWindowStyle";
		case 4009809668: return "IfcWindowType";
		case 4088093105: return "IfcWorkCalendar";
		case 1028945134: return "IfcWorkControl";
		case 4218914973: return "IfcWorkPlan";
		case 3342526732: return "IfcWorkSchedule";
		case 1236880293: return "IfcWorkTime";
		case 2543172580: return "IfcZShapeProfileDef";
		case 1033361043: return "IfcZone";
		default: return "unkown entity type"; 
	}
}
