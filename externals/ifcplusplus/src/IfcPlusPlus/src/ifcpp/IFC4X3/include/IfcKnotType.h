/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcKnotType = ENUMERATION OF	(PIECEWISE_BEZIER_KNOTS	,QUASI_UNIFORM_KNOTS	,UNIFORM_KNOTS	,UNSPECIFIED);
	class IFCQUERY_EXPORT IfcKnotType : virtual public BuildingObject
	{
	public:
		enum IfcKnotTypeEnum
		{
			ENUM_PIECEWISE_BEZIER_KNOTS,
			ENUM_QUASI_UNIFORM_KNOTS,
			ENUM_UNIFORM_KNOTS,
			ENUM_UNSPECIFIED
		};

		IfcKnotType() = default;
		IfcKnotType( IfcKnotTypeEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 2053683727; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
		static shared_ptr<IfcKnotType> createObjectFromSTEP( const std::string& arg, const std::map<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream );
		IfcKnotTypeEnum m_enum;
	};
}
