/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#include <sstream>
#include <limits>
#include <map>
#include "ifcpp/reader/ReaderUtil.h"
#include "ifcpp/writer/WriterUtil.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingException.h"
#include "ifcpp/IFC4X3/include/IfcObjectTypeEnum.h"

// TYPE IfcObjectTypeEnum = ENUMERATION OF	(ACTOR	,CONTROL	,GROUP	,PROCESS	,PRODUCT	,PROJECT	,RESOURCE	,NOTDEFINED);
void IFC4X3::IfcObjectTypeEnum::getStepParameter( std::stringstream& stream, bool is_select_type ) const
{
	if( is_select_type ) { stream << "IFCOBJECTTYPEENUM("; }
	switch( m_enum )
	{
		case ENUM_ACTOR:	stream << ".ACTOR."; break;
		case ENUM_CONTROL:	stream << ".CONTROL."; break;
		case ENUM_GROUP:	stream << ".GROUP."; break;
		case ENUM_PROCESS:	stream << ".PROCESS."; break;
		case ENUM_PRODUCT:	stream << ".PRODUCT."; break;
		case ENUM_PROJECT:	stream << ".PROJECT."; break;
		case ENUM_RESOURCE:	stream << ".RESOURCE."; break;
		case ENUM_NOTDEFINED:	stream << ".NOTDEFINED."; break;
	}
	if( is_select_type ) { stream << ")"; }
}
shared_ptr<IFC4X3::IfcObjectTypeEnum> IFC4X3::IfcObjectTypeEnum::createObjectFromSTEP( const std::string& arg, const std::map<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )
{
	if( arg.compare( "$" ) == 0 ) { return shared_ptr<IfcObjectTypeEnum>(); }
	if( arg.compare( "*" ) == 0 ) { return shared_ptr<IfcObjectTypeEnum>(); }
	shared_ptr<IfcObjectTypeEnum> type_object( new IfcObjectTypeEnum() );
	if( std_iequal( arg, ".ACTOR." ) )
	{
		type_object->m_enum = IfcObjectTypeEnum::ENUM_ACTOR;
	}
	else if( std_iequal( arg, ".CONTROL." ) )
	{
		type_object->m_enum = IfcObjectTypeEnum::ENUM_CONTROL;
	}
	else if( std_iequal( arg, ".GROUP." ) )
	{
		type_object->m_enum = IfcObjectTypeEnum::ENUM_GROUP;
	}
	else if( std_iequal( arg, ".PROCESS." ) )
	{
		type_object->m_enum = IfcObjectTypeEnum::ENUM_PROCESS;
	}
	else if( std_iequal( arg, ".PRODUCT." ) )
	{
		type_object->m_enum = IfcObjectTypeEnum::ENUM_PRODUCT;
	}
	else if( std_iequal( arg, ".PROJECT." ) )
	{
		type_object->m_enum = IfcObjectTypeEnum::ENUM_PROJECT;
	}
	else if( std_iequal( arg, ".RESOURCE." ) )
	{
		type_object->m_enum = IfcObjectTypeEnum::ENUM_RESOURCE;
	}
	else if( std_iequal( arg, ".NOTDEFINED." ) )
	{
		type_object->m_enum = IfcObjectTypeEnum::ENUM_NOTDEFINED;
	}
	return type_object;
}
